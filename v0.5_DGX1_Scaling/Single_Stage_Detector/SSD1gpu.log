Clearing caches

:::MLPv0.5.0 ssd 1556666897.771862268 (<string>:1) run_clear_caches
Launching on node dgx1
+ pids+=($!)
+ set +x
++ eval echo
+++ echo
+ docker exec -e DGXSYSTEM=DGX1 -e MULTI_NODE= -e SLURM_JOB_ID=190430111559 -e SLURM_NTASKS_PER_NODE= cont_190430111559 ./run_and_time.sh
Run vars: id 190430111559 gpus 8 mparams 
DGX1
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export TORCH_MODEL_ZOO=/data/torchvision
+ TORCH_MODEL_ZOO=/data/torchvision
STARTING TIMING RUN AT 2019-04-30 11:28:18 PM
running benchmark
+ python train.py --use-fp16 --jit --delay-allreduce --epochs 70 --warmup-factor 0 --lr 2.5e-3 --eval-batch-size 108 --no-save --threshold=0.212 --data /data/coco2017 --batch-size 152 --warmup 300 --nhwc --pad-input
0 Using seed = 1030653638

:::MLPv0.5.0 ssd 1556666900.426914215 (train.py:371) run_start

:::MLPv0.5.0 ssd 1556666900.427357197 (train.py:178) feature_sizes: [38, 19, 10, 5, 3, 1]

:::MLPv0.5.0 ssd 1556666900.427721024 (train.py:180) steps: [8, 16, 32, 64, 100, 300]

:::MLPv0.5.0 ssd 1556666900.428077936 (train.py:183) scales: [21, 45, 99, 153, 207, 261, 315]

:::MLPv0.5.0 ssd 1556666900.428440571 (train.py:185) aspect_ratios: [[2], [2, 3], [2, 3], [2, 3], [2], [2]]

:::MLPv0.5.0 ssd 1556666900.481545210 (train.py:188) num_default_boxes: 8732

:::MLPv0.5.0 ssd 1556666900.482452154 (/workspace/single_stage_detector/utils.py:391) num_cropping_iterations: 1

:::MLPv0.5.0 ssd 1556666900.483304977 (/workspace/single_stage_detector/utils.py:510) random_flip_probability: 0.5

:::MLPv0.5.0 ssd 1556666900.484023809 (/workspace/single_stage_detector/utils.py:553) data_normalization_mean: [0.485, 0.456, 0.406]

:::MLPv0.5.0 ssd 1556666900.484755754 (/workspace/single_stage_detector/utils.py:554) data_normalization_std: [0.229, 0.224, 0.225]

:::MLPv0.5.0 ssd 1556666900.485443830 (train.py:382) input_size: 300
loading annotations into memory...
Done (t=0.50s)
creating index...
index created!
time_check a: 1556666901.420657158
time_check b: 1556666923.656839371

:::MLPv0.5.0 ssd 1556666928.571646214 (train.py:413) input_order

:::MLPv0.5.0 ssd 1556666928.572502613 (train.py:414) input_batch_size: 152

:::MLPv0.5.0 ssd 1556666929.237584591 (/workspace/single_stage_detector/ssd300.py:47) backbone: "resnet34"

:::MLPv0.5.0 ssd 1556666929.238398314 (/workspace/single_stage_detector/ssd300.py:52) loc_conf_out_channels: [256, 512, 512, 256, 256, 256]

:::MLPv0.5.0 ssd 1556666929.293689489 (/workspace/single_stage_detector/ssd300.py:69) num_defaults_per_cell: [4, 6, 6, 6, 4, 4]

:::MLPv0.5.0 ssd 1556666929.648479223 (train.py:476) opt_name: "SGD"

:::MLPv0.5.0 ssd 1556666929.649224043 (train.py:477) opt_learning_rate: 0.012

:::MLPv0.5.0 ssd 1556666929.649875402 (train.py:478) opt_momentum: 0.9

:::MLPv0.5.0 ssd 1556666929.650523424 (train.py:480) opt_weight_decay: 0.0005

:::MLPv0.5.0 ssd 1556666929.651183844 (train.py:483) opt_learning_rate_warmup_steps: 300

:::MLPv0.5.0 ssd 1556666930.267097235 (/workspace/single_stage_detector/ssd300.py:47) backbone: "resnet34"

:::MLPv0.5.0 ssd 1556666930.267897606 (/workspace/single_stage_detector/ssd300.py:52) loc_conf_out_channels: [256, 512, 512, 256, 256, 256]

:::MLPv0.5.0 ssd 1556666930.323654175 (/workspace/single_stage_detector/ssd300.py:69) num_defaults_per_cell: [4, 6, 6, 6, 4, 4]
epoch nbatch loss

:::MLPv0.5.0 ssd 1556666933.992202997 (train.py:551) train_loop

:::MLPv0.5.0 ssd 1556666933.992605209 (train.py:553) train_epoch: 0

:::MLPv0.5.0 ssd 1556666933.994967222 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 0, "value": 0.0}
Iteration:      0, Loss function: 22.881, Average Loss: 0.023, avg. samples / sec: 1311.22

:::MLPv0.5.0 ssd 1556666935.986894131 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 1, "value": 4.0000000000000105e-05}

:::MLPv0.5.0 ssd 1556666936.361908197 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 2, "value": 7.999999999999848e-05}

:::MLPv0.5.0 ssd 1556666936.726307154 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 3, "value": 0.00011999999999999858}

:::MLPv0.5.0 ssd 1556666937.161049366 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 4, "value": 0.00015999999999999868}

:::MLPv0.5.0 ssd 1556666937.591898918 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 5, "value": 0.0001999999999999988}

:::MLPv0.5.0 ssd 1556666938.013721943 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 6, "value": 0.0002399999999999989}

:::MLPv0.5.0 ssd 1556666938.426385403 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 7, "value": 0.000279999999999999}

:::MLPv0.5.0 ssd 1556666938.832101345 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 8, "value": 0.0003199999999999991}

:::MLPv0.5.0 ssd 1556666939.219922543 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 9, "value": 0.0003599999999999992}

:::MLPv0.5.0 ssd 1556666939.649079323 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 10, "value": 0.0003999999999999993}

:::MLPv0.5.0 ssd 1556666940.054970026 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 11, "value": 0.0004399999999999994}

:::MLPv0.5.0 ssd 1556666940.457127333 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 12, "value": 0.0004799999999999995}

:::MLPv0.5.0 ssd 1556666940.873818874 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 13, "value": 0.0005199999999999996}

:::MLPv0.5.0 ssd 1556666941.246350050 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 14, "value": 0.0005599999999999997}

:::MLPv0.5.0 ssd 1556666941.605824232 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 15, "value": 0.0005999999999999998}

:::MLPv0.5.0 ssd 1556666941.984436989 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 16, "value": 0.0006399999999999999}

:::MLPv0.5.0 ssd 1556666942.380592585 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 17, "value": 0.00068}

:::MLPv0.5.0 ssd 1556666942.758847713 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 18, "value": 0.0007200000000000002}

:::MLPv0.5.0 ssd 1556666943.182874680 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 19, "value": 0.0007599999999999985}

:::MLPv0.5.0 ssd 1556666943.566160917 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 20, "value": 0.0007999999999999986}
Iteration:     20, Loss function: 20.613, Average Loss: 0.446, avg. samples / sec: 317.86

:::MLPv0.5.0 ssd 1556666943.977792978 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 21, "value": 0.0008399999999999987}

:::MLPv0.5.0 ssd 1556666944.361382484 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 22, "value": 0.0008799999999999988}

:::MLPv0.5.0 ssd 1556666944.773726225 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 23, "value": 0.0009199999999999989}

:::MLPv0.5.0 ssd 1556666945.182670593 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 24, "value": 0.000959999999999999}

:::MLPv0.5.0 ssd 1556666945.548233747 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 25, "value": 0.0009999999999999992}

:::MLPv0.5.0 ssd 1556666945.917006731 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 26, "value": 0.0010399999999999993}

:::MLPv0.5.0 ssd 1556666946.306581974 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 27, "value": 0.0010799999999999994}

:::MLPv0.5.0 ssd 1556666946.677325726 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 28, "value": 0.0011199999999999995}

:::MLPv0.5.0 ssd 1556666947.058111668 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 29, "value": 0.0011599999999999996}

:::MLPv0.5.0 ssd 1556666947.451181889 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 30, "value": 0.0011999999999999997}

:::MLPv0.5.0 ssd 1556666947.845036745 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 31, "value": 0.0012399999999999998}

:::MLPv0.5.0 ssd 1556666948.230634451 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 32, "value": 0.0012799999999999999}

:::MLPv0.5.0 ssd 1556666948.616688013 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 33, "value": 0.00132}

:::MLPv0.5.0 ssd 1556666949.004267931 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 34, "value": 0.00136}

:::MLPv0.5.0 ssd 1556666949.419506073 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 35, "value": 0.0014000000000000002}

:::MLPv0.5.0 ssd 1556666949.816762924 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 36, "value": 0.0014399999999999986}

:::MLPv0.5.0 ssd 1556666950.129477739 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 37, "value": 0.0014799999999999987}

:::MLPv0.5.0 ssd 1556666950.529022694 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 38, "value": 0.0015199999999999988}

:::MLPv0.5.0 ssd 1556666950.920651674 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 39, "value": 0.0015599999999999989}

:::MLPv0.5.0 ssd 1556666951.285189390 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 40, "value": 0.001599999999999999}
Iteration:     40, Loss function: 20.749, Average Loss: 0.846, avg. samples / sec: 393.86

:::MLPv0.5.0 ssd 1556666951.628723145 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 41, "value": 0.001639999999999999}

:::MLPv0.5.0 ssd 1556666951.970284462 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 42, "value": 0.0016799999999999992}

:::MLPv0.5.0 ssd 1556666952.348344803 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 43, "value": 0.0017199999999999993}

:::MLPv0.5.0 ssd 1556666952.701221466 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 44, "value": 0.0017599999999999994}

:::MLPv0.5.0 ssd 1556666953.080573797 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 45, "value": 0.0017999999999999995}

:::MLPv0.5.0 ssd 1556666953.420676708 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 46, "value": 0.0018399999999999996}

:::MLPv0.5.0 ssd 1556666953.816472769 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 47, "value": 0.0018799999999999997}

:::MLPv0.5.0 ssd 1556666954.218139172 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 48, "value": 0.0019199999999999998}

:::MLPv0.5.0 ssd 1556666954.593014717 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 49, "value": 0.00196}

:::MLPv0.5.0 ssd 1556666954.961692810 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 50, "value": 0.002}

:::MLPv0.5.0 ssd 1556666955.340747833 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 51, "value": 0.00204}

:::MLPv0.5.0 ssd 1556666955.656224966 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 52, "value": 0.0020800000000000003}

:::MLPv0.5.0 ssd 1556666956.020930052 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 53, "value": 0.0021199999999999986}

:::MLPv0.5.0 ssd 1556666956.342759609 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 54, "value": 0.0021599999999999987}

:::MLPv0.5.0 ssd 1556666956.685516357 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 55, "value": 0.002199999999999999}

:::MLPv0.5.0 ssd 1556666957.093645096 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 56, "value": 0.002239999999999999}

:::MLPv0.5.0 ssd 1556666957.461486101 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 57, "value": 0.002279999999999999}

:::MLPv0.5.0 ssd 1556666957.859353065 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 58, "value": 0.002319999999999999}

:::MLPv0.5.0 ssd 1556666958.214026213 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 59, "value": 0.0023599999999999993}

:::MLPv0.5.0 ssd 1556666958.571668386 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 60, "value": 0.0023999999999999994}
Iteration:     60, Loss function: 19.856, Average Loss: 1.228, avg. samples / sec: 417.16

:::MLPv0.5.0 ssd 1556666958.960860252 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 61, "value": 0.0024399999999999995}

:::MLPv0.5.0 ssd 1556666959.312437534 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 62, "value": 0.0024799999999999996}

:::MLPv0.5.0 ssd 1556666959.642577648 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 63, "value": 0.0025199999999999997}

:::MLPv0.5.0 ssd 1556666960.034248114 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 64, "value": 0.0025599999999999998}

:::MLPv0.5.0 ssd 1556666960.435296059 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 65, "value": 0.0026}

:::MLPv0.5.0 ssd 1556666960.771865129 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 66, "value": 0.00264}

:::MLPv0.5.0 ssd 1556666961.105123997 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 67, "value": 0.00268}

:::MLPv0.5.0 ssd 1556666961.515355825 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 68, "value": 0.00272}

:::MLPv0.5.0 ssd 1556666961.907898664 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 69, "value": 0.0027600000000000003}

:::MLPv0.5.0 ssd 1556666962.259610415 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 70, "value": 0.0027999999999999987}

:::MLPv0.5.0 ssd 1556666962.569030046 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 71, "value": 0.0028399999999999988}

:::MLPv0.5.0 ssd 1556666962.919113398 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 72, "value": 0.002879999999999999}

:::MLPv0.5.0 ssd 1556666963.308815956 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 73, "value": 0.002919999999999999}

:::MLPv0.5.0 ssd 1556666963.670372963 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 74, "value": 0.002959999999999999}

:::MLPv0.5.0 ssd 1556666964.002952337 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 75, "value": 0.002999999999999999}

:::MLPv0.5.0 ssd 1556666964.363290787 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 76, "value": 0.0030399999999999993}

:::MLPv0.5.0 ssd 1556666964.707954645 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 77, "value": 0.0030799999999999994}

:::MLPv0.5.0 ssd 1556666965.047924519 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 78, "value": 0.0031199999999999995}

:::MLPv0.5.0 ssd 1556666965.376057148 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 79, "value": 0.0031599999999999996}

:::MLPv0.5.0 ssd 1556666965.767678499 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 80, "value": 0.0031999999999999997}
Iteration:     80, Loss function: 16.248, Average Loss: 1.575, avg. samples / sec: 422.47

:::MLPv0.5.0 ssd 1556666966.136624336 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 81, "value": 0.00324}

:::MLPv0.5.0 ssd 1556666966.494853020 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 82, "value": 0.00328}

:::MLPv0.5.0 ssd 1556666966.821749687 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 83, "value": 0.00332}

:::MLPv0.5.0 ssd 1556666967.140142441 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 84, "value": 0.00336}

:::MLPv0.5.0 ssd 1556666967.518305540 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 85, "value": 0.0034000000000000002}

:::MLPv0.5.0 ssd 1556666967.828608036 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 86, "value": 0.0034400000000000003}

:::MLPv0.5.0 ssd 1556666968.139157772 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 87, "value": 0.0034799999999999987}

:::MLPv0.5.0 ssd 1556666968.447484970 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 88, "value": 0.003519999999999999}

:::MLPv0.5.0 ssd 1556666968.746176004 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 89, "value": 0.003559999999999999}

:::MLPv0.5.0 ssd 1556666969.042396307 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 90, "value": 0.003599999999999999}

:::MLPv0.5.0 ssd 1556666969.346887827 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 91, "value": 0.003639999999999999}

:::MLPv0.5.0 ssd 1556666969.642955303 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 92, "value": 0.0036799999999999992}

:::MLPv0.5.0 ssd 1556666969.957304478 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 93, "value": 0.0037199999999999993}

:::MLPv0.5.0 ssd 1556666970.253730774 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 94, "value": 0.0037599999999999995}

:::MLPv0.5.0 ssd 1556666970.558111429 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 95, "value": 0.0037999999999999996}

:::MLPv0.5.0 ssd 1556666970.878430128 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 96, "value": 0.0038399999999999997}

:::MLPv0.5.0 ssd 1556666971.238843203 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 97, "value": 0.0038799999999999998}

:::MLPv0.5.0 ssd 1556666971.623492241 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 98, "value": 0.00392}

:::MLPv0.5.0 ssd 1556666971.915040016 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 99, "value": 0.00396}

:::MLPv0.5.0 ssd 1556666972.217620373 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 100, "value": 0.004}
Iteration:    100, Loss function: 11.233, Average Loss: 1.802, avg. samples / sec: 471.34

:::MLPv0.5.0 ssd 1556666972.525904894 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 101, "value": 0.00404}

:::MLPv0.5.0 ssd 1556666972.897471905 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 102, "value": 0.00408}

:::MLPv0.5.0 ssd 1556666973.268959999 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 103, "value": 0.00412}

:::MLPv0.5.0 ssd 1556666973.625812531 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 104, "value": 0.004159999999999999}

:::MLPv0.5.0 ssd 1556666973.961102247 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 105, "value": 0.0042}

:::MLPv0.5.0 ssd 1556666974.325725794 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 106, "value": 0.00424}

:::MLPv0.5.0 ssd 1556666974.630556822 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 107, "value": 0.00428}

:::MLPv0.5.0 ssd 1556666974.950076818 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 108, "value": 0.004319999999999999}

:::MLPv0.5.0 ssd 1556666975.278725147 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 109, "value": 0.004359999999999999}

:::MLPv0.5.0 ssd 1556666975.609294891 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 110, "value": 0.004399999999999999}

:::MLPv0.5.0 ssd 1556666975.986945868 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 111, "value": 0.0044399999999999995}

:::MLPv0.5.0 ssd 1556666976.356027842 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 112, "value": 0.00448}

:::MLPv0.5.0 ssd 1556666976.705211401 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 113, "value": 0.00452}

:::MLPv0.5.0 ssd 1556666977.002670288 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 114, "value": 0.00456}

:::MLPv0.5.0 ssd 1556666977.304970264 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 115, "value": 0.0046}

:::MLPv0.5.0 ssd 1556666977.612058401 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 116, "value": 0.00464}

:::MLPv0.5.0 ssd 1556666977.902629614 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 117, "value": 0.004679999999999999}

:::MLPv0.5.0 ssd 1556666978.201004982 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 118, "value": 0.004719999999999999}

:::MLPv0.5.0 ssd 1556666978.517333746 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 119, "value": 0.0047599999999999995}

:::MLPv0.5.0 ssd 1556666978.823152542 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 120, "value": 0.0048}
Iteration:    120, Loss function: 9.508, Average Loss: 1.968, avg. samples / sec: 460.14

:::MLPv0.5.0 ssd 1556666979.127882004 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 121, "value": 0.00484}

:::MLPv0.5.0 ssd 1556666979.423247814 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 122, "value": 0.00488}

:::MLPv0.5.0 ssd 1556666979.729130983 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 123, "value": 0.00492}

:::MLPv0.5.0 ssd 1556666980.025694370 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 124, "value": 0.00496}

:::MLPv0.5.0 ssd 1556666980.334042311 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 125, "value": 0.005}

:::MLPv0.5.0 ssd 1556666980.648151398 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 126, "value": 0.005039999999999999}

:::MLPv0.5.0 ssd 1556666980.946242332 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 127, "value": 0.0050799999999999994}

:::MLPv0.5.0 ssd 1556666981.239901543 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 128, "value": 0.0051199999999999996}

:::MLPv0.5.0 ssd 1556666981.552179813 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 129, "value": 0.00516}

:::MLPv0.5.0 ssd 1556666981.852369308 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 130, "value": 0.0052}

:::MLPv0.5.0 ssd 1556666982.145263672 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 131, "value": 0.00524}

:::MLPv0.5.0 ssd 1556666982.436196089 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 132, "value": 0.00528}

:::MLPv0.5.0 ssd 1556666982.746436596 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 133, "value": 0.00532}

:::MLPv0.5.0 ssd 1556666983.057459354 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 134, "value": 0.005359999999999999}

:::MLPv0.5.0 ssd 1556666983.354599476 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 135, "value": 0.005399999999999999}

:::MLPv0.5.0 ssd 1556666983.648513079 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 136, "value": 0.0054399999999999995}

:::MLPv0.5.0 ssd 1556666983.957156181 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 137, "value": 0.00548}

:::MLPv0.5.0 ssd 1556666984.262899876 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 138, "value": 0.00552}

:::MLPv0.5.0 ssd 1556666984.571234703 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 139, "value": 0.00556}

:::MLPv0.5.0 ssd 1556666984.864814520 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 140, "value": 0.0056}
Iteration:    140, Loss function: 9.332, Average Loss: 2.116, avg. samples / sec: 503.11

:::MLPv0.5.0 ssd 1556666985.171818018 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 141, "value": 0.00564}

:::MLPv0.5.0 ssd 1556666985.465298414 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 142, "value": 0.00568}

:::MLPv0.5.0 ssd 1556666985.756515503 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 143, "value": 0.005719999999999999}

:::MLPv0.5.0 ssd 1556666986.054088354 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 144, "value": 0.0057599999999999995}

:::MLPv0.5.0 ssd 1556666986.362521648 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 145, "value": 0.0058}

:::MLPv0.5.0 ssd 1556666986.656301498 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 146, "value": 0.00584}

:::MLPv0.5.0 ssd 1556666986.961663485 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 147, "value": 0.00588}

:::MLPv0.5.0 ssd 1556666987.255794287 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 148, "value": 0.00592}

:::MLPv0.5.0 ssd 1556666987.549469471 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 149, "value": 0.00596}

:::MLPv0.5.0 ssd 1556666987.856691122 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 150, "value": 0.006}

:::MLPv0.5.0 ssd 1556666988.146560669 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 151, "value": 0.006039999999999999}

:::MLPv0.5.0 ssd 1556666988.450721979 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 152, "value": 0.0060799999999999995}

:::MLPv0.5.0 ssd 1556666988.759369373 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 153, "value": 0.00612}

:::MLPv0.5.0 ssd 1556666989.068551779 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 154, "value": 0.00616}

:::MLPv0.5.0 ssd 1556666989.379781961 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 155, "value": 0.0062}

:::MLPv0.5.0 ssd 1556666989.688197136 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 156, "value": 0.00624}

:::MLPv0.5.0 ssd 1556666989.979498386 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 157, "value": 0.00628}

:::MLPv0.5.0 ssd 1556666990.271976471 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 158, "value": 0.00632}

:::MLPv0.5.0 ssd 1556666990.582836628 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 159, "value": 0.00636}

:::MLPv0.5.0 ssd 1556666990.893759251 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 160, "value": 0.0063999999999999994}
Iteration:    160, Loss function: 8.963, Average Loss: 2.258, avg. samples / sec: 503.93

:::MLPv0.5.0 ssd 1556666991.191590071 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 161, "value": 0.0064399999999999995}

:::MLPv0.5.0 ssd 1556666991.495988369 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 162, "value": 0.00648}

:::MLPv0.5.0 ssd 1556666991.788057089 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 163, "value": 0.00652}

:::MLPv0.5.0 ssd 1556666992.087078571 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 164, "value": 0.00656}

:::MLPv0.5.0 ssd 1556666992.398330450 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 165, "value": 0.0066}

:::MLPv0.5.0 ssd 1556666992.739155054 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 166, "value": 0.00664}

:::MLPv0.5.0 ssd 1556666993.043164015 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 167, "value": 0.00668}

:::MLPv0.5.0 ssd 1556666993.384123087 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 168, "value": 0.006719999999999999}

:::MLPv0.5.0 ssd 1556666993.725300312 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 169, "value": 0.0067599999999999995}

:::MLPv0.5.0 ssd 1556666994.033731937 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 170, "value": 0.0068}

:::MLPv0.5.0 ssd 1556666994.359597206 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 171, "value": 0.00684}

:::MLPv0.5.0 ssd 1556666994.667465925 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 172, "value": 0.00688}

:::MLPv0.5.0 ssd 1556666994.962008238 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 173, "value": 0.00692}

:::MLPv0.5.0 ssd 1556666995.270495176 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 174, "value": 0.00696}

:::MLPv0.5.0 ssd 1556666995.566591263 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 175, "value": 0.007}

:::MLPv0.5.0 ssd 1556666995.870509624 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 176, "value": 0.00704}

:::MLPv0.5.0 ssd 1556666996.162136316 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 177, "value": 0.0070799999999999995}

:::MLPv0.5.0 ssd 1556666996.457838535 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 178, "value": 0.00712}

:::MLPv0.5.0 ssd 1556666996.769275665 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 179, "value": 0.00716}

:::MLPv0.5.0 ssd 1556666997.062167645 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 180, "value": 0.0072}
Iteration:    180, Loss function: 8.849, Average Loss: 2.391, avg. samples / sec: 493.14

:::MLPv0.5.0 ssd 1556666997.354369640 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 181, "value": 0.00724}

:::MLPv0.5.0 ssd 1556666997.653144598 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 182, "value": 0.00728}

:::MLPv0.5.0 ssd 1556666997.961627483 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 183, "value": 0.00732}

:::MLPv0.5.0 ssd 1556666998.257557392 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 184, "value": 0.00736}

:::MLPv0.5.0 ssd 1556666998.566565037 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 185, "value": 0.0073999999999999995}

:::MLPv0.5.0 ssd 1556666998.869988680 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 186, "value": 0.0074399999999999996}

:::MLPv0.5.0 ssd 1556666999.162447691 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 187, "value": 0.00748}

:::MLPv0.5.0 ssd 1556666999.459251404 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 188, "value": 0.00752}

:::MLPv0.5.0 ssd 1556666999.754935265 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 189, "value": 0.00756}

:::MLPv0.5.0 ssd 1556667000.067719698 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 190, "value": 0.0076}

:::MLPv0.5.0 ssd 1556667000.359978676 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 191, "value": 0.00764}

:::MLPv0.5.0 ssd 1556667000.654568672 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 192, "value": 0.00768}

:::MLPv0.5.0 ssd 1556667000.949698448 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 193, "value": 0.00772}

:::MLPv0.5.0 ssd 1556667001.241558552 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 194, "value": 0.0077599999999999995}

:::MLPv0.5.0 ssd 1556667001.545429945 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 195, "value": 0.0078}

:::MLPv0.5.0 ssd 1556667001.838228226 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 196, "value": 0.00784}

:::MLPv0.5.0 ssd 1556667002.144011259 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 197, "value": 0.00788}

:::MLPv0.5.0 ssd 1556667002.439943314 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 198, "value": 0.00792}

:::MLPv0.5.0 ssd 1556667002.730563641 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 199, "value": 0.00796}

:::MLPv0.5.0 ssd 1556667003.022369385 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 200, "value": 0.008}
Iteration:    200, Loss function: 8.738, Average Loss: 2.519, avg. samples / sec: 510.08

:::MLPv0.5.0 ssd 1556667003.314994335 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 201, "value": 0.00804}

:::MLPv0.5.0 ssd 1556667003.623530149 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 202, "value": 0.00808}

:::MLPv0.5.0 ssd 1556667003.931557894 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 203, "value": 0.00812}

:::MLPv0.5.0 ssd 1556667004.238962889 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 204, "value": 0.00816}

:::MLPv0.5.0 ssd 1556667004.531253576 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 205, "value": 0.008199999999999999}

:::MLPv0.5.0 ssd 1556667004.827818394 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 206, "value": 0.00824}

:::MLPv0.5.0 ssd 1556667005.142241716 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 207, "value": 0.00828}

:::MLPv0.5.0 ssd 1556667005.434279442 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 208, "value": 0.008320000000000001}

:::MLPv0.5.0 ssd 1556667005.725523710 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 209, "value": 0.00836}

:::MLPv0.5.0 ssd 1556667006.023395300 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 210, "value": 0.0084}

:::MLPv0.5.0 ssd 1556667006.331804752 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 211, "value": 0.00844}

:::MLPv0.5.0 ssd 1556667006.637390137 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 212, "value": 0.00848}

:::MLPv0.5.0 ssd 1556667006.932605028 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 213, "value": 0.00852}

:::MLPv0.5.0 ssd 1556667007.224613190 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 214, "value": 0.00856}

:::MLPv0.5.0 ssd 1556667007.534397125 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 215, "value": 0.0086}

:::MLPv0.5.0 ssd 1556667007.829600334 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 216, "value": 0.00864}

:::MLPv0.5.0 ssd 1556667008.123671293 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 217, "value": 0.00868}

:::MLPv0.5.0 ssd 1556667008.416841984 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 218, "value": 0.00872}

:::MLPv0.5.0 ssd 1556667008.709898233 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 219, "value": 0.00876}

:::MLPv0.5.0 ssd 1556667009.002964020 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 220, "value": 0.0088}
Iteration:    220, Loss function: 8.428, Average Loss: 2.638, avg. samples / sec: 508.12

:::MLPv0.5.0 ssd 1556667009.299708366 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 221, "value": 0.00884}

:::MLPv0.5.0 ssd 1556667009.592832804 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 222, "value": 0.008879999999999999}

:::MLPv0.5.0 ssd 1556667009.886709452 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 223, "value": 0.00892}

:::MLPv0.5.0 ssd 1556667010.180990934 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 224, "value": 0.00896}

:::MLPv0.5.0 ssd 1556667010.474453449 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 225, "value": 0.009000000000000001}

:::MLPv0.5.0 ssd 1556667010.765494823 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 226, "value": 0.00904}

:::MLPv0.5.0 ssd 1556667011.061860561 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 227, "value": 0.00908}

:::MLPv0.5.0 ssd 1556667011.358610630 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 228, "value": 0.00912}

:::MLPv0.5.0 ssd 1556667011.669706583 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 229, "value": 0.00916}

:::MLPv0.5.0 ssd 1556667011.963097572 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 230, "value": 0.0092}

:::MLPv0.5.0 ssd 1556667012.273860693 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 231, "value": 0.00924}

:::MLPv0.5.0 ssd 1556667012.566805840 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 232, "value": 0.00928}

:::MLPv0.5.0 ssd 1556667012.859484673 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 233, "value": 0.00932}

:::MLPv0.5.0 ssd 1556667013.157384396 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 234, "value": 0.00936}

:::MLPv0.5.0 ssd 1556667013.450992584 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 235, "value": 0.0094}

:::MLPv0.5.0 ssd 1556667013.744208813 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 236, "value": 0.00944}

:::MLPv0.5.0 ssd 1556667014.044330597 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 237, "value": 0.00948}

:::MLPv0.5.0 ssd 1556667014.338883877 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 238, "value": 0.00952}

:::MLPv0.5.0 ssd 1556667014.630234718 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 239, "value": 0.009559999999999999}

:::MLPv0.5.0 ssd 1556667014.922468901 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 240, "value": 0.009600000000000001}
Iteration:    240, Loss function: 8.331, Average Loss: 2.753, avg. samples / sec: 513.70

:::MLPv0.5.0 ssd 1556667015.218142986 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 241, "value": 0.00964}

:::MLPv0.5.0 ssd 1556667015.514297485 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 242, "value": 0.009680000000000001}

:::MLPv0.5.0 ssd 1556667015.808875322 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 243, "value": 0.00972}

:::MLPv0.5.0 ssd 1556667016.102769375 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 244, "value": 0.00976}

:::MLPv0.5.0 ssd 1556667016.412221670 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 245, "value": 0.0098}

:::MLPv0.5.0 ssd 1556667016.706104040 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 246, "value": 0.00984}

:::MLPv0.5.0 ssd 1556667017.018773317 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 247, "value": 0.00988}

:::MLPv0.5.0 ssd 1556667017.313460588 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 248, "value": 0.00992}

:::MLPv0.5.0 ssd 1556667017.605751753 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 249, "value": 0.00996}

:::MLPv0.5.0 ssd 1556667017.919439793 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 250, "value": 0.01}

:::MLPv0.5.0 ssd 1556667018.236351728 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 251, "value": 0.01004}

:::MLPv0.5.0 ssd 1556667018.529934883 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 252, "value": 0.01008}

:::MLPv0.5.0 ssd 1556667018.824802876 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 253, "value": 0.01012}

:::MLPv0.5.0 ssd 1556667019.135480165 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 254, "value": 0.01016}

:::MLPv0.5.0 ssd 1556667019.432405949 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 255, "value": 0.0102}

:::MLPv0.5.0 ssd 1556667019.727455139 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 256, "value": 0.01024}

:::MLPv0.5.0 ssd 1556667020.021039009 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 257, "value": 0.010280000000000001}

:::MLPv0.5.0 ssd 1556667020.327067375 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 258, "value": 0.01032}

:::MLPv0.5.0 ssd 1556667020.635568857 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 259, "value": 0.01036}

:::MLPv0.5.0 ssd 1556667020.930860043 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 260, "value": 0.0104}
Iteration:    260, Loss function: 8.305, Average Loss: 2.864, avg. samples / sec: 506.02

:::MLPv0.5.0 ssd 1556667021.236760616 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 261, "value": 0.01044}

:::MLPv0.5.0 ssd 1556667021.529704809 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 262, "value": 0.01048}

:::MLPv0.5.0 ssd 1556667021.819654703 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 263, "value": 0.01052}

:::MLPv0.5.0 ssd 1556667022.126659393 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 264, "value": 0.01056}

:::MLPv0.5.0 ssd 1556667022.421429157 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 265, "value": 0.0106}

:::MLPv0.5.0 ssd 1556667022.713619232 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 266, "value": 0.01064}

:::MLPv0.5.0 ssd 1556667023.007055759 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 267, "value": 0.01068}

:::MLPv0.5.0 ssd 1556667023.299950361 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 268, "value": 0.01072}

:::MLPv0.5.0 ssd 1556667023.592653513 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 269, "value": 0.01076}

:::MLPv0.5.0 ssd 1556667023.899109364 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 270, "value": 0.0108}

:::MLPv0.5.0 ssd 1556667024.191860676 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 271, "value": 0.01084}

:::MLPv0.5.0 ssd 1556667024.484644413 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 272, "value": 0.01088}

:::MLPv0.5.0 ssd 1556667024.778244972 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 273, "value": 0.010920000000000001}

:::MLPv0.5.0 ssd 1556667025.072731018 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 274, "value": 0.010960000000000001}

:::MLPv0.5.0 ssd 1556667025.366631508 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 275, "value": 0.011}

:::MLPv0.5.0 ssd 1556667025.659766674 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 276, "value": 0.01104}

:::MLPv0.5.0 ssd 1556667025.954362154 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 277, "value": 0.01108}

:::MLPv0.5.0 ssd 1556667026.248393297 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 278, "value": 0.01112}

:::MLPv0.5.0 ssd 1556667026.543919086 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 279, "value": 0.01116}

:::MLPv0.5.0 ssd 1556667026.839899540 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 280, "value": 0.0112}
Iteration:    280, Loss function: 8.188, Average Loss: 2.973, avg. samples / sec: 514.40

:::MLPv0.5.0 ssd 1556667027.135668755 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 281, "value": 0.01124}

:::MLPv0.5.0 ssd 1556667027.430212498 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 282, "value": 0.01128}

:::MLPv0.5.0 ssd 1556667027.723982811 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 283, "value": 0.01132}

:::MLPv0.5.0 ssd 1556667028.018077850 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 284, "value": 0.01136}

:::MLPv0.5.0 ssd 1556667028.310150862 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 285, "value": 0.0114}

:::MLPv0.5.0 ssd 1556667028.603522301 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 286, "value": 0.01144}

:::MLPv0.5.0 ssd 1556667028.895988226 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 287, "value": 0.01148}

:::MLPv0.5.0 ssd 1556667029.189692974 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 288, "value": 0.01152}

:::MLPv0.5.0 ssd 1556667029.485469103 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 289, "value": 0.01156}

:::MLPv0.5.0 ssd 1556667029.778459549 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 290, "value": 0.011600000000000001}

:::MLPv0.5.0 ssd 1556667030.071081877 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 291, "value": 0.011640000000000001}

:::MLPv0.5.0 ssd 1556667030.363463163 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 292, "value": 0.01168}

:::MLPv0.5.0 ssd 1556667030.656553984 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 293, "value": 0.01172}

:::MLPv0.5.0 ssd 1556667030.953903198 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 294, "value": 0.01176}

:::MLPv0.5.0 ssd 1556667031.248034954 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 295, "value": 0.0118}

:::MLPv0.5.0 ssd 1556667031.545358181 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 296, "value": 0.01184}

:::MLPv0.5.0 ssd 1556667031.854493856 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 297, "value": 0.01188}

:::MLPv0.5.0 ssd 1556667032.154175282 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 298, "value": 0.01192}

:::MLPv0.5.0 ssd 1556667032.447756052 (train.py:349) opt_learning_rate: {"epoch": 0, "iteration": 299, "value": 0.01196}
Iteration:    300, Loss function: 8.135, Average Loss: 3.076, avg. samples / sec: 515.34
Iteration:    320, Loss function: 8.063, Average Loss: 3.172, avg. samples / sec: 513.35
Iteration:    340, Loss function: 7.765, Average Loss: 3.265, avg. samples / sec: 512.97
Iteration:    360, Loss function: 7.771, Average Loss: 3.353, avg. samples / sec: 513.22
Iteration:    380, Loss function: 7.280, Average Loss: 3.438, avg. samples / sec: 515.00
Iteration:    400, Loss function: 7.447, Average Loss: 3.520, avg. samples / sec: 513.51
Iteration:    420, Loss function: 7.409, Average Loss: 3.599, avg. samples / sec: 515.38
Iteration:    440, Loss function: 7.490, Average Loss: 3.675, avg. samples / sec: 514.53
Iteration:    460, Loss function: 7.206, Average Loss: 3.747, avg. samples / sec: 511.27
Iteration:    480, Loss function: 7.576, Average Loss: 3.816, avg. samples / sec: 515.66
Iteration:    500, Loss function: 7.153, Average Loss: 3.884, avg. samples / sec: 512.92
Iteration:    520, Loss function: 6.971, Average Loss: 3.949, avg. samples / sec: 516.68
Iteration:    540, Loss function: 6.963, Average Loss: 4.011, avg. samples / sec: 515.59
Iteration:    560, Loss function: 6.915, Average Loss: 4.071, avg. samples / sec: 515.95
Iteration:    580, Loss function: 7.072, Average Loss: 4.129, avg. samples / sec: 510.55
Iteration:    600, Loss function: 6.680, Average Loss: 4.184, avg. samples / sec: 515.36
Iteration:    620, Loss function: 6.807, Average Loss: 4.238, avg. samples / sec: 516.24
Iteration:    640, Loss function: 6.765, Average Loss: 4.291, avg. samples / sec: 515.69
Iteration:    660, Loss function: 6.579, Average Loss: 4.340, avg. samples / sec: 514.70
Iteration:    680, Loss function: 7.003, Average Loss: 4.389, avg. samples / sec: 517.31
Iteration:    700, Loss function: 6.659, Average Loss: 4.435, avg. samples / sec: 515.77
Iteration:    720, Loss function: 6.682, Average Loss: 4.480, avg. samples / sec: 516.35
Iteration:    740, Loss function: 6.583, Average Loss: 4.522, avg. samples / sec: 516.18
Iteration:    760, Loss function: 6.859, Average Loss: 4.562, avg. samples / sec: 514.28

:::MLPv0.5.0 ssd 1556667174.014775038 (train.py:553) train_epoch: 1
Iteration:    780, Loss function: 6.445, Average Loss: 4.601, avg. samples / sec: 516.10
Iteration:    800, Loss function: 6.659, Average Loss: 4.639, avg. samples / sec: 515.59
Iteration:    820, Loss function: 6.598, Average Loss: 4.675, avg. samples / sec: 513.61
Iteration:    840, Loss function: 6.325, Average Loss: 4.709, avg. samples / sec: 517.35
Iteration:    860, Loss function: 6.354, Average Loss: 4.742, avg. samples / sec: 512.59
Iteration:    880, Loss function: 6.361, Average Loss: 4.774, avg. samples / sec: 515.65
Iteration:    900, Loss function: 6.165, Average Loss: 4.804, avg. samples / sec: 516.17
Iteration:    920, Loss function: 6.272, Average Loss: 4.833, avg. samples / sec: 516.27
Iteration:    940, Loss function: 6.098, Average Loss: 4.861, avg. samples / sec: 513.43
Iteration:    960, Loss function: 6.484, Average Loss: 4.891, avg. samples / sec: 514.28
Iteration:    980, Loss function: 6.423, Average Loss: 4.917, avg. samples / sec: 513.38
Iteration:   1000, Loss function: 6.068, Average Loss: 4.941, avg. samples / sec: 514.43
Iteration:   1020, Loss function: 6.034, Average Loss: 4.964, avg. samples / sec: 517.95
Iteration:   1040, Loss function: 6.276, Average Loss: 4.987, avg. samples / sec: 514.88
Iteration:   1060, Loss function: 6.231, Average Loss: 5.009, avg. samples / sec: 514.31
Iteration:   1080, Loss function: 6.069, Average Loss: 5.030, avg. samples / sec: 512.59
Iteration:   1100, Loss function: 5.813, Average Loss: 5.050, avg. samples / sec: 515.59
Iteration:   1120, Loss function: 5.875, Average Loss: 5.068, avg. samples / sec: 515.93
Iteration:   1140, Loss function: 5.928, Average Loss: 5.086, avg. samples / sec: 513.37
Iteration:   1160, Loss function: 5.985, Average Loss: 5.103, avg. samples / sec: 512.11
Iteration:   1180, Loss function: 5.830, Average Loss: 5.119, avg. samples / sec: 514.17
Iteration:   1200, Loss function: 5.892, Average Loss: 5.136, avg. samples / sec: 516.49
Iteration:   1220, Loss function: 6.001, Average Loss: 5.152, avg. samples / sec: 516.23
Iteration:   1240, Loss function: 5.918, Average Loss: 5.166, avg. samples / sec: 513.85
Iteration:   1260, Loss function: 5.905, Average Loss: 5.178, avg. samples / sec: 516.51
Iteration:   1280, Loss function: 5.687, Average Loss: 5.190, avg. samples / sec: 515.11
Iteration:   1300, Loss function: 5.770, Average Loss: 5.202, avg. samples / sec: 514.51
Iteration:   1320, Loss function: 5.857, Average Loss: 5.214, avg. samples / sec: 515.36
Iteration:   1340, Loss function: 5.761, Average Loss: 5.224, avg. samples / sec: 512.46
Iteration:   1360, Loss function: 5.741, Average Loss: 5.235, avg. samples / sec: 516.43
Iteration:   1380, Loss function: 5.554, Average Loss: 5.245, avg. samples / sec: 512.98
Iteration:   1400, Loss function: 5.708, Average Loss: 5.254, avg. samples / sec: 516.95
Iteration:   1420, Loss function: 5.646, Average Loss: 5.263, avg. samples / sec: 513.86
Iteration:   1440, Loss function: 5.627, Average Loss: 5.271, avg. samples / sec: 515.40
Iteration:   1460, Loss function: 5.597, Average Loss: 5.279, avg. samples / sec: 516.32
Iteration:   1480, Loss function: 5.301, Average Loss: 5.285, avg. samples / sec: 515.75
Iteration:   1500, Loss function: 5.632, Average Loss: 5.292, avg. samples / sec: 515.98
Iteration:   1520, Loss function: 5.705, Average Loss: 5.297, avg. samples / sec: 517.15
Iteration:   1540, Loss function: 5.722, Average Loss: 5.302, avg. samples / sec: 516.48

:::MLPv0.5.0 ssd 1556667403.616609812 (train.py:553) train_epoch: 2
Iteration:   1560, Loss function: 5.516, Average Loss: 5.308, avg. samples / sec: 515.43
Iteration:   1580, Loss function: 5.408, Average Loss: 5.314, avg. samples / sec: 515.71
Iteration:   1600, Loss function: 5.571, Average Loss: 5.318, avg. samples / sec: 514.72
Iteration:   1620, Loss function: 5.596, Average Loss: 5.321, avg. samples / sec: 512.85
Iteration:   1640, Loss function: 5.603, Average Loss: 5.325, avg. samples / sec: 515.53
Iteration:   1660, Loss function: 5.504, Average Loss: 5.329, avg. samples / sec: 515.71
Iteration:   1680, Loss function: 5.639, Average Loss: 5.332, avg. samples / sec: 516.52
Iteration:   1700, Loss function: 5.428, Average Loss: 5.335, avg. samples / sec: 515.94
Iteration:   1720, Loss function: 5.305, Average Loss: 5.338, avg. samples / sec: 515.51
Iteration:   1740, Loss function: 5.664, Average Loss: 5.342, avg. samples / sec: 515.75
Iteration:   1760, Loss function: 5.410, Average Loss: 5.345, avg. samples / sec: 515.88
Iteration:   1780, Loss function: 5.380, Average Loss: 5.345, avg. samples / sec: 516.32
Iteration:   1800, Loss function: 5.413, Average Loss: 5.347, avg. samples / sec: 514.20
Iteration:   1820, Loss function: 5.302, Average Loss: 5.349, avg. samples / sec: 513.73
Iteration:   1840, Loss function: 5.641, Average Loss: 5.350, avg. samples / sec: 515.15
Iteration:   1860, Loss function: 5.374, Average Loss: 5.351, avg. samples / sec: 514.39
Iteration:   1880, Loss function: 5.238, Average Loss: 5.352, avg. samples / sec: 516.39
Iteration:   1900, Loss function: 5.233, Average Loss: 5.353, avg. samples / sec: 514.82
Iteration:   1920, Loss function: 5.257, Average Loss: 5.352, avg. samples / sec: 516.01
Iteration:   1940, Loss function: 5.302, Average Loss: 5.353, avg. samples / sec: 515.96
Iteration:   1960, Loss function: 5.212, Average Loss: 5.352, avg. samples / sec: 515.94
Iteration:   1980, Loss function: 5.374, Average Loss: 5.352, avg. samples / sec: 515.68
Iteration:   2000, Loss function: 5.002, Average Loss: 5.351, avg. samples / sec: 516.20
Iteration:   2020, Loss function: 5.548, Average Loss: 5.349, avg. samples / sec: 514.18
Iteration:   2040, Loss function: 4.888, Average Loss: 5.347, avg. samples / sec: 515.83
Iteration:   2060, Loss function: 5.316, Average Loss: 5.346, avg. samples / sec: 516.37
Iteration:   2080, Loss function: 5.448, Average Loss: 5.345, avg. samples / sec: 514.10
Iteration:   2100, Loss function: 5.484, Average Loss: 5.344, avg. samples / sec: 515.81
Iteration:   2120, Loss function: 5.166, Average Loss: 5.342, avg. samples / sec: 514.09
Iteration:   2140, Loss function: 5.330, Average Loss: 5.341, avg. samples / sec: 515.07
Iteration:   2160, Loss function: 5.199, Average Loss: 5.339, avg. samples / sec: 513.90
Iteration:   2180, Loss function: 5.067, Average Loss: 5.336, avg. samples / sec: 514.19
Iteration:   2200, Loss function: 5.083, Average Loss: 5.334, avg. samples / sec: 516.07
Iteration:   2220, Loss function: 5.320, Average Loss: 5.332, avg. samples / sec: 515.11
Iteration:   2240, Loss function: 5.180, Average Loss: 5.329, avg. samples / sec: 515.34
Iteration:   2260, Loss function: 5.055, Average Loss: 5.326, avg. samples / sec: 514.70
Iteration:   2280, Loss function: 5.235, Average Loss: 5.324, avg. samples / sec: 516.34
Iteration:   2300, Loss function: 5.063, Average Loss: 5.320, avg. samples / sec: 515.77
Iteration:   2320, Loss function: 5.324, Average Loss: 5.316, avg. samples / sec: 515.31

:::MLPv0.5.0 ssd 1556667633.113967180 (train.py:553) train_epoch: 3
Iteration:   2340, Loss function: 4.855, Average Loss: 5.314, avg. samples / sec: 514.99
Iteration:   2360, Loss function: 4.993, Average Loss: 5.310, avg. samples / sec: 515.19
Iteration:   2380, Loss function: 5.215, Average Loss: 5.307, avg. samples / sec: 514.74
Iteration:   2400, Loss function: 5.039, Average Loss: 5.302, avg. samples / sec: 515.85
Iteration:   2420, Loss function: 5.195, Average Loss: 5.299, avg. samples / sec: 515.64
Iteration:   2440, Loss function: 5.087, Average Loss: 5.297, avg. samples / sec: 516.00
Iteration:   2460, Loss function: 5.130, Average Loss: 5.292, avg. samples / sec: 515.65
Iteration:   2480, Loss function: 5.258, Average Loss: 5.288, avg. samples / sec: 515.86
Iteration:   2500, Loss function: 5.028, Average Loss: 5.284, avg. samples / sec: 514.34
Iteration:   2520, Loss function: 4.958, Average Loss: 5.282, avg. samples / sec: 515.49
Iteration:   2540, Loss function: 4.882, Average Loss: 5.278, avg. samples / sec: 515.18
Iteration:   2560, Loss function: 5.004, Average Loss: 5.274, avg. samples / sec: 515.31
Iteration:   2580, Loss function: 4.950, Average Loss: 5.269, avg. samples / sec: 515.80
Iteration:   2600, Loss function: 5.151, Average Loss: 5.266, avg. samples / sec: 515.19
Iteration:   2620, Loss function: 5.171, Average Loss: 5.262, avg. samples / sec: 514.61
Iteration:   2640, Loss function: 4.977, Average Loss: 5.258, avg. samples / sec: 516.07
Iteration:   2660, Loss function: 5.151, Average Loss: 5.254, avg. samples / sec: 516.23
Iteration:   2680, Loss function: 4.947, Average Loss: 5.250, avg. samples / sec: 515.95
Iteration:   2700, Loss function: 5.038, Average Loss: 5.247, avg. samples / sec: 515.47
Iteration:   2720, Loss function: 5.078, Average Loss: 5.243, avg. samples / sec: 515.66
Iteration:   2740, Loss function: 5.087, Average Loss: 5.239, avg. samples / sec: 515.70
Iteration:   2760, Loss function: 4.947, Average Loss: 5.234, avg. samples / sec: 513.95
Iteration:   2780, Loss function: 5.081, Average Loss: 5.229, avg. samples / sec: 512.63
Iteration:   2800, Loss function: 4.798, Average Loss: 5.224, avg. samples / sec: 513.10
Iteration:   2820, Loss function: 4.887, Average Loss: 5.218, avg. samples / sec: 512.81
Iteration:   2840, Loss function: 4.952, Average Loss: 5.214, avg. samples / sec: 514.73
Iteration:   2860, Loss function: 4.998, Average Loss: 5.210, avg. samples / sec: 514.07
Iteration:   2880, Loss function: 4.782, Average Loss: 5.205, avg. samples / sec: 515.27
Iteration:   2900, Loss function: 5.082, Average Loss: 5.200, avg. samples / sec: 513.52
Iteration:   2920, Loss function: 4.750, Average Loss: 5.196, avg. samples / sec: 514.00
Iteration:   2940, Loss function: 4.985, Average Loss: 5.191, avg. samples / sec: 515.21
Iteration:   2960, Loss function: 4.892, Average Loss: 5.187, avg. samples / sec: 515.77
Iteration:   2980, Loss function: 4.591, Average Loss: 5.181, avg. samples / sec: 515.29
Iteration:   3000, Loss function: 5.001, Average Loss: 5.177, avg. samples / sec: 515.72
Iteration:   3020, Loss function: 5.119, Average Loss: 5.172, avg. samples / sec: 516.18
Iteration:   3040, Loss function: 5.028, Average Loss: 5.167, avg. samples / sec: 515.27
Iteration:   3060, Loss function: 5.039, Average Loss: 5.163, avg. samples / sec: 515.73
Iteration:   3080, Loss function: 4.887, Average Loss: 5.157, avg. samples / sec: 515.72
Iteration:   3100, Loss function: 5.135, Average Loss: 5.151, avg. samples / sec: 514.85

:::MLPv0.5.0 ssd 1556667862.693829298 (train.py:553) train_epoch: 4
Iteration:   3120, Loss function: 4.696, Average Loss: 5.147, avg. samples / sec: 515.72
Iteration:   3140, Loss function: 4.844, Average Loss: 5.141, avg. samples / sec: 514.68
Iteration:   3160, Loss function: 4.875, Average Loss: 5.136, avg. samples / sec: 515.83
Iteration:   3180, Loss function: 4.776, Average Loss: 5.130, avg. samples / sec: 516.05
Iteration:   3200, Loss function: 5.029, Average Loss: 5.126, avg. samples / sec: 516.05
Iteration:   3220, Loss function: 5.092, Average Loss: 5.122, avg. samples / sec: 514.56
Iteration:   3240, Loss function: 4.892, Average Loss: 5.116, avg. samples / sec: 516.21
Iteration:   3260, Loss function: 4.873, Average Loss: 5.111, avg. samples / sec: 516.47
Iteration:   3280, Loss function: 4.797, Average Loss: 5.107, avg. samples / sec: 515.33
Iteration:   3300, Loss function: 4.630, Average Loss: 5.103, avg. samples / sec: 514.76
Iteration:   3320, Loss function: 4.902, Average Loss: 5.099, avg. samples / sec: 514.55
Iteration:   3340, Loss function: 4.748, Average Loss: 5.093, avg. samples / sec: 516.30
Iteration:   3360, Loss function: 4.749, Average Loss: 5.087, avg. samples / sec: 516.94
Iteration:   3380, Loss function: 4.884, Average Loss: 5.083, avg. samples / sec: 515.75
Iteration:   3400, Loss function: 4.666, Average Loss: 5.078, avg. samples / sec: 515.75
Iteration:   3420, Loss function: 4.944, Average Loss: 5.074, avg. samples / sec: 515.93
Iteration:   3440, Loss function: 4.787, Average Loss: 5.069, avg. samples / sec: 515.96
Iteration:   3460, Loss function: 4.731, Average Loss: 5.064, avg. samples / sec: 516.39
Iteration:   3480, Loss function: 4.912, Average Loss: 5.059, avg. samples / sec: 514.30
Iteration:   3500, Loss function: 4.590, Average Loss: 5.054, avg. samples / sec: 516.02
Iteration:   3520, Loss function: 4.981, Average Loss: 5.048, avg. samples / sec: 516.53
Iteration:   3540, Loss function: 4.846, Average Loss: 5.044, avg. samples / sec: 516.51
Iteration:   3560, Loss function: 4.804, Average Loss: 5.038, avg. samples / sec: 516.06
Iteration:   3580, Loss function: 4.782, Average Loss: 5.033, avg. samples / sec: 516.10
Iteration:   3600, Loss function: 4.737, Average Loss: 5.026, avg. samples / sec: 516.70
Iteration:   3620, Loss function: 4.951, Average Loss: 5.022, avg. samples / sec: 516.41
Iteration:   3640, Loss function: 4.826, Average Loss: 5.017, avg. samples / sec: 515.86
Iteration:   3660, Loss function: 4.693, Average Loss: 5.012, avg. samples / sec: 515.76
Iteration:   3680, Loss function: 4.494, Average Loss: 5.008, avg. samples / sec: 514.63
Iteration:   3700, Loss function: 4.531, Average Loss: 5.003, avg. samples / sec: 515.92
Iteration:   3720, Loss function: 4.940, Average Loss: 4.999, avg. samples / sec: 516.28
Iteration:   3740, Loss function: 4.753, Average Loss: 4.994, avg. samples / sec: 516.33
Iteration:   3760, Loss function: 4.642, Average Loss: 4.988, avg. samples / sec: 514.40
Iteration:   3780, Loss function: 4.514, Average Loss: 4.982, avg. samples / sec: 514.77
Iteration:   3800, Loss function: 4.714, Average Loss: 4.978, avg. samples / sec: 515.25
Iteration:   3820, Loss function: 5.221, Average Loss: 4.973, avg. samples / sec: 514.92
Iteration:   3840, Loss function: 4.463, Average Loss: 4.969, avg. samples / sec: 515.92
Iteration:   3860, Loss function: 4.621, Average Loss: 4.963, avg. samples / sec: 516.21
Iteration:   3880, Loss function: 4.857, Average Loss: 4.959, avg. samples / sec: 515.33

:::MLPv0.5.0 ssd 1556668092.303932905 (train.py:553) train_epoch: 5
Iteration:   3900, Loss function: 4.613, Average Loss: 4.954, avg. samples / sec: 513.81
Iteration:   3920, Loss function: 4.362, Average Loss: 4.949, avg. samples / sec: 515.36
Iteration:   3940, Loss function: 4.629, Average Loss: 4.944, avg. samples / sec: 514.83
Iteration:   3960, Loss function: 4.621, Average Loss: 4.939, avg. samples / sec: 514.91
Iteration:   3980, Loss function: 5.053, Average Loss: 4.935, avg. samples / sec: 515.29
Iteration:   4000, Loss function: 4.695, Average Loss: 4.931, avg. samples / sec: 516.53
Iteration:   4020, Loss function: 4.686, Average Loss: 4.926, avg. samples / sec: 515.08
Iteration:   4040, Loss function: 4.792, Average Loss: 4.921, avg. samples / sec: 516.29
Iteration:   4060, Loss function: 4.850, Average Loss: 4.916, avg. samples / sec: 516.35
Iteration:   4080, Loss function: 4.824, Average Loss: 4.912, avg. samples / sec: 516.94
Iteration:   4100, Loss function: 4.763, Average Loss: 4.908, avg. samples / sec: 516.36
Iteration:   4120, Loss function: 4.757, Average Loss: 4.903, avg. samples / sec: 514.67
Iteration:   4140, Loss function: 4.744, Average Loss: 4.898, avg. samples / sec: 515.29
Iteration:   4160, Loss function: 4.712, Average Loss: 4.894, avg. samples / sec: 516.42
Iteration:   4180, Loss function: 4.757, Average Loss: 4.890, avg. samples / sec: 516.31
Iteration:   4200, Loss function: 4.564, Average Loss: 4.886, avg. samples / sec: 515.89
Iteration:   4220, Loss function: 4.769, Average Loss: 4.883, avg. samples / sec: 516.02
Iteration:   4240, Loss function: 4.738, Average Loss: 4.879, avg. samples / sec: 515.28
Iteration:   4260, Loss function: 4.527, Average Loss: 4.874, avg. samples / sec: 514.45
Iteration:   4280, Loss function: 4.649, Average Loss: 4.870, avg. samples / sec: 515.55
Iteration:   4300, Loss function: 4.547, Average Loss: 4.865, avg. samples / sec: 517.01
Iteration:   4320, Loss function: 4.614, Average Loss: 4.861, avg. samples / sec: 515.73
Iteration:   4340, Loss function: 4.437, Average Loss: 4.856, avg. samples / sec: 516.04
Iteration:   4360, Loss function: 4.697, Average Loss: 4.851, avg. samples / sec: 514.86
Iteration:   4380, Loss function: 4.633, Average Loss: 4.846, avg. samples / sec: 516.64
Iteration:   4400, Loss function: 4.781, Average Loss: 4.843, avg. samples / sec: 516.20
Iteration:   4420, Loss function: 4.399, Average Loss: 4.839, avg. samples / sec: 516.41
Iteration:   4440, Loss function: 4.542, Average Loss: 4.834, avg. samples / sec: 516.27
Iteration:   4460, Loss function: 4.742, Average Loss: 4.831, avg. samples / sec: 516.03
Iteration:   4480, Loss function: 4.802, Average Loss: 4.827, avg. samples / sec: 516.72
Iteration:   4500, Loss function: 4.632, Average Loss: 4.823, avg. samples / sec: 515.45
Iteration:   4520, Loss function: 4.632, Average Loss: 4.819, avg. samples / sec: 515.79
Iteration:   4540, Loss function: 4.622, Average Loss: 4.815, avg. samples / sec: 516.39
Iteration:   4560, Loss function: 4.644, Average Loss: 4.811, avg. samples / sec: 516.40
Iteration:   4580, Loss function: 4.400, Average Loss: 4.806, avg. samples / sec: 515.45
Iteration:   4600, Loss function: 4.634, Average Loss: 4.802, avg. samples / sec: 515.69
Iteration:   4620, Loss function: 4.197, Average Loss: 4.797, avg. samples / sec: 516.59
Iteration:   4640, Loss function: 4.380, Average Loss: 4.791, avg. samples / sec: 515.05
Iteration:   4660, Loss function: 4.420, Average Loss: 4.787, avg. samples / sec: 514.74

:::MLPv0.5.0 ssd 1556668321.597503901 (train.py:553) train_epoch: 6
Iteration:   4680, Loss function: 4.647, Average Loss: 4.784, avg. samples / sec: 513.51
Iteration:   4700, Loss function: 4.592, Average Loss: 4.780, avg. samples / sec: 514.28
Iteration:   4720, Loss function: 4.511, Average Loss: 4.775, avg. samples / sec: 515.05
Iteration:   4740, Loss function: 4.375, Average Loss: 4.771, avg. samples / sec: 514.88
Iteration:   4760, Loss function: 4.637, Average Loss: 4.768, avg. samples / sec: 516.13
Iteration:   4780, Loss function: 4.504, Average Loss: 4.765, avg. samples / sec: 515.43
Iteration:   4800, Loss function: 4.411, Average Loss: 4.760, avg. samples / sec: 515.72
Iteration:   4820, Loss function: 4.656, Average Loss: 4.756, avg. samples / sec: 514.35
Iteration:   4840, Loss function: 4.610, Average Loss: 4.751, avg. samples / sec: 516.14
Iteration:   4860, Loss function: 4.756, Average Loss: 4.749, avg. samples / sec: 515.85
Iteration:   4880, Loss function: 4.247, Average Loss: 4.746, avg. samples / sec: 515.93
Iteration:   4900, Loss function: 4.489, Average Loss: 4.741, avg. samples / sec: 514.82
Iteration:   4920, Loss function: 4.407, Average Loss: 4.737, avg. samples / sec: 515.52
Iteration:   4940, Loss function: 4.624, Average Loss: 4.735, avg. samples / sec: 514.38
Iteration:   4960, Loss function: 4.674, Average Loss: 4.732, avg. samples / sec: 513.53
Iteration:   4980, Loss function: 4.625, Average Loss: 4.728, avg. samples / sec: 515.11
Iteration:   5000, Loss function: 4.745, Average Loss: 4.725, avg. samples / sec: 514.99
Iteration:   5020, Loss function: 4.525, Average Loss: 4.722, avg. samples / sec: 515.51
Iteration:   5040, Loss function: 4.471, Average Loss: 4.718, avg. samples / sec: 514.75
Iteration:   5060, Loss function: 4.592, Average Loss: 4.713, avg. samples / sec: 515.77
Iteration:   5080, Loss function: 4.615, Average Loss: 4.711, avg. samples / sec: 515.91
Iteration:   5100, Loss function: 4.780, Average Loss: 4.708, avg. samples / sec: 516.43
Iteration:   5120, Loss function: 4.458, Average Loss: 4.703, avg. samples / sec: 515.80
Iteration:   5140, Loss function: 4.609, Average Loss: 4.698, avg. samples / sec: 515.15
Iteration:   5160, Loss function: 4.566, Average Loss: 4.695, avg. samples / sec: 515.92
Iteration:   5180, Loss function: 4.438, Average Loss: 4.691, avg. samples / sec: 516.00
Iteration:   5200, Loss function: 4.458, Average Loss: 4.689, avg. samples / sec: 515.57
Iteration:   5220, Loss function: 4.701, Average Loss: 4.684, avg. samples / sec: 515.50
Iteration:   5240, Loss function: 4.615, Average Loss: 4.681, avg. samples / sec: 514.50
Iteration:   5260, Loss function: 4.343, Average Loss: 4.678, avg. samples / sec: 514.14
Iteration:   5280, Loss function: 4.656, Average Loss: 4.675, avg. samples / sec: 515.13
Iteration:   5300, Loss function: 4.668, Average Loss: 4.672, avg. samples / sec: 515.52
Iteration:   5320, Loss function: 4.604, Average Loss: 4.668, avg. samples / sec: 515.16
Iteration:   5340, Loss function: 4.529, Average Loss: 4.664, avg. samples / sec: 515.92
Iteration:   5360, Loss function: 4.411, Average Loss: 4.660, avg. samples / sec: 515.51
Iteration:   5380, Loss function: 4.502, Average Loss: 4.656, avg. samples / sec: 515.56
Iteration:   5400, Loss function: 4.349, Average Loss: 4.652, avg. samples / sec: 515.23
Iteration:   5420, Loss function: 4.409, Average Loss: 4.647, avg. samples / sec: 514.27
Iteration:   5440, Loss function: 4.510, Average Loss: 4.644, avg. samples / sec: 513.85

:::MLPv0.5.0 ssd 1556668551.115923405 (train.py:553) train_epoch: 7
Iteration:   5460, Loss function: 4.355, Average Loss: 4.641, avg. samples / sec: 515.61
Iteration:   5480, Loss function: 4.477, Average Loss: 4.638, avg. samples / sec: 514.35
Iteration:   5500, Loss function: 4.174, Average Loss: 4.634, avg. samples / sec: 514.77
Iteration:   5520, Loss function: 4.280, Average Loss: 4.630, avg. samples / sec: 516.43
Iteration:   5540, Loss function: 4.605, Average Loss: 4.629, avg. samples / sec: 515.70
Iteration:   5560, Loss function: 4.444, Average Loss: 4.627, avg. samples / sec: 516.08
Iteration:   5580, Loss function: 4.600, Average Loss: 4.623, avg. samples / sec: 516.44
Iteration:   5600, Loss function: 4.175, Average Loss: 4.619, avg. samples / sec: 515.64
Iteration:   5620, Loss function: 4.326, Average Loss: 4.617, avg. samples / sec: 514.01
Iteration:   5640, Loss function: 4.525, Average Loss: 4.615, avg. samples / sec: 515.18
Iteration:   5660, Loss function: 4.330, Average Loss: 4.612, avg. samples / sec: 514.05
Iteration:   5680, Loss function: 4.418, Average Loss: 4.608, avg. samples / sec: 515.14
Iteration:   5700, Loss function: 4.349, Average Loss: 4.604, avg. samples / sec: 515.46
Iteration:   5720, Loss function: 4.610, Average Loss: 4.603, avg. samples / sec: 514.59
Iteration:   5740, Loss function: 4.406, Average Loss: 4.600, avg. samples / sec: 515.51
Iteration:   5760, Loss function: 4.314, Average Loss: 4.598, avg. samples / sec: 515.75
Iteration:   5780, Loss function: 4.347, Average Loss: 4.595, avg. samples / sec: 514.70
Iteration:   5800, Loss function: 4.356, Average Loss: 4.592, avg. samples / sec: 513.76
Iteration:   5820, Loss function: 4.365, Average Loss: 4.589, avg. samples / sec: 515.53
Iteration:   5840, Loss function: 4.547, Average Loss: 4.585, avg. samples / sec: 515.18
Iteration:   5860, Loss function: 4.588, Average Loss: 4.583, avg. samples / sec: 514.11
Iteration:   5880, Loss function: 4.475, Average Loss: 4.581, avg. samples / sec: 514.43
Iteration:   5900, Loss function: 4.517, Average Loss: 4.577, avg. samples / sec: 515.58
Iteration:   5920, Loss function: 4.358, Average Loss: 4.574, avg. samples / sec: 514.13
Iteration:   5940, Loss function: 4.104, Average Loss: 4.570, avg. samples / sec: 514.80
Iteration:   5960, Loss function: 4.627, Average Loss: 4.567, avg. samples / sec: 514.82
Iteration:   5980, Loss function: 4.624, Average Loss: 4.565, avg. samples / sec: 514.97
Iteration:   6000, Loss function: 4.540, Average Loss: 4.562, avg. samples / sec: 515.94
Iteration:   6020, Loss function: 4.452, Average Loss: 4.559, avg. samples / sec: 514.16
Iteration:   6040, Loss function: 4.393, Average Loss: 4.557, avg. samples / sec: 513.08
Iteration:   6060, Loss function: 4.465, Average Loss: 4.554, avg. samples / sec: 516.09
Iteration:   6080, Loss function: 4.475, Average Loss: 4.551, avg. samples / sec: 515.42
Iteration:   6100, Loss function: 4.586, Average Loss: 4.548, avg. samples / sec: 516.35
Iteration:   6120, Loss function: 4.604, Average Loss: 4.546, avg. samples / sec: 516.55
Iteration:   6140, Loss function: 4.552, Average Loss: 4.543, avg. samples / sec: 516.23
Iteration:   6160, Loss function: 4.513, Average Loss: 4.540, avg. samples / sec: 516.31
Iteration:   6180, Loss function: 4.296, Average Loss: 4.537, avg. samples / sec: 514.31
Iteration:   6200, Loss function: 4.215, Average Loss: 4.533, avg. samples / sec: 515.75
Iteration:   6220, Loss function: 4.562, Average Loss: 4.531, avg. samples / sec: 516.73

:::MLPv0.5.0 ssd 1556668780.633856773 (train.py:553) train_epoch: 8
Iteration:   6240, Loss function: 4.500, Average Loss: 4.529, avg. samples / sec: 516.00
Iteration:   6260, Loss function: 4.386, Average Loss: 4.526, avg. samples / sec: 516.53
Iteration:   6280, Loss function: 4.500, Average Loss: 4.523, avg. samples / sec: 515.91
Iteration:   6300, Loss function: 4.381, Average Loss: 4.519, avg. samples / sec: 515.05
Iteration:   6320, Loss function: 4.393, Average Loss: 4.519, avg. samples / sec: 514.78
Iteration:   6340, Loss function: 4.469, Average Loss: 4.516, avg. samples / sec: 516.43
Iteration:   6360, Loss function: 4.182, Average Loss: 4.513, avg. samples / sec: 516.45
Iteration:   6380, Loss function: 4.265, Average Loss: 4.510, avg. samples / sec: 515.65
Iteration:   6400, Loss function: 4.488, Average Loss: 4.507, avg. samples / sec: 514.99
Iteration:   6420, Loss function: 4.298, Average Loss: 4.505, avg. samples / sec: 516.54
Iteration:   6440, Loss function: 4.180, Average Loss: 4.502, avg. samples / sec: 516.44
Iteration:   6460, Loss function: 4.758, Average Loss: 4.500, avg. samples / sec: 515.60
Iteration:   6480, Loss function: 4.469, Average Loss: 4.497, avg. samples / sec: 516.06
Iteration:   6500, Loss function: 4.329, Average Loss: 4.495, avg. samples / sec: 515.95
Iteration:   6520, Loss function: 4.065, Average Loss: 4.492, avg. samples / sec: 514.95
Iteration:   6540, Loss function: 4.412, Average Loss: 4.490, avg. samples / sec: 516.51
Iteration:   6560, Loss function: 4.487, Average Loss: 4.488, avg. samples / sec: 515.28
Iteration:   6580, Loss function: 4.281, Average Loss: 4.485, avg. samples / sec: 513.41
Iteration:   6600, Loss function: 4.482, Average Loss: 4.482, avg. samples / sec: 514.97
Iteration:   6620, Loss function: 4.323, Average Loss: 4.480, avg. samples / sec: 513.82
Iteration:   6640, Loss function: 4.446, Average Loss: 4.479, avg. samples / sec: 514.35
Iteration:   6660, Loss function: 4.241, Average Loss: 4.476, avg. samples / sec: 516.16
Iteration:   6680, Loss function: 4.412, Average Loss: 4.474, avg. samples / sec: 515.37
Iteration:   6700, Loss function: 4.573, Average Loss: 4.471, avg. samples / sec: 515.56
Iteration:   6720, Loss function: 4.053, Average Loss: 4.469, avg. samples / sec: 515.21
Iteration:   6740, Loss function: 4.138, Average Loss: 4.467, avg. samples / sec: 515.11
Iteration:   6760, Loss function: 4.271, Average Loss: 4.465, avg. samples / sec: 515.54
Iteration:   6780, Loss function: 4.457, Average Loss: 4.463, avg. samples / sec: 515.07
Iteration:   6800, Loss function: 4.340, Average Loss: 4.460, avg. samples / sec: 515.09
Iteration:   6820, Loss function: 4.397, Average Loss: 4.458, avg. samples / sec: 514.95
Iteration:   6840, Loss function: 4.538, Average Loss: 4.456, avg. samples / sec: 515.14
Iteration:   6860, Loss function: 4.498, Average Loss: 4.454, avg. samples / sec: 515.35
Iteration:   6880, Loss function: 4.197, Average Loss: 4.450, avg. samples / sec: 515.05
Iteration:   6900, Loss function: 4.552, Average Loss: 4.448, avg. samples / sec: 516.19
Iteration:   6920, Loss function: 4.790, Average Loss: 4.446, avg. samples / sec: 515.82
Iteration:   6940, Loss function: 4.728, Average Loss: 4.444, avg. samples / sec: 515.79
Iteration:   6960, Loss function: 4.113, Average Loss: 4.441, avg. samples / sec: 515.57
Iteration:   6980, Loss function: 4.222, Average Loss: 4.436, avg. samples / sec: 515.69
Iteration:   7000, Loss function: 4.301, Average Loss: 4.435, avg. samples / sec: 516.46

:::MLPv0.5.0 ssd 1556669010.040495157 (train.py:553) train_epoch: 9
Iteration:   7020, Loss function: 4.365, Average Loss: 4.433, avg. samples / sec: 515.89
Iteration:   7040, Loss function: 4.359, Average Loss: 4.431, avg. samples / sec: 515.36
Iteration:   7060, Loss function: 4.290, Average Loss: 4.428, avg. samples / sec: 514.40
Iteration:   7080, Loss function: 4.374, Average Loss: 4.426, avg. samples / sec: 513.43
Iteration:   7100, Loss function: 4.621, Average Loss: 4.425, avg. samples / sec: 515.42
Iteration:   7120, Loss function: 4.191, Average Loss: 4.424, avg. samples / sec: 515.76
Iteration:   7140, Loss function: 4.159, Average Loss: 4.420, avg. samples / sec: 515.31
Iteration:   7160, Loss function: 4.323, Average Loss: 4.418, avg. samples / sec: 515.84
Iteration:   7180, Loss function: 4.144, Average Loss: 4.416, avg. samples / sec: 515.65
Iteration:   7200, Loss function: 4.264, Average Loss: 4.415, avg. samples / sec: 514.73
Iteration:   7220, Loss function: 4.165, Average Loss: 4.413, avg. samples / sec: 514.80
Iteration:   7240, Loss function: 4.205, Average Loss: 4.412, avg. samples / sec: 515.62
Iteration:   7260, Loss function: 4.421, Average Loss: 4.410, avg. samples / sec: 515.52
Iteration:   7280, Loss function: 4.336, Average Loss: 4.408, avg. samples / sec: 515.52
Iteration:   7300, Loss function: 4.224, Average Loss: 4.406, avg. samples / sec: 514.25
Iteration:   7320, Loss function: 4.390, Average Loss: 4.404, avg. samples / sec: 515.83
Iteration:   7340, Loss function: 4.374, Average Loss: 4.403, avg. samples / sec: 516.17
Iteration:   7360, Loss function: 4.393, Average Loss: 4.401, avg. samples / sec: 516.28
Iteration:   7380, Loss function: 4.262, Average Loss: 4.400, avg. samples / sec: 515.68
Iteration:   7400, Loss function: 4.464, Average Loss: 4.397, avg. samples / sec: 514.47
Iteration:   7420, Loss function: 4.371, Average Loss: 4.394, avg. samples / sec: 514.86
Iteration:   7440, Loss function: 4.303, Average Loss: 4.392, avg. samples / sec: 515.41
Iteration:   7460, Loss function: 4.524, Average Loss: 4.391, avg. samples / sec: 513.63
Iteration:   7480, Loss function: 4.303, Average Loss: 4.388, avg. samples / sec: 513.43
Iteration:   7500, Loss function: 4.171, Average Loss: 4.386, avg. samples / sec: 514.51
Iteration:   7520, Loss function: 4.339, Average Loss: 4.385, avg. samples / sec: 514.95
Iteration:   7540, Loss function: 4.298, Average Loss: 4.382, avg. samples / sec: 515.29
Iteration:   7560, Loss function: 4.218, Average Loss: 4.380, avg. samples / sec: 514.30
Iteration:   7580, Loss function: 4.156, Average Loss: 4.379, avg. samples / sec: 515.89
Iteration:   7600, Loss function: 4.370, Average Loss: 4.377, avg. samples / sec: 514.50
Iteration:   7620, Loss function: 4.117, Average Loss: 4.376, avg. samples / sec: 515.08
Iteration:   7640, Loss function: 4.184, Average Loss: 4.373, avg. samples / sec: 515.11
Iteration:   7660, Loss function: 4.116, Average Loss: 4.371, avg. samples / sec: 514.68
Iteration:   7680, Loss function: 4.091, Average Loss: 4.370, avg. samples / sec: 513.74
Iteration:   7700, Loss function: 4.424, Average Loss: 4.367, avg. samples / sec: 515.72
Iteration:   7720, Loss function: 4.391, Average Loss: 4.365, avg. samples / sec: 516.00
Iteration:   7740, Loss function: 4.393, Average Loss: 4.361, avg. samples / sec: 516.37
Iteration:   7760, Loss function: 4.163, Average Loss: 4.358, avg. samples / sec: 515.40
Iteration:   7780, Loss function: 4.515, Average Loss: 4.357, avg. samples / sec: 515.54

:::MLPv0.5.0 ssd 1556669239.900816441 (train.py:553) train_epoch: 10
Iteration:   7800, Loss function: 4.215, Average Loss: 4.355, avg. samples / sec: 514.27
Iteration:   7820, Loss function: 4.369, Average Loss: 4.353, avg. samples / sec: 514.09
Iteration:   7840, Loss function: 4.039, Average Loss: 4.351, avg. samples / sec: 512.46
Iteration:   7860, Loss function: 4.297, Average Loss: 4.349, avg. samples / sec: 513.26
Iteration:   7880, Loss function: 4.332, Average Loss: 4.349, avg. samples / sec: 514.84
Iteration:   7900, Loss function: 4.289, Average Loss: 4.348, avg. samples / sec: 515.69
Iteration:   7920, Loss function: 4.274, Average Loss: 4.345, avg. samples / sec: 515.62
Iteration:   7940, Loss function: 4.236, Average Loss: 4.343, avg. samples / sec: 515.10
Iteration:   7960, Loss function: 4.478, Average Loss: 4.342, avg. samples / sec: 516.40
Iteration:   7980, Loss function: 4.362, Average Loss: 4.342, avg. samples / sec: 515.32
Iteration:   8000, Loss function: 4.190, Average Loss: 4.339, avg. samples / sec: 514.82
Iteration:   8020, Loss function: 4.255, Average Loss: 4.337, avg. samples / sec: 515.60
Iteration:   8040, Loss function: 4.503, Average Loss: 4.335, avg. samples / sec: 515.10
Iteration:   8060, Loss function: 4.193, Average Loss: 4.335, avg. samples / sec: 515.28
Iteration:   8080, Loss function: 4.248, Average Loss: 4.332, avg. samples / sec: 516.24
Iteration:   8100, Loss function: 4.278, Average Loss: 4.331, avg. samples / sec: 516.13
Iteration:   8120, Loss function: 4.409, Average Loss: 4.330, avg. samples / sec: 515.41
Iteration:   8140, Loss function: 4.191, Average Loss: 4.329, avg. samples / sec: 514.25
Iteration:   8160, Loss function: 4.554, Average Loss: 4.328, avg. samples / sec: 515.61
Iteration:   8180, Loss function: 4.434, Average Loss: 4.325, avg. samples / sec: 516.20
Iteration:   8200, Loss function: 4.174, Average Loss: 4.325, avg. samples / sec: 515.90
Iteration:   8220, Loss function: 4.398, Average Loss: 4.323, avg. samples / sec: 513.88
Iteration:   8240, Loss function: 4.088, Average Loss: 4.320, avg. samples / sec: 513.83
Iteration:   8260, Loss function: 4.259, Average Loss: 4.318, avg. samples / sec: 515.01
Iteration:   8280, Loss function: 4.069, Average Loss: 4.316, avg. samples / sec: 515.46
Iteration:   8300, Loss function: 4.214, Average Loss: 4.314, avg. samples / sec: 515.49
Iteration:   8320, Loss function: 4.536, Average Loss: 4.313, avg. samples / sec: 514.30
Iteration:   8340, Loss function: 4.143, Average Loss: 4.311, avg. samples / sec: 516.54
Iteration:   8360, Loss function: 4.223, Average Loss: 4.310, avg. samples / sec: 514.52
Iteration:   8380, Loss function: 4.257, Average Loss: 4.308, avg. samples / sec: 515.62
Iteration:   8400, Loss function: 4.008, Average Loss: 4.307, avg. samples / sec: 514.95
Iteration:   8420, Loss function: 3.940, Average Loss: 4.304, avg. samples / sec: 514.51
Iteration:   8440, Loss function: 4.042, Average Loss: 4.302, avg. samples / sec: 514.37
Iteration:   8460, Loss function: 4.002, Average Loss: 4.301, avg. samples / sec: 512.33
Iteration:   8480, Loss function: 4.362, Average Loss: 4.299, avg. samples / sec: 514.91
Iteration:   8500, Loss function: 4.114, Average Loss: 4.298, avg. samples / sec: 514.14
Iteration:   8520, Loss function: 4.207, Average Loss: 4.295, avg. samples / sec: 515.90
Iteration:   8540, Loss function: 4.224, Average Loss: 4.292, avg. samples / sec: 515.91
Iteration:   8560, Loss function: 4.322, Average Loss: 4.291, avg. samples / sec: 514.24

:::MLPv0.5.0 ssd 1556669469.541223526 (train.py:553) train_epoch: 11
Iteration:   8580, Loss function: 4.293, Average Loss: 4.289, avg. samples / sec: 515.81
Iteration:   8600, Loss function: 4.201, Average Loss: 4.287, avg. samples / sec: 513.03
Iteration:   8620, Loss function: 4.172, Average Loss: 4.285, avg. samples / sec: 513.03
Iteration:   8640, Loss function: 4.402, Average Loss: 4.284, avg. samples / sec: 515.84
Iteration:   8660, Loss function: 4.250, Average Loss: 4.285, avg. samples / sec: 514.54
Iteration:   8680, Loss function: 4.260, Average Loss: 4.284, avg. samples / sec: 515.22
Iteration:   8700, Loss function: 4.255, Average Loss: 4.282, avg. samples / sec: 515.44
Iteration:   8720, Loss function: 4.223, Average Loss: 4.281, avg. samples / sec: 515.11
Iteration:   8740, Loss function: 4.209, Average Loss: 4.280, avg. samples / sec: 512.15
Iteration:   8760, Loss function: 4.245, Average Loss: 4.279, avg. samples / sec: 512.70
Iteration:   8780, Loss function: 4.098, Average Loss: 4.277, avg. samples / sec: 515.61
Iteration:   8800, Loss function: 4.218, Average Loss: 4.275, avg. samples / sec: 515.43
Iteration:   8820, Loss function: 4.276, Average Loss: 4.274, avg. samples / sec: 515.95
Iteration:   8840, Loss function: 4.317, Average Loss: 4.274, avg. samples / sec: 515.80
Iteration:   8860, Loss function: 4.066, Average Loss: 4.272, avg. samples / sec: 515.50
Iteration:   8880, Loss function: 4.276, Average Loss: 4.270, avg. samples / sec: 513.78
Iteration:   8900, Loss function: 4.330, Average Loss: 4.268, avg. samples / sec: 513.55
Iteration:   8920, Loss function: 4.204, Average Loss: 4.267, avg. samples / sec: 513.50
Iteration:   8940, Loss function: 4.071, Average Loss: 4.264, avg. samples / sec: 515.36
Iteration:   8960, Loss function: 4.362, Average Loss: 4.264, avg. samples / sec: 516.18
Iteration:   8980, Loss function: 4.251, Average Loss: 4.263, avg. samples / sec: 516.25
Iteration:   9000, Loss function: 4.264, Average Loss: 4.263, avg. samples / sec: 516.23
Iteration:   9020, Loss function: 4.106, Average Loss: 4.260, avg. samples / sec: 513.67
Iteration:   9040, Loss function: 4.259, Average Loss: 4.259, avg. samples / sec: 516.26
Iteration:   9060, Loss function: 3.962, Average Loss: 4.257, avg. samples / sec: 516.29
Iteration:   9080, Loss function: 4.137, Average Loss: 4.255, avg. samples / sec: 515.93
Iteration:   9100, Loss function: 4.114, Average Loss: 4.254, avg. samples / sec: 515.86
Iteration:   9120, Loss function: 4.143, Average Loss: 4.251, avg. samples / sec: 515.87
Iteration:   9140, Loss function: 4.251, Average Loss: 4.252, avg. samples / sec: 513.96
Iteration:   9160, Loss function: 4.119, Average Loss: 4.250, avg. samples / sec: 515.40
Iteration:   9180, Loss function: 4.143, Average Loss: 4.249, avg. samples / sec: 515.91
Iteration:   9200, Loss function: 4.057, Average Loss: 4.247, avg. samples / sec: 514.74
Iteration:   9220, Loss function: 3.909, Average Loss: 4.245, avg. samples / sec: 515.38
Iteration:   9240, Loss function: 4.212, Average Loss: 4.244, avg. samples / sec: 515.35
Iteration:   9260, Loss function: 3.995, Average Loss: 4.242, avg. samples / sec: 516.48
Iteration:   9280, Loss function: 4.322, Average Loss: 4.241, avg. samples / sec: 514.74
Iteration:   9300, Loss function: 4.100, Average Loss: 4.238, avg. samples / sec: 515.97
Iteration:   9320, Loss function: 4.199, Average Loss: 4.236, avg. samples / sec: 514.39

:::MLPv0.5.0 ssd 1556669699.155569315 (train.py:553) train_epoch: 12
Iteration:   9340, Loss function: 4.212, Average Loss: 4.235, avg. samples / sec: 513.19
Iteration:   9360, Loss function: 4.158, Average Loss: 4.234, avg. samples / sec: 514.85
Iteration:   9380, Loss function: 4.024, Average Loss: 4.231, avg. samples / sec: 516.54
Iteration:   9400, Loss function: 4.272, Average Loss: 4.230, avg. samples / sec: 516.95
Iteration:   9420, Loss function: 4.134, Average Loss: 4.229, avg. samples / sec: 516.15
Iteration:   9440, Loss function: 4.359, Average Loss: 4.229, avg. samples / sec: 516.92
Iteration:   9460, Loss function: 3.992, Average Loss: 4.228, avg. samples / sec: 517.17
Iteration:   9480, Loss function: 4.135, Average Loss: 4.225, avg. samples / sec: 517.05
Iteration:   9500, Loss function: 4.186, Average Loss: 4.222, avg. samples / sec: 515.23
Iteration:   9520, Loss function: 3.966, Average Loss: 4.222, avg. samples / sec: 515.69
Iteration:   9540, Loss function: 4.141, Average Loss: 4.221, avg. samples / sec: 516.15
Iteration:   9560, Loss function: 4.214, Average Loss: 4.219, avg. samples / sec: 515.33
Iteration:   9580, Loss function: 3.981, Average Loss: 4.217, avg. samples / sec: 515.65
Iteration:   9600, Loss function: 4.068, Average Loss: 4.217, avg. samples / sec: 515.54
Iteration:   9620, Loss function: 3.893, Average Loss: 4.215, avg. samples / sec: 515.78
Iteration:   9640, Loss function: 4.265, Average Loss: 4.213, avg. samples / sec: 515.64
Iteration:   9660, Loss function: 4.075, Average Loss: 4.213, avg. samples / sec: 516.15
Iteration:   9680, Loss function: 4.123, Average Loss: 4.212, avg. samples / sec: 515.97
Iteration:   9700, Loss function: 3.919, Average Loss: 4.211, avg. samples / sec: 515.69
Iteration:   9720, Loss function: 3.971, Average Loss: 4.210, avg. samples / sec: 516.75
Iteration:   9740, Loss function: 4.237, Average Loss: 4.209, avg. samples / sec: 516.35
Iteration:   9760, Loss function: 4.036, Average Loss: 4.208, avg. samples / sec: 516.66
Iteration:   9780, Loss function: 4.283, Average Loss: 4.206, avg. samples / sec: 515.96
Iteration:   9800, Loss function: 4.164, Average Loss: 4.204, avg. samples / sec: 514.76
Iteration:   9820, Loss function: 4.408, Average Loss: 4.202, avg. samples / sec: 516.20
Iteration:   9840, Loss function: 3.987, Average Loss: 4.202, avg. samples / sec: 516.53
Iteration:   9860, Loss function: 4.310, Average Loss: 4.202, avg. samples / sec: 516.47
Iteration:   9880, Loss function: 3.975, Average Loss: 4.201, avg. samples / sec: 516.57
Iteration:   9900, Loss function: 4.126, Average Loss: 4.199, avg. samples / sec: 516.84
Iteration:   9920, Loss function: 4.092, Average Loss: 4.198, avg. samples / sec: 516.83
Iteration:   9940, Loss function: 4.425, Average Loss: 4.197, avg. samples / sec: 516.46
Iteration:   9960, Loss function: 4.065, Average Loss: 4.196, avg. samples / sec: 517.21
Iteration:   9980, Loss function: 4.092, Average Loss: 4.195, avg. samples / sec: 516.72
Iteration:  10000, Loss function: 4.090, Average Loss: 4.193, avg. samples / sec: 516.53
Iteration:  10020, Loss function: 4.142, Average Loss: 4.192, avg. samples / sec: 516.78
Iteration:  10040, Loss function: 4.129, Average Loss: 4.191, avg. samples / sec: 516.22
Iteration:  10060, Loss function: 4.045, Average Loss: 4.190, avg. samples / sec: 516.10
Iteration:  10080, Loss function: 4.112, Average Loss: 4.187, avg. samples / sec: 513.41
Iteration:  10100, Loss function: 4.154, Average Loss: 4.185, avg. samples / sec: 516.14

:::MLPv0.5.0 ssd 1556669928.275180101 (train.py:553) train_epoch: 13
Iteration:  10120, Loss function: 4.113, Average Loss: 4.185, avg. samples / sec: 516.46
Iteration:  10140, Loss function: 3.907, Average Loss: 4.184, avg. samples / sec: 516.16
Iteration:  10160, Loss function: 4.020, Average Loss: 4.182, avg. samples / sec: 515.64
Iteration:  10180, Loss function: 4.146, Average Loss: 4.181, avg. samples / sec: 516.11
Iteration:  10200, Loss function: 4.202, Average Loss: 4.181, avg. samples / sec: 516.10
Iteration:  10220, Loss function: 4.166, Average Loss: 4.181, avg. samples / sec: 514.37
Iteration:  10240, Loss function: 3.823, Average Loss: 4.180, avg. samples / sec: 516.81
Iteration:  10260, Loss function: 4.221, Average Loss: 4.178, avg. samples / sec: 515.42
Iteration:  10280, Loss function: 3.876, Average Loss: 4.176, avg. samples / sec: 516.08
Iteration:  10300, Loss function: 4.263, Average Loss: 4.176, avg. samples / sec: 516.85
Iteration:  10320, Loss function: 3.996, Average Loss: 4.176, avg. samples / sec: 517.02
Iteration:  10340, Loss function: 4.203, Average Loss: 4.175, avg. samples / sec: 516.91
Iteration:  10360, Loss function: 3.870, Average Loss: 4.174, avg. samples / sec: 515.74
Iteration:  10380, Loss function: 4.106, Average Loss: 4.172, avg. samples / sec: 516.12
Iteration:  10400, Loss function: 3.834, Average Loss: 4.172, avg. samples / sec: 515.77
Iteration:  10420, Loss function: 4.261, Average Loss: 4.171, avg. samples / sec: 516.59
Iteration:  10440, Loss function: 4.032, Average Loss: 4.170, avg. samples / sec: 517.00
Iteration:  10460, Loss function: 4.210, Average Loss: 4.170, avg. samples / sec: 516.13
Iteration:  10480, Loss function: 3.832, Average Loss: 4.168, avg. samples / sec: 514.79
Iteration:  10500, Loss function: 4.197, Average Loss: 4.167, avg. samples / sec: 514.52
Iteration:  10520, Loss function: 4.224, Average Loss: 4.165, avg. samples / sec: 516.35
Iteration:  10540, Loss function: 4.138, Average Loss: 4.166, avg. samples / sec: 517.16
Iteration:  10560, Loss function: 4.061, Average Loss: 4.165, avg. samples / sec: 516.29
Iteration:  10580, Loss function: 3.978, Average Loss: 4.163, avg. samples / sec: 516.88
Iteration:  10600, Loss function: 4.002, Average Loss: 4.162, avg. samples / sec: 515.87
Iteration:  10620, Loss function: 3.827, Average Loss: 4.160, avg. samples / sec: 517.12
Iteration:  10640, Loss function: 4.091, Average Loss: 4.160, avg. samples / sec: 516.67
Iteration:  10660, Loss function: 4.010, Average Loss: 4.159, avg. samples / sec: 516.15
Iteration:  10680, Loss function: 4.151, Average Loss: 4.158, avg. samples / sec: 516.52
Iteration:  10700, Loss function: 4.216, Average Loss: 4.158, avg. samples / sec: 515.88
Iteration:  10720, Loss function: 4.388, Average Loss: 4.157, avg. samples / sec: 515.18
Iteration:  10740, Loss function: 4.318, Average Loss: 4.157, avg. samples / sec: 517.16
Iteration:  10760, Loss function: 3.910, Average Loss: 4.155, avg. samples / sec: 516.71
Iteration:  10780, Loss function: 4.074, Average Loss: 4.155, avg. samples / sec: 516.66
Iteration:  10800, Loss function: 4.042, Average Loss: 4.153, avg. samples / sec: 516.74
Iteration:  10820, Loss function: 4.116, Average Loss: 4.152, avg. samples / sec: 516.41
Iteration:  10840, Loss function: 4.245, Average Loss: 4.151, avg. samples / sec: 516.64
Iteration:  10860, Loss function: 4.153, Average Loss: 4.149, avg. samples / sec: 516.19
Iteration:  10880, Loss function: 3.877, Average Loss: 4.146, avg. samples / sec: 516.60

:::MLPv0.5.0 ssd 1556670157.364122391 (train.py:553) train_epoch: 14
Iteration:  10900, Loss function: 4.210, Average Loss: 4.147, avg. samples / sec: 514.56
Iteration:  10920, Loss function: 4.087, Average Loss: 4.145, avg. samples / sec: 516.56
Iteration:  10940, Loss function: 4.230, Average Loss: 4.144, avg. samples / sec: 515.66
Iteration:  10960, Loss function: 4.144, Average Loss: 4.142, avg. samples / sec: 516.38
Iteration:  10980, Loss function: 4.059, Average Loss: 4.142, avg. samples / sec: 517.29
Iteration:  11000, Loss function: 4.086, Average Loss: 4.142, avg. samples / sec: 516.65
Iteration:  11020, Loss function: 4.139, Average Loss: 4.141, avg. samples / sec: 517.32
Iteration:  11040, Loss function: 4.123, Average Loss: 4.139, avg. samples / sec: 517.01
Iteration:  11060, Loss function: 4.287, Average Loss: 4.138, avg. samples / sec: 516.80
Iteration:  11080, Loss function: 4.201, Average Loss: 4.139, avg. samples / sec: 516.79
Iteration:  11100, Loss function: 3.977, Average Loss: 4.138, avg. samples / sec: 516.83
Iteration:  11120, Loss function: 3.991, Average Loss: 4.136, avg. samples / sec: 516.97
Iteration:  11140, Loss function: 4.019, Average Loss: 4.135, avg. samples / sec: 516.69
Iteration:  11160, Loss function: 4.199, Average Loss: 4.134, avg. samples / sec: 516.10
Iteration:  11180, Loss function: 4.220, Average Loss: 4.133, avg. samples / sec: 515.39
Iteration:  11200, Loss function: 4.109, Average Loss: 4.133, avg. samples / sec: 514.26
Iteration:  11220, Loss function: 4.207, Average Loss: 4.132, avg. samples / sec: 513.57
Iteration:  11240, Loss function: 4.018, Average Loss: 4.131, avg. samples / sec: 515.45
Iteration:  11260, Loss function: 4.178, Average Loss: 4.131, avg. samples / sec: 514.24
Iteration:  11280, Loss function: 3.939, Average Loss: 4.129, avg. samples / sec: 515.08
Iteration:  11300, Loss function: 4.055, Average Loss: 4.128, avg. samples / sec: 516.14
Iteration:  11320, Loss function: 4.132, Average Loss: 4.128, avg. samples / sec: 516.72
Iteration:  11340, Loss function: 3.906, Average Loss: 4.127, avg. samples / sec: 516.89
Iteration:  11360, Loss function: 3.835, Average Loss: 4.125, avg. samples / sec: 516.22
Iteration:  11380, Loss function: 3.986, Average Loss: 4.124, avg. samples / sec: 515.50
Iteration:  11400, Loss function: 4.412, Average Loss: 4.123, avg. samples / sec: 515.52
Iteration:  11420, Loss function: 4.182, Average Loss: 4.123, avg. samples / sec: 514.07
Iteration:  11440, Loss function: 3.961, Average Loss: 4.121, avg. samples / sec: 514.96
Iteration:  11460, Loss function: 4.183, Average Loss: 4.120, avg. samples / sec: 515.42
Iteration:  11480, Loss function: 4.108, Average Loss: 4.119, avg. samples / sec: 516.68
Iteration:  11500, Loss function: 4.076, Average Loss: 4.118, avg. samples / sec: 515.44
Iteration:  11520, Loss function: 4.030, Average Loss: 4.118, avg. samples / sec: 515.60
Iteration:  11540, Loss function: 3.984, Average Loss: 4.117, avg. samples / sec: 516.22
Iteration:  11560, Loss function: 4.124, Average Loss: 4.116, avg. samples / sec: 516.59
Iteration:  11580, Loss function: 3.993, Average Loss: 4.115, avg. samples / sec: 515.12
Iteration:  11600, Loss function: 4.180, Average Loss: 4.115, avg. samples / sec: 515.16
Iteration:  11620, Loss function: 4.124, Average Loss: 4.115, avg. samples / sec: 513.04
Iteration:  11640, Loss function: 3.945, Average Loss: 4.112, avg. samples / sec: 513.67
Iteration:  11660, Loss function: 4.062, Average Loss: 4.110, avg. samples / sec: 514.54

:::MLPv0.5.0 ssd 1556670386.952483892 (train.py:553) train_epoch: 15
Iteration:  11680, Loss function: 4.087, Average Loss: 4.109, avg. samples / sec: 515.44
Iteration:  11700, Loss function: 4.123, Average Loss: 4.109, avg. samples / sec: 515.35
Iteration:  11720, Loss function: 4.030, Average Loss: 4.107, avg. samples / sec: 514.92
Iteration:  11740, Loss function: 3.803, Average Loss: 4.105, avg. samples / sec: 515.91
Iteration:  11760, Loss function: 4.101, Average Loss: 4.105, avg. samples / sec: 516.45
Iteration:  11780, Loss function: 4.191, Average Loss: 4.106, avg. samples / sec: 516.96
Iteration:  11800, Loss function: 4.204, Average Loss: 4.104, avg. samples / sec: 515.21
Iteration:  11820, Loss function: 4.290, Average Loss: 4.104, avg. samples / sec: 515.21
Iteration:  11840, Loss function: 4.048, Average Loss: 4.102, avg. samples / sec: 515.92
Iteration:  11860, Loss function: 4.200, Average Loss: 4.103, avg. samples / sec: 514.79
Iteration:  11880, Loss function: 3.772, Average Loss: 4.102, avg. samples / sec: 514.81
Iteration:  11900, Loss function: 4.081, Average Loss: 4.101, avg. samples / sec: 515.18
Iteration:  11920, Loss function: 3.983, Average Loss: 4.100, avg. samples / sec: 515.50
Iteration:  11940, Loss function: 4.049, Average Loss: 4.100, avg. samples / sec: 515.96
Iteration:  11960, Loss function: 3.951, Average Loss: 4.099, avg. samples / sec: 516.08
Iteration:  11980, Loss function: 4.051, Average Loss: 4.098, avg. samples / sec: 516.08
Iteration:  12000, Loss function: 4.125, Average Loss: 4.097, avg. samples / sec: 516.45
Iteration:  12020, Loss function: 4.282, Average Loss: 4.097, avg. samples / sec: 515.84
Iteration:  12040, Loss function: 3.974, Average Loss: 4.095, avg. samples / sec: 515.29
Iteration:  12060, Loss function: 3.896, Average Loss: 4.093, avg. samples / sec: 516.41
Iteration:  12080, Loss function: 4.346, Average Loss: 4.093, avg. samples / sec: 516.06
Iteration:  12100, Loss function: 4.065, Average Loss: 4.092, avg. samples / sec: 515.04
Iteration:  12120, Loss function: 4.070, Average Loss: 4.091, avg. samples / sec: 515.69
Iteration:  12140, Loss function: 4.008, Average Loss: 4.089, avg. samples / sec: 516.65
Iteration:  12160, Loss function: 3.816, Average Loss: 4.087, avg. samples / sec: 516.47
Iteration:  12180, Loss function: 3.909, Average Loss: 4.086, avg. samples / sec: 517.10
Iteration:  12200, Loss function: 3.972, Average Loss: 4.086, avg. samples / sec: 515.92
Iteration:  12220, Loss function: 3.816, Average Loss: 4.085, avg. samples / sec: 515.97
Iteration:  12240, Loss function: 4.070, Average Loss: 4.084, avg. samples / sec: 517.15
Iteration:  12260, Loss function: 3.794, Average Loss: 4.083, avg. samples / sec: 512.69
Iteration:  12280, Loss function: 4.140, Average Loss: 4.082, avg. samples / sec: 514.62
Iteration:  12300, Loss function: 4.114, Average Loss: 4.081, avg. samples / sec: 514.75
Iteration:  12320, Loss function: 4.026, Average Loss: 4.081, avg. samples / sec: 514.05
Iteration:  12340, Loss function: 4.029, Average Loss: 4.079, avg. samples / sec: 515.50
Iteration:  12360, Loss function: 4.004, Average Loss: 4.079, avg. samples / sec: 515.23
Iteration:  12380, Loss function: 3.908, Average Loss: 4.077, avg. samples / sec: 515.82
Iteration:  12400, Loss function: 3.912, Average Loss: 4.076, avg. samples / sec: 516.78
Iteration:  12420, Loss function: 3.890, Average Loss: 4.073, avg. samples / sec: 515.95
Iteration:  12440, Loss function: 4.226, Average Loss: 4.071, avg. samples / sec: 516.36

:::MLPv0.5.0 ssd 1556670616.267580748 (train.py:553) train_epoch: 16
Iteration:  12460, Loss function: 3.955, Average Loss: 4.070, avg. samples / sec: 516.19
Iteration:  12480, Loss function: 3.953, Average Loss: 4.069, avg. samples / sec: 514.96
Iteration:  12500, Loss function: 3.929, Average Loss: 4.069, avg. samples / sec: 512.38
Iteration:  12520, Loss function: 4.110, Average Loss: 4.067, avg. samples / sec: 514.77
Iteration:  12540, Loss function: 4.145, Average Loss: 4.068, avg. samples / sec: 515.77
Iteration:  12560, Loss function: 3.886, Average Loss: 4.067, avg. samples / sec: 516.06
Iteration:  12580, Loss function: 3.837, Average Loss: 4.066, avg. samples / sec: 516.30
Iteration:  12600, Loss function: 4.175, Average Loss: 4.065, avg. samples / sec: 516.08
Iteration:  12620, Loss function: 3.978, Average Loss: 4.064, avg. samples / sec: 516.46
Iteration:  12640, Loss function: 4.233, Average Loss: 4.065, avg. samples / sec: 515.97
Iteration:  12660, Loss function: 4.074, Average Loss: 4.065, avg. samples / sec: 515.58
Iteration:  12680, Loss function: 3.738, Average Loss: 4.063, avg. samples / sec: 515.90
Iteration:  12700, Loss function: 4.268, Average Loss: 4.062, avg. samples / sec: 515.94
Iteration:  12720, Loss function: 3.884, Average Loss: 4.061, avg. samples / sec: 516.10
Iteration:  12740, Loss function: 3.956, Average Loss: 4.059, avg. samples / sec: 515.94
Iteration:  12760, Loss function: 3.871, Average Loss: 4.060, avg. samples / sec: 515.98
Iteration:  12780, Loss function: 3.961, Average Loss: 4.060, avg. samples / sec: 516.36
Iteration:  12800, Loss function: 3.938, Average Loss: 4.059, avg. samples / sec: 514.53
Iteration:  12820, Loss function: 4.013, Average Loss: 4.058, avg. samples / sec: 513.00
Iteration:  12840, Loss function: 3.904, Average Loss: 4.058, avg. samples / sec: 514.48
Iteration:  12860, Loss function: 4.110, Average Loss: 4.058, avg. samples / sec: 515.79
Iteration:  12880, Loss function: 4.147, Average Loss: 4.058, avg. samples / sec: 515.59
Iteration:  12900, Loss function: 4.087, Average Loss: 4.056, avg. samples / sec: 515.38
Iteration:  12920, Loss function: 4.099, Average Loss: 4.055, avg. samples / sec: 515.26
Iteration:  12940, Loss function: 4.065, Average Loss: 4.053, avg. samples / sec: 516.12
Iteration:  12960, Loss function: 3.782, Average Loss: 4.053, avg. samples / sec: 515.90
Iteration:  12980, Loss function: 3.856, Average Loss: 4.053, avg. samples / sec: 515.74
Iteration:  13000, Loss function: 4.155, Average Loss: 4.051, avg. samples / sec: 515.26
Iteration:  13020, Loss function: 4.205, Average Loss: 4.050, avg. samples / sec: 512.18
Iteration:  13040, Loss function: 3.927, Average Loss: 4.050, avg. samples / sec: 512.48
Iteration:  13060, Loss function: 3.868, Average Loss: 4.049, avg. samples / sec: 515.48
Iteration:  13080, Loss function: 3.909, Average Loss: 4.048, avg. samples / sec: 515.93
Iteration:  13100, Loss function: 3.845, Average Loss: 4.048, avg. samples / sec: 515.41
Iteration:  13120, Loss function: 4.146, Average Loss: 4.049, avg. samples / sec: 515.52
Iteration:  13140, Loss function: 4.070, Average Loss: 4.048, avg. samples / sec: 516.11
Iteration:  13160, Loss function: 4.227, Average Loss: 4.047, avg. samples / sec: 517.19
Iteration:  13180, Loss function: 3.828, Average Loss: 4.045, avg. samples / sec: 516.84
Iteration:  13200, Loss function: 4.035, Average Loss: 4.043, avg. samples / sec: 515.16
Iteration:  13220, Loss function: 3.849, Average Loss: 4.042, avg. samples / sec: 515.47

:::MLPv0.5.0 ssd 1556670845.714311361 (train.py:553) train_epoch: 17
Iteration:  13240, Loss function: 3.902, Average Loss: 4.042, avg. samples / sec: 515.30
Iteration:  13260, Loss function: 3.905, Average Loss: 4.041, avg. samples / sec: 515.00
Iteration:  13280, Loss function: 3.921, Average Loss: 4.039, avg. samples / sec: 515.74
Iteration:  13300, Loss function: 3.817, Average Loss: 4.037, avg. samples / sec: 516.04
Iteration:  13320, Loss function: 3.926, Average Loss: 4.038, avg. samples / sec: 515.93
Iteration:  13340, Loss function: 3.743, Average Loss: 4.038, avg. samples / sec: 516.06
Iteration:  13360, Loss function: 3.790, Average Loss: 4.036, avg. samples / sec: 516.79
Iteration:  13380, Loss function: 3.893, Average Loss: 4.036, avg. samples / sec: 516.73
Iteration:  13400, Loss function: 4.386, Average Loss: 4.034, avg. samples / sec: 516.70
Iteration:  13420, Loss function: 4.157, Average Loss: 4.035, avg. samples / sec: 517.07
Iteration:  13440, Loss function: 3.817, Average Loss: 4.035, avg. samples / sec: 515.40
Iteration:  13460, Loss function: 3.939, Average Loss: 4.033, avg. samples / sec: 515.77
Iteration:  13480, Loss function: 3.752, Average Loss: 4.032, avg. samples / sec: 515.82
Iteration:  13500, Loss function: 4.044, Average Loss: 4.032, avg. samples / sec: 515.94
Iteration:  13520, Loss function: 4.089, Average Loss: 4.031, avg. samples / sec: 515.84
Iteration:  13540, Loss function: 4.212, Average Loss: 4.030, avg. samples / sec: 515.60
Iteration:  13560, Loss function: 4.335, Average Loss: 4.030, avg. samples / sec: 515.19
Iteration:  13580, Loss function: 3.847, Average Loss: 4.030, avg. samples / sec: 515.91
Iteration:  13600, Loss function: 3.969, Average Loss: 4.028, avg. samples / sec: 516.13
Iteration:  13620, Loss function: 3.931, Average Loss: 4.027, avg. samples / sec: 516.34
Iteration:  13640, Loss function: 4.253, Average Loss: 4.027, avg. samples / sec: 516.17
Iteration:  13660, Loss function: 3.869, Average Loss: 4.027, avg. samples / sec: 516.29
Iteration:  13680, Loss function: 4.124, Average Loss: 4.026, avg. samples / sec: 515.60
Iteration:  13700, Loss function: 3.904, Average Loss: 4.025, avg. samples / sec: 516.31
Iteration:  13720, Loss function: 3.837, Average Loss: 4.024, avg. samples / sec: 516.37
Iteration:  13740, Loss function: 3.996, Average Loss: 4.024, avg. samples / sec: 517.03
Iteration:  13760, Loss function: 4.071, Average Loss: 4.024, avg. samples / sec: 516.52
Iteration:  13780, Loss function: 3.872, Average Loss: 4.022, avg. samples / sec: 516.74
Iteration:  13800, Loss function: 4.150, Average Loss: 4.022, avg. samples / sec: 515.77
Iteration:  13820, Loss function: 3.788, Average Loss: 4.022, avg. samples / sec: 515.99
Iteration:  13840, Loss function: 4.127, Average Loss: 4.021, avg. samples / sec: 514.97
Iteration:  13860, Loss function: 4.110, Average Loss: 4.020, avg. samples / sec: 515.78
Iteration:  13880, Loss function: 3.738, Average Loss: 4.020, avg. samples / sec: 516.48
Iteration:  13900, Loss function: 4.023, Average Loss: 4.019, avg. samples / sec: 515.64
Iteration:  13920, Loss function: 4.120, Average Loss: 4.018, avg. samples / sec: 515.86
Iteration:  13940, Loss function: 3.963, Average Loss: 4.017, avg. samples / sec: 516.19
Iteration:  13960, Loss function: 4.198, Average Loss: 4.016, avg. samples / sec: 516.29
Iteration:  13980, Loss function: 3.806, Average Loss: 4.013, avg. samples / sec: 515.71
Iteration:  14000, Loss function: 3.986, Average Loss: 4.011, avg. samples / sec: 514.25

:::MLPv0.5.0 ssd 1556671074.894461632 (train.py:553) train_epoch: 18
Iteration:  14020, Loss function: 3.928, Average Loss: 4.011, avg. samples / sec: 515.19
Iteration:  14040, Loss function: 4.052, Average Loss: 4.010, avg. samples / sec: 515.22
Iteration:  14060, Loss function: 3.887, Average Loss: 4.009, avg. samples / sec: 515.78
Iteration:  14080, Loss function: 3.871, Average Loss: 4.008, avg. samples / sec: 517.21
Iteration:  14100, Loss function: 4.259, Average Loss: 4.009, avg. samples / sec: 517.01
Iteration:  14120, Loss function: 3.868, Average Loss: 4.009, avg. samples / sec: 514.36
Iteration:  14140, Loss function: 3.690, Average Loss: 4.007, avg. samples / sec: 512.05
Iteration:  14160, Loss function: 4.032, Average Loss: 4.007, avg. samples / sec: 515.92
Iteration:  14180, Loss function: 3.757, Average Loss: 4.006, avg. samples / sec: 515.26
Iteration:  14200, Loss function: 4.098, Average Loss: 4.007, avg. samples / sec: 515.92
Iteration:  14220, Loss function: 3.890, Average Loss: 4.006, avg. samples / sec: 515.95
Iteration:  14240, Loss function: 4.097, Average Loss: 4.005, avg. samples / sec: 515.60
Iteration:  14260, Loss function: 3.812, Average Loss: 4.004, avg. samples / sec: 515.77
Iteration:  14280, Loss function: 3.997, Average Loss: 4.004, avg. samples / sec: 515.45
Iteration:  14300, Loss function: 4.185, Average Loss: 4.003, avg. samples / sec: 515.94
Iteration:  14320, Loss function: 3.993, Average Loss: 4.002, avg. samples / sec: 515.82
Iteration:  14340, Loss function: 3.783, Average Loss: 4.001, avg. samples / sec: 515.49
Iteration:  14360, Loss function: 3.783, Average Loss: 4.001, avg. samples / sec: 515.21
Iteration:  14380, Loss function: 3.957, Average Loss: 4.000, avg. samples / sec: 515.79
Iteration:  14400, Loss function: 3.944, Average Loss: 3.999, avg. samples / sec: 516.00
Iteration:  14420, Loss function: 4.146, Average Loss: 4.000, avg. samples / sec: 515.78
Iteration:  14440, Loss function: 4.022, Average Loss: 4.000, avg. samples / sec: 516.35
Iteration:  14460, Loss function: 4.058, Average Loss: 3.999, avg. samples / sec: 514.99
Iteration:  14480, Loss function: 3.772, Average Loss: 3.997, avg. samples / sec: 516.40
Iteration:  14500, Loss function: 4.141, Average Loss: 3.995, avg. samples / sec: 516.84
Iteration:  14520, Loss function: 4.088, Average Loss: 3.995, avg. samples / sec: 516.67
Iteration:  14540, Loss function: 3.963, Average Loss: 3.994, avg. samples / sec: 516.02
Iteration:  14560, Loss function: 4.178, Average Loss: 3.994, avg. samples / sec: 515.89
Iteration:  14580, Loss function: 4.205, Average Loss: 3.993, avg. samples / sec: 514.39
Iteration:  14600, Loss function: 4.258, Average Loss: 3.993, avg. samples / sec: 515.24
Iteration:  14620, Loss function: 4.157, Average Loss: 3.993, avg. samples / sec: 516.13
Iteration:  14640, Loss function: 4.000, Average Loss: 3.992, avg. samples / sec: 516.24
Iteration:  14660, Loss function: 3.782, Average Loss: 3.991, avg. samples / sec: 515.23
Iteration:  14680, Loss function: 4.208, Average Loss: 3.989, avg. samples / sec: 516.13
Iteration:  14700, Loss function: 3.953, Average Loss: 3.988, avg. samples / sec: 514.84
Iteration:  14720, Loss function: 4.115, Average Loss: 3.988, avg. samples / sec: 515.13
Iteration:  14740, Loss function: 3.774, Average Loss: 3.987, avg. samples / sec: 516.17
Iteration:  14760, Loss function: 3.973, Average Loss: 3.985, avg. samples / sec: 515.96
Iteration:  14780, Loss function: 3.916, Average Loss: 3.985, avg. samples / sec: 515.94

:::MLPv0.5.0 ssd 1556671304.240285873 (train.py:553) train_epoch: 19
Iteration:  14800, Loss function: 3.830, Average Loss: 3.984, avg. samples / sec: 513.31
Iteration:  14820, Loss function: 3.929, Average Loss: 3.984, avg. samples / sec: 515.24
Iteration:  14840, Loss function: 3.821, Average Loss: 3.983, avg. samples / sec: 515.92
Iteration:  14860, Loss function: 3.973, Average Loss: 3.983, avg. samples / sec: 516.40
Iteration:  14880, Loss function: 3.862, Average Loss: 3.983, avg. samples / sec: 516.79
Iteration:  14900, Loss function: 4.043, Average Loss: 3.983, avg. samples / sec: 516.65
Iteration:  14920, Loss function: 3.606, Average Loss: 3.981, avg. samples / sec: 517.22
Iteration:  14940, Loss function: 3.854, Average Loss: 3.981, avg. samples / sec: 516.43
Iteration:  14960, Loss function: 3.965, Average Loss: 3.981, avg. samples / sec: 516.50
Iteration:  14980, Loss function: 3.735, Average Loss: 3.982, avg. samples / sec: 516.38
Iteration:  15000, Loss function: 3.979, Average Loss: 3.981, avg. samples / sec: 515.39
Iteration:  15020, Loss function: 3.726, Average Loss: 3.980, avg. samples / sec: 516.37
Iteration:  15040, Loss function: 3.972, Average Loss: 3.979, avg. samples / sec: 515.68
Iteration:  15060, Loss function: 4.047, Average Loss: 3.978, avg. samples / sec: 516.27
Iteration:  15080, Loss function: 4.136, Average Loss: 3.977, avg. samples / sec: 516.08
Iteration:  15100, Loss function: 4.009, Average Loss: 3.977, avg. samples / sec: 514.72
Iteration:  15120, Loss function: 4.047, Average Loss: 3.977, avg. samples / sec: 515.96
Iteration:  15140, Loss function: 4.060, Average Loss: 3.978, avg. samples / sec: 516.06
Iteration:  15160, Loss function: 3.964, Average Loss: 3.976, avg. samples / sec: 516.45
Iteration:  15180, Loss function: 4.100, Average Loss: 3.975, avg. samples / sec: 516.36
Iteration:  15200, Loss function: 3.915, Average Loss: 3.976, avg. samples / sec: 516.22
Iteration:  15220, Loss function: 3.772, Average Loss: 3.975, avg. samples / sec: 516.30
Iteration:  15240, Loss function: 3.907, Average Loss: 3.973, avg. samples / sec: 516.52
Iteration:  15260, Loss function: 3.787, Average Loss: 3.972, avg. samples / sec: 515.39
Iteration:  15280, Loss function: 4.015, Average Loss: 3.971, avg. samples / sec: 515.74
Iteration:  15300, Loss function: 4.054, Average Loss: 3.971, avg. samples / sec: 516.62
Iteration:  15320, Loss function: 3.896, Average Loss: 3.971, avg. samples / sec: 515.49
Iteration:  15340, Loss function: 4.029, Average Loss: 3.971, avg. samples / sec: 516.16
Iteration:  15360, Loss function: 3.921, Average Loss: 3.970, avg. samples / sec: 516.12
Iteration:  15380, Loss function: 3.973, Average Loss: 3.970, avg. samples / sec: 515.81
Iteration:  15400, Loss function: 4.201, Average Loss: 3.969, avg. samples / sec: 516.16
Iteration:  15420, Loss function: 4.027, Average Loss: 3.968, avg. samples / sec: 516.59
Iteration:  15440, Loss function: 3.861, Average Loss: 3.967, avg. samples / sec: 516.97
Iteration:  15460, Loss function: 3.878, Average Loss: 3.966, avg. samples / sec: 516.78
Iteration:  15480, Loss function: 3.861, Average Loss: 3.965, avg. samples / sec: 515.48
Iteration:  15500, Loss function: 4.026, Average Loss: 3.964, avg. samples / sec: 516.01
Iteration:  15520, Loss function: 3.905, Average Loss: 3.963, avg. samples / sec: 516.98
Iteration:  15540, Loss function: 3.654, Average Loss: 3.960, avg. samples / sec: 515.61
Iteration:  15560, Loss function: 4.032, Average Loss: 3.960, avg. samples / sec: 513.80

:::MLPv0.5.0 ssd 1556671533.695372581 (train.py:553) train_epoch: 20
Iteration:  15580, Loss function: 3.775, Average Loss: 3.960, avg. samples / sec: 515.32
Iteration:  15600, Loss function: 3.750, Average Loss: 3.959, avg. samples / sec: 515.97
Iteration:  15620, Loss function: 4.060, Average Loss: 3.958, avg. samples / sec: 515.85
Iteration:  15640, Loss function: 3.862, Average Loss: 3.958, avg. samples / sec: 516.82
Iteration:  15660, Loss function: 4.145, Average Loss: 3.959, avg. samples / sec: 516.95
Iteration:  15680, Loss function: 3.851, Average Loss: 3.959, avg. samples / sec: 517.18
Iteration:  15700, Loss function: 3.691, Average Loss: 3.956, avg. samples / sec: 517.51
Iteration:  15720, Loss function: 3.799, Average Loss: 3.956, avg. samples / sec: 516.27
Iteration:  15740, Loss function: 3.864, Average Loss: 3.956, avg. samples / sec: 516.51
Iteration:  15760, Loss function: 3.826, Average Loss: 3.957, avg. samples / sec: 517.07
Iteration:  15780, Loss function: 3.768, Average Loss: 3.956, avg. samples / sec: 516.31
Iteration:  15800, Loss function: 3.822, Average Loss: 3.955, avg. samples / sec: 516.91
Iteration:  15820, Loss function: 4.200, Average Loss: 3.955, avg. samples / sec: 517.13
Iteration:  15840, Loss function: 3.975, Average Loss: 3.955, avg. samples / sec: 516.58
Iteration:  15860, Loss function: 4.016, Average Loss: 3.955, avg. samples / sec: 516.71
Iteration:  15880, Loss function: 3.947, Average Loss: 3.955, avg. samples / sec: 516.66
Iteration:  15900, Loss function: 3.913, Average Loss: 3.955, avg. samples / sec: 515.95
Iteration:  15920, Loss function: 3.979, Average Loss: 3.955, avg. samples / sec: 515.41
Iteration:  15940, Loss function: 3.819, Average Loss: 3.954, avg. samples / sec: 514.91
Iteration:  15960, Loss function: 3.926, Average Loss: 3.954, avg. samples / sec: 515.43
Iteration:  15980, Loss function: 3.840, Average Loss: 3.954, avg. samples / sec: 516.12
Iteration:  16000, Loss function: 3.648, Average Loss: 3.954, avg. samples / sec: 516.06
Iteration:  16020, Loss function: 3.905, Average Loss: 3.954, avg. samples / sec: 516.73
Iteration:  16040, Loss function: 3.889, Average Loss: 3.953, avg. samples / sec: 516.69
Iteration:  16060, Loss function: 3.663, Average Loss: 3.951, avg. samples / sec: 516.37
Iteration:  16080, Loss function: 4.117, Average Loss: 3.950, avg. samples / sec: 517.63
Iteration:  16100, Loss function: 3.907, Average Loss: 3.950, avg. samples / sec: 516.37
Iteration:  16120, Loss function: 3.931, Average Loss: 3.948, avg. samples / sec: 515.86
Iteration:  16140, Loss function: 3.967, Average Loss: 3.948, avg. samples / sec: 516.37
Iteration:  16160, Loss function: 4.131, Average Loss: 3.948, avg. samples / sec: 515.41
Iteration:  16180, Loss function: 3.873, Average Loss: 3.947, avg. samples / sec: 516.14
Iteration:  16200, Loss function: 3.935, Average Loss: 3.946, avg. samples / sec: 516.45
Iteration:  16220, Loss function: 3.697, Average Loss: 3.944, avg. samples / sec: 516.91
Iteration:  16240, Loss function: 4.131, Average Loss: 3.944, avg. samples / sec: 516.93
Iteration:  16260, Loss function: 3.994, Average Loss: 3.943, avg. samples / sec: 516.30
Iteration:  16280, Loss function: 3.970, Average Loss: 3.943, avg. samples / sec: 516.83
Iteration:  16300, Loss function: 3.768, Average Loss: 3.941, avg. samples / sec: 516.71
Iteration:  16320, Loss function: 3.666, Average Loss: 3.939, avg. samples / sec: 516.87
Iteration:  16340, Loss function: 3.879, Average Loss: 3.939, avg. samples / sec: 516.41

:::MLPv0.5.0 ssd 1556671762.679238558 (train.py:553) train_epoch: 21
Iteration:  16360, Loss function: 3.811, Average Loss: 3.938, avg. samples / sec: 516.83
Iteration:  16380, Loss function: 3.903, Average Loss: 3.937, avg. samples / sec: 516.70
Iteration:  16400, Loss function: 4.042, Average Loss: 3.936, avg. samples / sec: 515.59
Iteration:  16420, Loss function: 3.884, Average Loss: 3.936, avg. samples / sec: 516.37
Iteration:  16440, Loss function: 3.917, Average Loss: 3.936, avg. samples / sec: 517.21
Iteration:  16460, Loss function: 3.902, Average Loss: 3.936, avg. samples / sec: 517.27
Iteration:  16480, Loss function: 3.939, Average Loss: 3.934, avg. samples / sec: 517.78
Iteration:  16500, Loss function: 3.678, Average Loss: 3.934, avg. samples / sec: 516.61
Iteration:  16520, Loss function: 4.126, Average Loss: 3.933, avg. samples / sec: 516.89
Iteration:  16540, Loss function: 3.991, Average Loss: 3.934, avg. samples / sec: 517.08
Iteration:  16560, Loss function: 3.959, Average Loss: 3.933, avg. samples / sec: 516.94
Iteration:  16580, Loss function: 3.986, Average Loss: 3.933, avg. samples / sec: 516.73
Iteration:  16600, Loss function: 4.111, Average Loss: 3.932, avg. samples / sec: 516.49
Iteration:  16620, Loss function: 3.869, Average Loss: 3.933, avg. samples / sec: 516.21
Iteration:  16640, Loss function: 3.927, Average Loss: 3.931, avg. samples / sec: 514.95
Iteration:  16660, Loss function: 3.683, Average Loss: 3.931, avg. samples / sec: 517.18
Iteration:  16680, Loss function: 3.695, Average Loss: 3.931, avg. samples / sec: 517.03
Iteration:  16700, Loss function: 3.865, Average Loss: 3.930, avg. samples / sec: 516.59
Iteration:  16720, Loss function: 3.949, Average Loss: 3.929, avg. samples / sec: 516.48
Iteration:  16740, Loss function: 3.981, Average Loss: 3.928, avg. samples / sec: 516.67
Iteration:  16760, Loss function: 3.907, Average Loss: 3.929, avg. samples / sec: 516.72
Iteration:  16780, Loss function: 3.672, Average Loss: 3.929, avg. samples / sec: 515.94
Iteration:  16800, Loss function: 3.653, Average Loss: 3.928, avg. samples / sec: 515.85
Iteration:  16820, Loss function: 4.023, Average Loss: 3.927, avg. samples / sec: 515.98
Iteration:  16840, Loss function: 3.874, Average Loss: 3.926, avg. samples / sec: 516.53
Iteration:  16860, Loss function: 4.048, Average Loss: 3.926, avg. samples / sec: 515.53
Iteration:  16880, Loss function: 3.998, Average Loss: 3.926, avg. samples / sec: 515.89
Iteration:  16900, Loss function: 3.715, Average Loss: 3.925, avg. samples / sec: 516.53
Iteration:  16920, Loss function: 4.059, Average Loss: 3.924, avg. samples / sec: 516.48
Iteration:  16940, Loss function: 3.835, Average Loss: 3.924, avg. samples / sec: 516.34
Iteration:  16960, Loss function: 3.804, Average Loss: 3.924, avg. samples / sec: 516.59
Iteration:  16980, Loss function: 3.980, Average Loss: 3.923, avg. samples / sec: 516.00
Iteration:  17000, Loss function: 3.887, Average Loss: 3.921, avg. samples / sec: 516.56
Iteration:  17020, Loss function: 3.981, Average Loss: 3.921, avg. samples / sec: 516.54
Iteration:  17040, Loss function: 3.753, Average Loss: 3.921, avg. samples / sec: 516.00
Iteration:  17060, Loss function: 4.047, Average Loss: 3.921, avg. samples / sec: 517.15
Iteration:  17080, Loss function: 3.724, Average Loss: 3.919, avg. samples / sec: 516.30
Iteration:  17100, Loss function: 4.030, Average Loss: 3.918, avg. samples / sec: 515.33
Iteration:  17120, Loss function: 3.810, Average Loss: 3.918, avg. samples / sec: 516.54

:::MLPv0.5.0 ssd 1556671991.653483868 (train.py:553) train_epoch: 22
Iteration:  17140, Loss function: 3.794, Average Loss: 3.917, avg. samples / sec: 516.27
Iteration:  17160, Loss function: 3.812, Average Loss: 3.917, avg. samples / sec: 516.71
Iteration:  17180, Loss function: 3.712, Average Loss: 3.916, avg. samples / sec: 517.12
Iteration:  17200, Loss function: 3.808, Average Loss: 3.916, avg. samples / sec: 516.45
Iteration:  17220, Loss function: 3.897, Average Loss: 3.918, avg. samples / sec: 516.81
Iteration:  17240, Loss function: 3.873, Average Loss: 3.917, avg. samples / sec: 517.04
Iteration:  17260, Loss function: 3.950, Average Loss: 3.915, avg. samples / sec: 516.91
Iteration:  17280, Loss function: 3.945, Average Loss: 3.915, avg. samples / sec: 516.62
Iteration:  17300, Loss function: 4.137, Average Loss: 3.915, avg. samples / sec: 516.27
Iteration:  17320, Loss function: 3.872, Average Loss: 3.915, avg. samples / sec: 515.11
Iteration:  17340, Loss function: 3.874, Average Loss: 3.915, avg. samples / sec: 516.86
Iteration:  17360, Loss function: 4.154, Average Loss: 3.914, avg. samples / sec: 516.71
Iteration:  17380, Loss function: 3.754, Average Loss: 3.914, avg. samples / sec: 516.82
Iteration:  17400, Loss function: 3.844, Average Loss: 3.913, avg. samples / sec: 516.13
Iteration:  17420, Loss function: 4.103, Average Loss: 3.912, avg. samples / sec: 514.20
Iteration:  17440, Loss function: 3.741, Average Loss: 3.912, avg. samples / sec: 516.19
Iteration:  17460, Loss function: 3.729, Average Loss: 3.912, avg. samples / sec: 515.09
Iteration:  17480, Loss function: 3.599, Average Loss: 3.911, avg. samples / sec: 515.73
Iteration:  17500, Loss function: 3.981, Average Loss: 3.910, avg. samples / sec: 516.60
Iteration:  17520, Loss function: 3.825, Average Loss: 3.910, avg. samples / sec: 516.15
Iteration:  17540, Loss function: 3.936, Average Loss: 3.910, avg. samples / sec: 516.17
Iteration:  17560, Loss function: 4.008, Average Loss: 3.909, avg. samples / sec: 516.49
Iteration:  17580, Loss function: 3.707, Average Loss: 3.907, avg. samples / sec: 516.92
Iteration:  17600, Loss function: 3.841, Average Loss: 3.907, avg. samples / sec: 516.86
Iteration:  17620, Loss function: 3.845, Average Loss: 3.907, avg. samples / sec: 517.06
Iteration:  17640, Loss function: 3.903, Average Loss: 3.907, avg. samples / sec: 517.16
Iteration:  17660, Loss function: 3.869, Average Loss: 3.906, avg. samples / sec: 516.34
Iteration:  17680, Loss function: 3.805, Average Loss: 3.905, avg. samples / sec: 517.39
Iteration:  17700, Loss function: 3.999, Average Loss: 3.906, avg. samples / sec: 517.12
Iteration:  17720, Loss function: 3.809, Average Loss: 3.905, avg. samples / sec: 516.47
Iteration:  17740, Loss function: 4.001, Average Loss: 3.905, avg. samples / sec: 517.70
Iteration:  17760, Loss function: 3.749, Average Loss: 3.903, avg. samples / sec: 516.13
Iteration:  17780, Loss function: 3.856, Average Loss: 3.902, avg. samples / sec: 515.83
Iteration:  17800, Loss function: 3.706, Average Loss: 3.902, avg. samples / sec: 516.63
Iteration:  17820, Loss function: 3.987, Average Loss: 3.902, avg. samples / sec: 517.04
Iteration:  17840, Loss function: 3.746, Average Loss: 3.901, avg. samples / sec: 517.19
Iteration:  17860, Loss function: 3.609, Average Loss: 3.899, avg. samples / sec: 517.27
Iteration:  17880, Loss function: 3.969, Average Loss: 3.897, avg. samples / sec: 516.69

:::MLPv0.5.0 ssd 1556672220.590332508 (train.py:553) train_epoch: 23
Iteration:  17900, Loss function: 4.035, Average Loss: 3.898, avg. samples / sec: 516.86
Iteration:  17920, Loss function: 3.693, Average Loss: 3.897, avg. samples / sec: 516.65
Iteration:  17940, Loss function: 4.072, Average Loss: 3.896, avg. samples / sec: 516.74
Iteration:  17960, Loss function: 3.733, Average Loss: 3.894, avg. samples / sec: 516.43
Iteration:  17980, Loss function: 4.313, Average Loss: 3.895, avg. samples / sec: 516.35
Iteration:  18000, Loss function: 4.113, Average Loss: 3.896, avg. samples / sec: 516.42
Iteration:  18020, Loss function: 3.913, Average Loss: 3.895, avg. samples / sec: 516.56
Iteration:  18040, Loss function: 3.773, Average Loss: 3.893, avg. samples / sec: 517.09
Iteration:  18060, Loss function: 3.893, Average Loss: 3.893, avg. samples / sec: 516.96
Iteration:  18080, Loss function: 3.829, Average Loss: 3.893, avg. samples / sec: 515.14
Iteration:  18100, Loss function: 3.907, Average Loss: 3.892, avg. samples / sec: 517.48
Iteration:  18120, Loss function: 3.795, Average Loss: 3.891, avg. samples / sec: 518.04
Iteration:  18140, Loss function: 3.828, Average Loss: 3.890, avg. samples / sec: 515.73
Iteration:  18160, Loss function: 3.716, Average Loss: 3.890, avg. samples / sec: 516.45
Iteration:  18180, Loss function: 3.862, Average Loss: 3.889, avg. samples / sec: 515.80
Iteration:  18200, Loss function: 3.854, Average Loss: 3.888, avg. samples / sec: 516.88
Iteration:  18220, Loss function: 3.873, Average Loss: 3.888, avg. samples / sec: 515.90
Iteration:  18240, Loss function: 3.843, Average Loss: 3.888, avg. samples / sec: 515.95
Iteration:  18260, Loss function: 3.881, Average Loss: 3.888, avg. samples / sec: 516.30
Iteration:  18280, Loss function: 3.686, Average Loss: 3.887, avg. samples / sec: 516.55
Iteration:  18300, Loss function: 4.054, Average Loss: 3.886, avg. samples / sec: 517.02
Iteration:  18320, Loss function: 4.003, Average Loss: 3.887, avg. samples / sec: 517.46
Iteration:  18340, Loss function: 3.766, Average Loss: 3.887, avg. samples / sec: 516.66
Iteration:  18360, Loss function: 3.640, Average Loss: 3.886, avg. samples / sec: 516.62
Iteration:  18380, Loss function: 3.739, Average Loss: 3.885, avg. samples / sec: 517.03
Iteration:  18400, Loss function: 3.780, Average Loss: 3.884, avg. samples / sec: 516.84
Iteration:  18420, Loss function: 3.716, Average Loss: 3.883, avg. samples / sec: 516.77
Iteration:  18440, Loss function: 3.689, Average Loss: 3.883, avg. samples / sec: 516.60
Iteration:  18460, Loss function: 4.000, Average Loss: 3.882, avg. samples / sec: 516.04
Iteration:  18480, Loss function: 3.855, Average Loss: 3.884, avg. samples / sec: 516.76
Iteration:  18500, Loss function: 4.010, Average Loss: 3.883, avg. samples / sec: 514.33
Iteration:  18520, Loss function: 3.502, Average Loss: 3.882, avg. samples / sec: 515.91
Iteration:  18540, Loss function: 3.855, Average Loss: 3.882, avg. samples / sec: 516.38
Iteration:  18560, Loss function: 3.937, Average Loss: 3.880, avg. samples / sec: 516.61
Iteration:  18580, Loss function: 3.858, Average Loss: 3.880, avg. samples / sec: 516.71
Iteration:  18600, Loss function: 3.812, Average Loss: 3.880, avg. samples / sec: 516.24
Iteration:  18620, Loss function: 3.834, Average Loss: 3.880, avg. samples / sec: 513.27
Iteration:  18640, Loss function: 3.585, Average Loss: 3.878, avg. samples / sec: 515.96
Iteration:  18660, Loss function: 3.803, Average Loss: 3.877, avg. samples / sec: 515.88

:::MLPv0.5.0 ssd 1556672449.609707594 (train.py:553) train_epoch: 24
Iteration:  18680, Loss function: 3.968, Average Loss: 3.877, avg. samples / sec: 515.16
Iteration:  18700, Loss function: 3.824, Average Loss: 3.876, avg. samples / sec: 515.18
Iteration:  18720, Loss function: 3.875, Average Loss: 3.874, avg. samples / sec: 516.11
Iteration:  18740, Loss function: 3.883, Average Loss: 3.873, avg. samples / sec: 516.69
Iteration:  18760, Loss function: 3.917, Average Loss: 3.873, avg. samples / sec: 517.12
Iteration:  18780, Loss function: 3.640, Average Loss: 3.874, avg. samples / sec: 516.59
Iteration:  18800, Loss function: 3.686, Average Loss: 3.873, avg. samples / sec: 516.81
Iteration:  18820, Loss function: 3.803, Average Loss: 3.871, avg. samples / sec: 516.85
Iteration:  18840, Loss function: 3.818, Average Loss: 3.871, avg. samples / sec: 517.02
Iteration:  18860, Loss function: 3.678, Average Loss: 3.871, avg. samples / sec: 514.98
Iteration:  18880, Loss function: 3.737, Average Loss: 3.871, avg. samples / sec: 515.44
Iteration:  18900, Loss function: 4.013, Average Loss: 3.871, avg. samples / sec: 515.76
Iteration:  18920, Loss function: 3.864, Average Loss: 3.870, avg. samples / sec: 514.79
Iteration:  18940, Loss function: 3.578, Average Loss: 3.869, avg. samples / sec: 516.40
Iteration:  18960, Loss function: 3.730, Average Loss: 3.868, avg. samples / sec: 516.46
Iteration:  18980, Loss function: 3.906, Average Loss: 3.867, avg. samples / sec: 516.44
Iteration:  19000, Loss function: 3.931, Average Loss: 3.868, avg. samples / sec: 516.29
Iteration:  19020, Loss function: 3.930, Average Loss: 3.868, avg. samples / sec: 516.26
Iteration:  19040, Loss function: 3.954, Average Loss: 3.867, avg. samples / sec: 516.05
Iteration:  19060, Loss function: 3.824, Average Loss: 3.867, avg. samples / sec: 516.69
Iteration:  19080, Loss function: 3.791, Average Loss: 3.867, avg. samples / sec: 516.95
Iteration:  19100, Loss function: 3.612, Average Loss: 3.867, avg. samples / sec: 517.35
Iteration:  19120, Loss function: 3.981, Average Loss: 3.867, avg. samples / sec: 516.23
Iteration:  19140, Loss function: 3.811, Average Loss: 3.865, avg. samples / sec: 515.24
Iteration:  19160, Loss function: 3.801, Average Loss: 3.864, avg. samples / sec: 516.79
Iteration:  19180, Loss function: 3.569, Average Loss: 3.864, avg. samples / sec: 517.28
Iteration:  19200, Loss function: 3.955, Average Loss: 3.863, avg. samples / sec: 516.83
Iteration:  19220, Loss function: 3.747, Average Loss: 3.863, avg. samples / sec: 517.17
Iteration:  19240, Loss function: 3.985, Average Loss: 3.863, avg. samples / sec: 516.52
Iteration:  19260, Loss function: 3.818, Average Loss: 3.863, avg. samples / sec: 516.18
Iteration:  19280, Loss function: 3.959, Average Loss: 3.862, avg. samples / sec: 515.46
Iteration:  19300, Loss function: 3.851, Average Loss: 3.861, avg. samples / sec: 516.70
Iteration:  19320, Loss function: 3.867, Average Loss: 3.861, avg. samples / sec: 515.90
Iteration:  19340, Loss function: 3.629, Average Loss: 3.860, avg. samples / sec: 516.12
Iteration:  19360, Loss function: 3.817, Average Loss: 3.860, avg. samples / sec: 515.45
Iteration:  19380, Loss function: 3.797, Average Loss: 3.859, avg. samples / sec: 513.65
Iteration:  19400, Loss function: 3.711, Average Loss: 3.858, avg. samples / sec: 513.67
Iteration:  19420, Loss function: 3.620, Average Loss: 3.857, avg. samples / sec: 515.85
Iteration:  19440, Loss function: 4.196, Average Loss: 3.856, avg. samples / sec: 515.99

:::MLPv0.5.0 ssd 1556672679.033116579 (train.py:553) train_epoch: 25
Iteration:  19460, Loss function: 3.553, Average Loss: 3.856, avg. samples / sec: 516.14
Iteration:  19480, Loss function: 3.686, Average Loss: 3.855, avg. samples / sec: 515.73
Iteration:  19500, Loss function: 3.738, Average Loss: 3.855, avg. samples / sec: 516.37
Iteration:  19520, Loss function: 3.731, Average Loss: 3.854, avg. samples / sec: 516.35
Iteration:  19540, Loss function: 3.727, Average Loss: 3.853, avg. samples / sec: 516.80
Iteration:  19560, Loss function: 3.926, Average Loss: 3.854, avg. samples / sec: 516.37
Iteration:  19580, Loss function: 3.648, Average Loss: 3.852, avg. samples / sec: 516.29
Iteration:  19600, Loss function: 4.021, Average Loss: 3.850, avg. samples / sec: 516.17
Iteration:  19620, Loss function: 3.820, Average Loss: 3.850, avg. samples / sec: 517.03
Iteration:  19640, Loss function: 3.703, Average Loss: 3.851, avg. samples / sec: 517.01
Iteration:  19660, Loss function: 3.974, Average Loss: 3.852, avg. samples / sec: 516.71
Iteration:  19680, Loss function: 3.928, Average Loss: 3.851, avg. samples / sec: 516.44
Iteration:  19700, Loss function: 3.631, Average Loss: 3.850, avg. samples / sec: 516.63
Iteration:  19720, Loss function: 3.985, Average Loss: 3.851, avg. samples / sec: 516.59
Iteration:  19740, Loss function: 3.761, Average Loss: 3.849, avg. samples / sec: 516.42
Iteration:  19760, Loss function: 3.793, Average Loss: 3.849, avg. samples / sec: 517.11
Iteration:  19780, Loss function: 3.627, Average Loss: 3.850, avg. samples / sec: 516.16
Iteration:  19800, Loss function: 3.982, Average Loss: 3.850, avg. samples / sec: 516.12
Iteration:  19820, Loss function: 3.913, Average Loss: 3.850, avg. samples / sec: 515.63
Iteration:  19840, Loss function: 3.829, Average Loss: 3.850, avg. samples / sec: 516.69
Iteration:  19860, Loss function: 3.585, Average Loss: 3.850, avg. samples / sec: 517.25
Iteration:  19880, Loss function: 3.737, Average Loss: 3.850, avg. samples / sec: 516.86
Iteration:  19900, Loss function: 3.748, Average Loss: 3.849, avg. samples / sec: 517.23
Iteration:  19920, Loss function: 3.853, Average Loss: 3.847, avg. samples / sec: 515.55
Iteration:  19940, Loss function: 3.925, Average Loss: 3.847, avg. samples / sec: 516.30
Iteration:  19960, Loss function: 3.868, Average Loss: 3.846, avg. samples / sec: 515.96
Iteration:  19980, Loss function: 3.859, Average Loss: 3.847, avg. samples / sec: 516.41
Iteration:  20000, Loss function: 3.776, Average Loss: 3.846, avg. samples / sec: 516.12
Iteration:  20020, Loss function: 3.702, Average Loss: 3.845, avg. samples / sec: 515.99
Iteration:  20040, Loss function: 3.765, Average Loss: 3.845, avg. samples / sec: 515.41
Iteration:  20060, Loss function: 3.855, Average Loss: 3.845, avg. samples / sec: 516.69
Iteration:  20080, Loss function: 3.639, Average Loss: 3.845, avg. samples / sec: 517.41
Iteration:  20100, Loss function: 3.708, Average Loss: 3.844, avg. samples / sec: 516.63
Iteration:  20120, Loss function: 3.726, Average Loss: 3.843, avg. samples / sec: 516.84
Iteration:  20140, Loss function: 3.731, Average Loss: 3.842, avg. samples / sec: 516.48
Iteration:  20160, Loss function: 3.932, Average Loss: 3.843, avg. samples / sec: 515.80
Iteration:  20180, Loss function: 3.782, Average Loss: 3.842, avg. samples / sec: 515.94
Iteration:  20200, Loss function: 3.843, Average Loss: 3.841, avg. samples / sec: 516.25
Iteration:  20220, Loss function: 3.753, Average Loss: 3.840, avg. samples / sec: 515.76

:::MLPv0.5.0 ssd 1556672908.034412622 (train.py:553) train_epoch: 26
Iteration:  20240, Loss function: 3.998, Average Loss: 3.840, avg. samples / sec: 516.55
Iteration:  20260, Loss function: 4.020, Average Loss: 3.840, avg. samples / sec: 515.64
Iteration:  20280, Loss function: 3.825, Average Loss: 3.838, avg. samples / sec: 515.74
Iteration:  20300, Loss function: 3.838, Average Loss: 3.838, avg. samples / sec: 517.09
Iteration:  20320, Loss function: 3.928, Average Loss: 3.839, avg. samples / sec: 516.63
Iteration:  20340, Loss function: 3.782, Average Loss: 3.839, avg. samples / sec: 516.69
Iteration:  20360, Loss function: 3.714, Average Loss: 3.839, avg. samples / sec: 516.76
Iteration:  20380, Loss function: 3.770, Average Loss: 3.837, avg. samples / sec: 515.89
Iteration:  20400, Loss function: 3.797, Average Loss: 3.837, avg. samples / sec: 516.17
Iteration:  20420, Loss function: 3.960, Average Loss: 3.838, avg. samples / sec: 515.73
Iteration:  20440, Loss function: 4.201, Average Loss: 3.839, avg. samples / sec: 516.17
Iteration:  20460, Loss function: 3.557, Average Loss: 3.838, avg. samples / sec: 516.92
Iteration:  20480, Loss function: 3.725, Average Loss: 3.838, avg. samples / sec: 516.24
Iteration:  20500, Loss function: 3.900, Average Loss: 3.838, avg. samples / sec: 516.14
Iteration:  20520, Loss function: 3.567, Average Loss: 3.837, avg. samples / sec: 516.27
Iteration:  20540, Loss function: 3.726, Average Loss: 3.836, avg. samples / sec: 516.72
Iteration:  20560, Loss function: 3.733, Average Loss: 3.835, avg. samples / sec: 516.98
Iteration:  20580, Loss function: 3.690, Average Loss: 3.836, avg. samples / sec: 515.42
Iteration:  20600, Loss function: 3.651, Average Loss: 3.835, avg. samples / sec: 516.50
Iteration:  20620, Loss function: 3.829, Average Loss: 3.835, avg. samples / sec: 517.42
Iteration:  20640, Loss function: 4.189, Average Loss: 3.835, avg. samples / sec: 517.34
Iteration:  20660, Loss function: 3.703, Average Loss: 3.834, avg. samples / sec: 516.52
Iteration:  20680, Loss function: 3.791, Average Loss: 3.834, avg. samples / sec: 516.29
Iteration:  20700, Loss function: 3.742, Average Loss: 3.832, avg. samples / sec: 516.26
Iteration:  20720, Loss function: 3.771, Average Loss: 3.831, avg. samples / sec: 516.04
Iteration:  20740, Loss function: 3.914, Average Loss: 3.831, avg. samples / sec: 516.61
Iteration:  20760, Loss function: 3.828, Average Loss: 3.832, avg. samples / sec: 516.60
Iteration:  20780, Loss function: 4.048, Average Loss: 3.831, avg. samples / sec: 516.76
Iteration:  20800, Loss function: 3.618, Average Loss: 3.830, avg. samples / sec: 516.85
Iteration:  20820, Loss function: 3.713, Average Loss: 3.829, avg. samples / sec: 516.09
Iteration:  20840, Loss function: 3.721, Average Loss: 3.830, avg. samples / sec: 516.31
Iteration:  20860, Loss function: 3.835, Average Loss: 3.829, avg. samples / sec: 516.12
Iteration:  20880, Loss function: 3.488, Average Loss: 3.828, avg. samples / sec: 516.61
Iteration:  20900, Loss function: 3.637, Average Loss: 3.828, avg. samples / sec: 517.12
Iteration:  20920, Loss function: 3.828, Average Loss: 3.827, avg. samples / sec: 517.03
Iteration:  20940, Loss function: 3.755, Average Loss: 3.826, avg. samples / sec: 516.61
Iteration:  20960, Loss function: 3.713, Average Loss: 3.826, avg. samples / sec: 515.33
Iteration:  20980, Loss function: 3.892, Average Loss: 3.824, avg. samples / sec: 516.63
Iteration:  21000, Loss function: 3.911, Average Loss: 3.823, avg. samples / sec: 516.07

:::MLPv0.5.0 ssd 1556673137.018015146 (train.py:553) train_epoch: 27
Iteration:  21020, Loss function: 3.885, Average Loss: 3.823, avg. samples / sec: 516.38
Iteration:  21040, Loss function: 3.650, Average Loss: 3.824, avg. samples / sec: 517.01
Iteration:  21060, Loss function: 3.755, Average Loss: 3.823, avg. samples / sec: 516.35
Iteration:  21080, Loss function: 3.925, Average Loss: 3.821, avg. samples / sec: 516.65
Iteration:  21100, Loss function: 3.881, Average Loss: 3.821, avg. samples / sec: 517.08
Iteration:  21120, Loss function: 3.857, Average Loss: 3.822, avg. samples / sec: 517.19
Iteration:  21140, Loss function: 3.765, Average Loss: 3.820, avg. samples / sec: 516.80
Iteration:  21160, Loss function: 4.034, Average Loss: 3.820, avg. samples / sec: 517.69
Iteration:  21180, Loss function: 3.794, Average Loss: 3.820, avg. samples / sec: 516.32
Iteration:  21200, Loss function: 3.688, Average Loss: 3.821, avg. samples / sec: 516.03
Iteration:  21220, Loss function: 3.754, Average Loss: 3.820, avg. samples / sec: 516.51
Iteration:  21240, Loss function: 3.736, Average Loss: 3.820, avg. samples / sec: 517.44
Iteration:  21260, Loss function: 3.683, Average Loss: 3.819, avg. samples / sec: 517.03
Iteration:  21280, Loss function: 3.716, Average Loss: 3.820, avg. samples / sec: 517.01
Iteration:  21300, Loss function: 3.920, Average Loss: 3.819, avg. samples / sec: 516.97
Iteration:  21320, Loss function: 3.691, Average Loss: 3.818, avg. samples / sec: 516.87
Iteration:  21340, Loss function: 4.032, Average Loss: 3.818, avg. samples / sec: 516.68
Iteration:  21360, Loss function: 4.079, Average Loss: 3.818, avg. samples / sec: 516.40
Iteration:  21380, Loss function: 3.686, Average Loss: 3.817, avg. samples / sec: 516.60
Iteration:  21400, Loss function: 3.718, Average Loss: 3.816, avg. samples / sec: 516.02
Iteration:  21420, Loss function: 3.721, Average Loss: 3.816, avg. samples / sec: 515.95
Iteration:  21440, Loss function: 3.805, Average Loss: 3.816, avg. samples / sec: 517.57
Iteration:  21460, Loss function: 3.890, Average Loss: 3.816, avg. samples / sec: 516.79
Iteration:  21480, Loss function: 4.053, Average Loss: 3.815, avg. samples / sec: 517.10
Iteration:  21500, Loss function: 3.719, Average Loss: 3.815, avg. samples / sec: 516.97
Iteration:  21520, Loss function: 3.994, Average Loss: 3.814, avg. samples / sec: 517.12
Iteration:  21540, Loss function: 3.830, Average Loss: 3.814, avg. samples / sec: 516.58
Iteration:  21560, Loss function: 3.789, Average Loss: 3.813, avg. samples / sec: 516.86
Iteration:  21580, Loss function: 3.833, Average Loss: 3.813, avg. samples / sec: 517.07
Iteration:  21600, Loss function: 3.864, Average Loss: 3.813, avg. samples / sec: 515.91
Iteration:  21620, Loss function: 3.878, Average Loss: 3.813, avg. samples / sec: 516.01
Iteration:  21640, Loss function: 3.616, Average Loss: 3.813, avg. samples / sec: 515.36
Iteration:  21660, Loss function: 4.009, Average Loss: 3.811, avg. samples / sec: 516.89
Iteration:  21680, Loss function: 3.866, Average Loss: 3.812, avg. samples / sec: 516.64
Iteration:  21700, Loss function: 3.596, Average Loss: 3.810, avg. samples / sec: 516.22
Iteration:  21720, Loss function: 3.733, Average Loss: 3.810, avg. samples / sec: 516.36
Iteration:  21740, Loss function: 3.466, Average Loss: 3.809, avg. samples / sec: 516.13
Iteration:  21760, Loss function: 3.508, Average Loss: 3.807, avg. samples / sec: 516.77
Iteration:  21780, Loss function: 4.067, Average Loss: 3.807, avg. samples / sec: 516.32

:::MLPv0.5.0 ssd 1556673365.911157608 (train.py:553) train_epoch: 28
Iteration:  21800, Loss function: 3.785, Average Loss: 3.806, avg. samples / sec: 515.75
Iteration:  21820, Loss function: 3.815, Average Loss: 3.805, avg. samples / sec: 515.92
Iteration:  21840, Loss function: 3.527, Average Loss: 3.804, avg. samples / sec: 515.39
Iteration:  21860, Loss function: 4.022, Average Loss: 3.804, avg. samples / sec: 515.80
Iteration:  21880, Loss function: 3.931, Average Loss: 3.805, avg. samples / sec: 515.32
Iteration:  21900, Loss function: 3.563, Average Loss: 3.805, avg. samples / sec: 517.06
Iteration:  21920, Loss function: 3.511, Average Loss: 3.803, avg. samples / sec: 516.62
Iteration:  21940, Loss function: 3.711, Average Loss: 3.802, avg. samples / sec: 516.67
Iteration:  21960, Loss function: 3.826, Average Loss: 3.802, avg. samples / sec: 516.28
Iteration:  21980, Loss function: 3.919, Average Loss: 3.804, avg. samples / sec: 516.48
Iteration:  22000, Loss function: 3.815, Average Loss: 3.804, avg. samples / sec: 517.06
Iteration:  22020, Loss function: 3.545, Average Loss: 3.803, avg. samples / sec: 516.15
Iteration:  22040, Loss function: 3.972, Average Loss: 3.801, avg. samples / sec: 514.54
Iteration:  22060, Loss function: 3.762, Average Loss: 3.803, avg. samples / sec: 516.10
Iteration:  22080, Loss function: 3.857, Average Loss: 3.801, avg. samples / sec: 515.45
Iteration:  22100, Loss function: 3.808, Average Loss: 3.801, avg. samples / sec: 515.24
Iteration:  22120, Loss function: 3.741, Average Loss: 3.801, avg. samples / sec: 516.74
Iteration:  22140, Loss function: 3.804, Average Loss: 3.801, avg. samples / sec: 515.86
Iteration:  22160, Loss function: 3.820, Average Loss: 3.801, avg. samples / sec: 517.23
Iteration:  22180, Loss function: 3.685, Average Loss: 3.800, avg. samples / sec: 516.72
Iteration:  22200, Loss function: 4.250, Average Loss: 3.801, avg. samples / sec: 517.01
Iteration:  22220, Loss function: 3.901, Average Loss: 3.801, avg. samples / sec: 517.87
Iteration:  22240, Loss function: 3.767, Average Loss: 3.801, avg. samples / sec: 515.84
Iteration:  22260, Loss function: 3.961, Average Loss: 3.800, avg. samples / sec: 514.93
Iteration:  22280, Loss function: 3.756, Average Loss: 3.799, avg. samples / sec: 516.09
Iteration:  22300, Loss function: 3.654, Average Loss: 3.799, avg. samples / sec: 516.67
Iteration:  22320, Loss function: 3.752, Average Loss: 3.799, avg. samples / sec: 515.73
Iteration:  22340, Loss function: 3.730, Average Loss: 3.797, avg. samples / sec: 515.90
Iteration:  22360, Loss function: 3.797, Average Loss: 3.797, avg. samples / sec: 516.74
Iteration:  22380, Loss function: 3.575, Average Loss: 3.797, avg. samples / sec: 516.17
Iteration:  22400, Loss function: 3.713, Average Loss: 3.798, avg. samples / sec: 516.54
Iteration:  22420, Loss function: 3.767, Average Loss: 3.797, avg. samples / sec: 516.71
Iteration:  22440, Loss function: 3.917, Average Loss: 3.797, avg. samples / sec: 516.84
Iteration:  22460, Loss function: 3.887, Average Loss: 3.797, avg. samples / sec: 516.58
Iteration:  22480, Loss function: 3.670, Average Loss: 3.796, avg. samples / sec: 516.65
Iteration:  22500, Loss function: 3.662, Average Loss: 3.795, avg. samples / sec: 516.65
Iteration:  22520, Loss function: 3.645, Average Loss: 3.794, avg. samples / sec: 516.54
Iteration:  22540, Loss function: 3.628, Average Loss: 3.793, avg. samples / sec: 516.14
Iteration:  22560, Loss function: 3.992, Average Loss: 3.792, avg. samples / sec: 515.98

:::MLPv0.5.0 ssd 1556673594.970520735 (train.py:553) train_epoch: 29
Iteration:  22580, Loss function: 3.792, Average Loss: 3.792, avg. samples / sec: 516.85
Iteration:  22600, Loss function: 3.953, Average Loss: 3.792, avg. samples / sec: 516.67
Iteration:  22620, Loss function: 3.682, Average Loss: 3.791, avg. samples / sec: 516.66
Iteration:  22640, Loss function: 3.731, Average Loss: 3.790, avg. samples / sec: 516.95
Iteration:  22660, Loss function: 4.001, Average Loss: 3.790, avg. samples / sec: 516.40
Iteration:  22680, Loss function: 3.824, Average Loss: 3.790, avg. samples / sec: 516.79
Iteration:  22700, Loss function: 3.561, Average Loss: 3.789, avg. samples / sec: 516.94
Iteration:  22720, Loss function: 3.759, Average Loss: 3.787, avg. samples / sec: 515.99
Iteration:  22740, Loss function: 3.912, Average Loss: 3.787, avg. samples / sec: 516.15
Iteration:  22760, Loss function: 3.557, Average Loss: 3.788, avg. samples / sec: 516.43
Iteration:  22780, Loss function: 3.768, Average Loss: 3.787, avg. samples / sec: 515.09
Iteration:  22800, Loss function: 3.836, Average Loss: 3.786, avg. samples / sec: 516.58
Iteration:  22820, Loss function: 3.853, Average Loss: 3.786, avg. samples / sec: 517.09
Iteration:  22840, Loss function: 3.837, Average Loss: 3.786, avg. samples / sec: 516.58
Iteration:  22860, Loss function: 3.957, Average Loss: 3.785, avg. samples / sec: 515.97
Iteration:  22880, Loss function: 3.810, Average Loss: 3.785, avg. samples / sec: 516.40
Iteration:  22900, Loss function: 3.918, Average Loss: 3.786, avg. samples / sec: 517.11
Iteration:  22920, Loss function: 3.825, Average Loss: 3.786, avg. samples / sec: 515.92
Iteration:  22940, Loss function: 3.857, Average Loss: 3.786, avg. samples / sec: 516.47
Iteration:  22960, Loss function: 4.179, Average Loss: 3.786, avg. samples / sec: 516.76
Iteration:  22980, Loss function: 3.909, Average Loss: 3.787, avg. samples / sec: 516.13
Iteration:  23000, Loss function: 3.883, Average Loss: 3.787, avg. samples / sec: 516.10
Iteration:  23020, Loss function: 3.742, Average Loss: 3.786, avg. samples / sec: 515.17
Iteration:  23040, Loss function: 3.574, Average Loss: 3.785, avg. samples / sec: 515.90
Iteration:  23060, Loss function: 3.971, Average Loss: 3.784, avg. samples / sec: 516.64
Iteration:  23080, Loss function: 3.674, Average Loss: 3.784, avg. samples / sec: 514.91
Iteration:  23100, Loss function: 3.776, Average Loss: 3.784, avg. samples / sec: 516.23
Iteration:  23120, Loss function: 3.698, Average Loss: 3.783, avg. samples / sec: 515.57
Iteration:  23140, Loss function: 3.740, Average Loss: 3.784, avg. samples / sec: 515.77
Iteration:  23160, Loss function: 3.878, Average Loss: 3.784, avg. samples / sec: 515.70
Iteration:  23180, Loss function: 3.827, Average Loss: 3.783, avg. samples / sec: 516.29
Iteration:  23200, Loss function: 3.475, Average Loss: 3.783, avg. samples / sec: 516.12
Iteration:  23220, Loss function: 3.920, Average Loss: 3.783, avg. samples / sec: 515.57
Iteration:  23240, Loss function: 3.721, Average Loss: 3.783, avg. samples / sec: 515.40
Iteration:  23260, Loss function: 3.738, Average Loss: 3.781, avg. samples / sec: 516.19
Iteration:  23280, Loss function: 3.660, Average Loss: 3.781, avg. samples / sec: 516.32
Iteration:  23300, Loss function: 3.916, Average Loss: 3.781, avg. samples / sec: 515.87
Iteration:  23320, Loss function: 3.797, Average Loss: 3.780, avg. samples / sec: 515.58
Iteration:  23340, Loss function: 3.813, Average Loss: 3.780, avg. samples / sec: 516.63

:::MLPv0.5.0 ssd 1556673824.357668877 (train.py:553) train_epoch: 30
Iteration:  23360, Loss function: 3.630, Average Loss: 3.779, avg. samples / sec: 516.77
Iteration:  23380, Loss function: 3.915, Average Loss: 3.778, avg. samples / sec: 516.70
Iteration:  23400, Loss function: 3.621, Average Loss: 3.777, avg. samples / sec: 516.56
Iteration:  23420, Loss function: 3.727, Average Loss: 3.777, avg. samples / sec: 516.66
Iteration:  23440, Loss function: 3.995, Average Loss: 3.778, avg. samples / sec: 515.89
Iteration:  23460, Loss function: 3.951, Average Loss: 3.779, avg. samples / sec: 515.32
Iteration:  23480, Loss function: 3.762, Average Loss: 3.777, avg. samples / sec: 515.94
Iteration:  23500, Loss function: 3.706, Average Loss: 3.776, avg. samples / sec: 516.43
Iteration:  23520, Loss function: 3.868, Average Loss: 3.776, avg. samples / sec: 516.69
Iteration:  23540, Loss function: 3.844, Average Loss: 3.777, avg. samples / sec: 516.01
Iteration:  23560, Loss function: 3.597, Average Loss: 3.776, avg. samples / sec: 516.42
Iteration:  23580, Loss function: 3.650, Average Loss: 3.776, avg. samples / sec: 516.37
Iteration:  23600, Loss function: 3.709, Average Loss: 3.775, avg. samples / sec: 516.50
Iteration:  23620, Loss function: 3.831, Average Loss: 3.775, avg. samples / sec: 517.40
Iteration:  23640, Loss function: 3.604, Average Loss: 3.774, avg. samples / sec: 515.51
Iteration:  23660, Loss function: 3.800, Average Loss: 3.774, avg. samples / sec: 515.80
Iteration:  23680, Loss function: 3.879, Average Loss: 3.774, avg. samples / sec: 515.69
Iteration:  23700, Loss function: 3.775, Average Loss: 3.775, avg. samples / sec: 515.65
Iteration:  23720, Loss function: 3.879, Average Loss: 3.774, avg. samples / sec: 515.62
Iteration:  23740, Loss function: 3.541, Average Loss: 3.773, avg. samples / sec: 516.32
Iteration:  23760, Loss function: 3.710, Average Loss: 3.774, avg. samples / sec: 516.61
Iteration:  23780, Loss function: 3.905, Average Loss: 3.774, avg. samples / sec: 517.03
Iteration:  23800, Loss function: 3.646, Average Loss: 3.772, avg. samples / sec: 515.69
Iteration:  23820, Loss function: 3.584, Average Loss: 3.771, avg. samples / sec: 516.33
Iteration:  23840, Loss function: 3.951, Average Loss: 3.770, avg. samples / sec: 516.15
Iteration:  23860, Loss function: 3.542, Average Loss: 3.770, avg. samples / sec: 517.26
Iteration:  23880, Loss function: 3.833, Average Loss: 3.770, avg. samples / sec: 516.73
Iteration:  23900, Loss function: 3.507, Average Loss: 3.769, avg. samples / sec: 516.59
Iteration:  23920, Loss function: 3.788, Average Loss: 3.769, avg. samples / sec: 515.50
Iteration:  23940, Loss function: 3.922, Average Loss: 3.769, avg. samples / sec: 516.65
Iteration:  23960, Loss function: 3.786, Average Loss: 3.769, avg. samples / sec: 517.28
Iteration:  23980, Loss function: 3.715, Average Loss: 3.769, avg. samples / sec: 515.39
Iteration:  24000, Loss function: 3.851, Average Loss: 3.769, avg. samples / sec: 515.90
Iteration:  24020, Loss function: 3.846, Average Loss: 3.770, avg. samples / sec: 515.57
Iteration:  24040, Loss function: 3.805, Average Loss: 3.769, avg. samples / sec: 515.77
Iteration:  24060, Loss function: 3.559, Average Loss: 3.768, avg. samples / sec: 514.19
Iteration:  24080, Loss function: 3.781, Average Loss: 3.767, avg. samples / sec: 514.58
Iteration:  24100, Loss function: 3.744, Average Loss: 3.765, avg. samples / sec: 515.46
Iteration:  24120, Loss function: 3.962, Average Loss: 3.766, avg. samples / sec: 516.05

:::MLPv0.5.0 ssd 1556674053.488124371 (train.py:553) train_epoch: 31
Iteration:  24140, Loss function: 3.947, Average Loss: 3.765, avg. samples / sec: 515.21
Iteration:  24160, Loss function: 3.626, Average Loss: 3.765, avg. samples / sec: 516.53
Iteration:  24180, Loss function: 3.621, Average Loss: 3.763, avg. samples / sec: 517.46
Iteration:  24200, Loss function: 3.941, Average Loss: 3.763, avg. samples / sec: 516.41
Iteration:  24220, Loss function: 3.883, Average Loss: 3.765, avg. samples / sec: 516.67
Iteration:  24240, Loss function: 3.584, Average Loss: 3.765, avg. samples / sec: 517.18
Iteration:  24260, Loss function: 3.787, Average Loss: 3.763, avg. samples / sec: 517.02
Iteration:  24280, Loss function: 3.947, Average Loss: 3.763, avg. samples / sec: 517.06
Iteration:  24300, Loss function: 3.547, Average Loss: 3.762, avg. samples / sec: 516.41
Iteration:  24320, Loss function: 3.784, Average Loss: 3.763, avg. samples / sec: 516.59
Iteration:  24340, Loss function: 3.447, Average Loss: 3.761, avg. samples / sec: 516.27
Iteration:  24360, Loss function: 3.806, Average Loss: 3.761, avg. samples / sec: 516.18
Iteration:  24380, Loss function: 3.819, Average Loss: 3.760, avg. samples / sec: 515.71
Iteration:  24400, Loss function: 3.888, Average Loss: 3.761, avg. samples / sec: 516.10
Iteration:  24420, Loss function: 3.777, Average Loss: 3.760, avg. samples / sec: 516.10
Iteration:  24440, Loss function: 3.747, Average Loss: 3.760, avg. samples / sec: 516.94
Iteration:  24460, Loss function: 3.648, Average Loss: 3.760, avg. samples / sec: 516.77
Iteration:  24480, Loss function: 3.692, Average Loss: 3.760, avg. samples / sec: 516.13
Iteration:  24500, Loss function: 3.716, Average Loss: 3.760, avg. samples / sec: 516.08
Iteration:  24520, Loss function: 3.873, Average Loss: 3.760, avg. samples / sec: 516.84
Iteration:  24540, Loss function: 3.776, Average Loss: 3.761, avg. samples / sec: 516.06
Iteration:  24560, Loss function: 3.859, Average Loss: 3.761, avg. samples / sec: 516.56
Iteration:  24580, Loss function: 3.968, Average Loss: 3.760, avg. samples / sec: 516.31
Iteration:  24600, Loss function: 3.739, Average Loss: 3.759, avg. samples / sec: 515.34
Iteration:  24620, Loss function: 3.740, Average Loss: 3.758, avg. samples / sec: 516.88
Iteration:  24640, Loss function: 3.861, Average Loss: 3.758, avg. samples / sec: 517.36
Iteration:  24660, Loss function: 3.785, Average Loss: 3.759, avg. samples / sec: 515.80
Iteration:  24680, Loss function: 3.667, Average Loss: 3.758, avg. samples / sec: 516.19
Iteration:  24700, Loss function: 3.885, Average Loss: 3.757, avg. samples / sec: 515.24
Iteration:  24720, Loss function: 4.148, Average Loss: 3.757, avg. samples / sec: 515.64
Iteration:  24740, Loss function: 4.108, Average Loss: 3.757, avg. samples / sec: 516.18
Iteration:  24760, Loss function: 3.638, Average Loss: 3.757, avg. samples / sec: 515.12
Iteration:  24780, Loss function: 3.622, Average Loss: 3.757, avg. samples / sec: 515.67
Iteration:  24800, Loss function: 3.785, Average Loss: 3.757, avg. samples / sec: 516.33
Iteration:  24820, Loss function: 3.616, Average Loss: 3.757, avg. samples / sec: 516.21
Iteration:  24840, Loss function: 4.032, Average Loss: 3.757, avg. samples / sec: 516.32
Iteration:  24860, Loss function: 3.535, Average Loss: 3.756, avg. samples / sec: 516.53
Iteration:  24880, Loss function: 3.670, Average Loss: 3.754, avg. samples / sec: 516.56
Iteration:  24900, Loss function: 3.850, Average Loss: 3.754, avg. samples / sec: 516.88

:::MLPv0.5.0 ssd 1556674282.520568132 (train.py:553) train_epoch: 32
Iteration:  24920, Loss function: 3.811, Average Loss: 3.755, avg. samples / sec: 516.37
Iteration:  24940, Loss function: 3.728, Average Loss: 3.754, avg. samples / sec: 516.46
Iteration:  24960, Loss function: 3.836, Average Loss: 3.753, avg. samples / sec: 516.27
Iteration:  24980, Loss function: 3.868, Average Loss: 3.753, avg. samples / sec: 516.80
Iteration:  25000, Loss function: 3.714, Average Loss: 3.753, avg. samples / sec: 515.08
Iteration:  25020, Loss function: 3.782, Average Loss: 3.753, avg. samples / sec: 515.49
Iteration:  25040, Loss function: 3.819, Average Loss: 3.752, avg. samples / sec: 514.75
Iteration:  25060, Loss function: 3.725, Average Loss: 3.752, avg. samples / sec: 515.77
Iteration:  25080, Loss function: 3.679, Average Loss: 3.752, avg. samples / sec: 516.84
Iteration:  25100, Loss function: 3.825, Average Loss: 3.753, avg. samples / sec: 515.99
Iteration:  25120, Loss function: 3.533, Average Loss: 3.753, avg. samples / sec: 516.49
Iteration:  25140, Loss function: 3.852, Average Loss: 3.752, avg. samples / sec: 516.92
Iteration:  25160, Loss function: 3.751, Average Loss: 3.752, avg. samples / sec: 517.09
Iteration:  25180, Loss function: 3.602, Average Loss: 3.752, avg. samples / sec: 516.13
Iteration:  25200, Loss function: 3.765, Average Loss: 3.751, avg. samples / sec: 516.03
Iteration:  25220, Loss function: 3.764, Average Loss: 3.751, avg. samples / sec: 516.35
Iteration:  25240, Loss function: 3.765, Average Loss: 3.751, avg. samples / sec: 517.00
Iteration:  25260, Loss function: 3.671, Average Loss: 3.752, avg. samples / sec: 515.61


:::MLPv0.5.0 ssd 1556674388.836763859 (train.py:217) nms_threshold: 0.5

:::MLPv0.5.0 ssd 1556674388.837358236 (train.py:219) nms_max_detections: 200

:::MLPv0.5.0 ssd 1556674388.837839842 (train.py:220) eval_start: 32
/opt/conda/lib/python3.6/site-packages/torch/nn/functional.py:54: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
Parsing batch: 0/46Parsing batch: 1/46Parsing batch: 2/46Parsing batch: 3/46Parsing batch: 4/46Parsing batch: 5/46Parsing batch: 6/46Parsing batch: 7/46Parsing batch: 8/46Parsing batch: 9/46Parsing batch: 10/46Parsing batch: 11/46Parsing batch: 12/46Parsing batch: 13/46Parsing batch: 14/46Parsing batch: 15/46Parsing batch: 16/46Parsing batch: 17/46Parsing batch: 18/46Parsing batch: 19/46Parsing batch: 20/46Parsing batch: 21/46Parsing batch: 22/46Parsing batch: 23/46Parsing batch: 24/46Parsing batch: 25/46Parsing batch: 26/46Parsing batch: 27/46Parsing batch: 28/46Parsing batch: 29/46Parsing batch: 30/46Parsing batch: 31/46Parsing batch: 32/46Parsing batch: 33/46Parsing batch: 34/46Parsing batch: 35/46Parsing batch: 36/46Parsing batch: 37/46Parsing batch: 38/46Parsing batch: 39/46Parsing batch: 40/46Parsing batch: 41/46Parsing batch: 42/46Parsing batch: 43/46Parsing batch: 44/46Parsing batch: 45/46Loading and preparing results...
Converting ndarray to lists...
(383229, 7)
0/383229
DONE (t=2.22s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.31s).
Accumulating evaluation results...
DONE (t=1.12s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.166
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.311
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.165
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.041
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.178
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.266
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.178
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.259
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.273
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.072
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.292
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.428
Current AP: 0.16605 AP goal: 0.21200

:::MLPv0.5.0 ssd 1556674656.736634731 (train.py:330) eval_size: 4952

:::MLPv0.5.0 ssd 1556674656.737128258 (train.py:333) eval_accuracy: {"epoch": 32, "value": 0.16605263546394616}

:::MLPv0.5.0 ssd 1556674656.737508774 (train.py:336) eval_iteration_accuracy: {"epoch": 32, "value": 0.16605263546394616}

:::MLPv0.5.0 ssd 1556674656.737866402 (train.py:337) eval_target: 0.212

:::MLPv0.5.0 ssd 1556674656.738223076 (train.py:338) eval_stop: 32
Iteration:  25280, Loss function: 3.752, Average Loss: 3.751, avg. samples / sec: 11.10
Iteration:  25300, Loss function: 3.714, Average Loss: 3.750, avg. samples / sec: 520.10
Iteration:  25320, Loss function: 3.809, Average Loss: 3.750, avg. samples / sec: 519.05
Iteration:  25340, Loss function: 3.619, Average Loss: 3.750, avg. samples / sec: 519.18
Iteration:  25360, Loss function: 3.644, Average Loss: 3.749, avg. samples / sec: 517.62
Iteration:  25380, Loss function: 3.766, Average Loss: 3.748, avg. samples / sec: 517.70
Iteration:  25400, Loss function: 3.831, Average Loss: 3.747, avg. samples / sec: 519.23
Iteration:  25420, Loss function: 3.625, Average Loss: 3.747, avg. samples / sec: 518.10
Iteration:  25440, Loss function: 3.574, Average Loss: 3.747, avg. samples / sec: 517.49
Iteration:  25460, Loss function: 3.551, Average Loss: 3.746, avg. samples / sec: 518.12
Iteration:  25480, Loss function: 3.664, Average Loss: 3.746, avg. samples / sec: 517.81
Iteration:  25500, Loss function: 3.749, Average Loss: 3.745, avg. samples / sec: 515.25
Iteration:  25520, Loss function: 3.811, Average Loss: 3.746, avg. samples / sec: 516.34
Iteration:  25540, Loss function: 3.948, Average Loss: 3.745, avg. samples / sec: 517.50
Iteration:  25560, Loss function: 3.629, Average Loss: 3.744, avg. samples / sec: 517.80
Iteration:  25580, Loss function: 3.769, Average Loss: 3.744, avg. samples / sec: 516.50
Iteration:  25600, Loss function: 3.775, Average Loss: 3.743, avg. samples / sec: 516.41
Iteration:  25620, Loss function: 3.801, Average Loss: 3.743, avg. samples / sec: 516.31
Iteration:  25640, Loss function: 3.745, Average Loss: 3.742, avg. samples / sec: 517.27
Iteration:  25660, Loss function: 3.805, Average Loss: 3.741, avg. samples / sec: 517.17
Iteration:  25680, Loss function: 3.615, Average Loss: 3.741, avg. samples / sec: 515.91

:::MLPv0.5.0 ssd 1556674779.391902208 (train.py:553) train_epoch: 33
Iteration:  25700, Loss function: 3.522, Average Loss: 3.741, avg. samples / sec: 516.18
Iteration:  25720, Loss function: 3.745, Average Loss: 3.740, avg. samples / sec: 515.31
Iteration:  25740, Loss function: 3.725, Average Loss: 3.739, avg. samples / sec: 515.43
Iteration:  25760, Loss function: 3.907, Average Loss: 3.739, avg. samples / sec: 516.48
Iteration:  25780, Loss function: 3.733, Average Loss: 3.741, avg. samples / sec: 517.62
Iteration:  25800, Loss function: 3.800, Average Loss: 3.741, avg. samples / sec: 517.33
Iteration:  25820, Loss function: 3.669, Average Loss: 3.739, avg. samples / sec: 517.45
Iteration:  25840, Loss function: 3.871, Average Loss: 3.739, avg. samples / sec: 517.16
Iteration:  25860, Loss function: 3.956, Average Loss: 3.740, avg. samples / sec: 517.04
Iteration:  25880, Loss function: 3.534, Average Loss: 3.740, avg. samples / sec: 516.52
Iteration:  25900, Loss function: 3.408, Average Loss: 3.739, avg. samples / sec: 514.65
Iteration:  25920, Loss function: 3.948, Average Loss: 3.739, avg. samples / sec: 515.92
Iteration:  25940, Loss function: 3.714, Average Loss: 3.739, avg. samples / sec: 516.64
Iteration:  25960, Loss function: 3.622, Average Loss: 3.739, avg. samples / sec: 515.16
Iteration:  25980, Loss function: 3.620, Average Loss: 3.738, avg. samples / sec: 515.89
Iteration:  26000, Loss function: 3.862, Average Loss: 3.739, avg. samples / sec: 516.87
Iteration:  26020, Loss function: 3.714, Average Loss: 3.738, avg. samples / sec: 516.41
Iteration:  26040, Loss function: 3.796, Average Loss: 3.738, avg. samples / sec: 515.21
Iteration:  26060, Loss function: 3.811, Average Loss: 3.738, avg. samples / sec: 516.62
Iteration:  26080, Loss function: 3.764, Average Loss: 3.737, avg. samples / sec: 516.54
Iteration:  26100, Loss function: 3.787, Average Loss: 3.738, avg. samples / sec: 517.67
Iteration:  26120, Loss function: 3.521, Average Loss: 3.738, avg. samples / sec: 516.71
Iteration:  26140, Loss function: 3.915, Average Loss: 3.738, avg. samples / sec: 516.72
Iteration:  26160, Loss function: 3.615, Average Loss: 3.737, avg. samples / sec: 516.65
Iteration:  26180, Loss function: 3.641, Average Loss: 3.737, avg. samples / sec: 516.73
Iteration:  26200, Loss function: 3.843, Average Loss: 3.737, avg. samples / sec: 515.57
Iteration:  26220, Loss function: 3.861, Average Loss: 3.738, avg. samples / sec: 516.55
Iteration:  26240, Loss function: 3.732, Average Loss: 3.737, avg. samples / sec: 516.43
Iteration:  26260, Loss function: 3.573, Average Loss: 3.737, avg. samples / sec: 514.33
Iteration:  26280, Loss function: 3.690, Average Loss: 3.737, avg. samples / sec: 515.14
Iteration:  26300, Loss function: 3.609, Average Loss: 3.738, avg. samples / sec: 516.79
Iteration:  26320, Loss function: 3.704, Average Loss: 3.737, avg. samples / sec: 515.31
Iteration:  26340, Loss function: 3.543, Average Loss: 3.736, avg. samples / sec: 515.15
Iteration:  26360, Loss function: 3.860, Average Loss: 3.736, avg. samples / sec: 516.11
Iteration:  26380, Loss function: 3.659, Average Loss: 3.736, avg. samples / sec: 516.49
Iteration:  26400, Loss function: 3.468, Average Loss: 3.735, avg. samples / sec: 514.82
Iteration:  26420, Loss function: 3.645, Average Loss: 3.734, avg. samples / sec: 514.72
Iteration:  26440, Loss function: 3.881, Average Loss: 3.733, avg. samples / sec: 515.56

:::MLPv0.5.0 ssd 1556675008.505669832 (train.py:553) train_epoch: 34
Iteration:  26460, Loss function: 3.980, Average Loss: 3.733, avg. samples / sec: 516.32
Iteration:  26480, Loss function: 3.756, Average Loss: 3.732, avg. samples / sec: 516.02
Iteration:  26500, Loss function: 3.612, Average Loss: 3.731, avg. samples / sec: 515.61
Iteration:  26520, Loss function: 3.600, Average Loss: 3.731, avg. samples / sec: 515.26
Iteration:  26540, Loss function: 3.696, Average Loss: 3.731, avg. samples / sec: 514.96
Iteration:  26560, Loss function: 3.771, Average Loss: 3.731, avg. samples / sec: 514.74
Iteration:  26580, Loss function: 3.593, Average Loss: 3.730, avg. samples / sec: 515.66
Iteration:  26600, Loss function: 3.774, Average Loss: 3.729, avg. samples / sec: 517.22
Iteration:  26620, Loss function: 3.462, Average Loss: 3.729, avg. samples / sec: 516.72
Iteration:  26640, Loss function: 3.720, Average Loss: 3.730, avg. samples / sec: 516.64
Iteration:  26660, Loss function: 3.521, Average Loss: 3.730, avg. samples / sec: 516.74
Iteration:  26680, Loss function: 3.878, Average Loss: 3.729, avg. samples / sec: 516.79
Iteration:  26700, Loss function: 3.698, Average Loss: 3.729, avg. samples / sec: 516.34
Iteration:  26720, Loss function: 3.867, Average Loss: 3.729, avg. samples / sec: 516.99
Iteration:  26740, Loss function: 3.727, Average Loss: 3.729, avg. samples / sec: 515.38
Iteration:  26760, Loss function: 3.807, Average Loss: 3.728, avg. samples / sec: 514.67
Iteration:  26780, Loss function: 3.751, Average Loss: 3.728, avg. samples / sec: 517.05
Iteration:  26800, Loss function: 3.880, Average Loss: 3.729, avg. samples / sec: 516.21
Iteration:  26820, Loss function: 3.779, Average Loss: 3.729, avg. samples / sec: 515.13
Iteration:  26840, Loss function: 3.521, Average Loss: 3.729, avg. samples / sec: 514.79
Iteration:  26860, Loss function: 3.562, Average Loss: 3.728, avg. samples / sec: 515.34
Iteration:  26880, Loss function: 3.669, Average Loss: 3.729, avg. samples / sec: 513.52
Iteration:  26900, Loss function: 3.706, Average Loss: 3.729, avg. samples / sec: 513.60
Iteration:  26920, Loss function: 3.702, Average Loss: 3.728, avg. samples / sec: 515.89
Iteration:  26940, Loss function: 3.749, Average Loss: 3.727, avg. samples / sec: 515.97
Iteration:  26960, Loss function: 3.904, Average Loss: 3.726, avg. samples / sec: 515.98
Iteration:  26980, Loss function: 3.917, Average Loss: 3.728, avg. samples / sec: 516.49
Iteration:  27000, Loss function: 3.621, Average Loss: 3.727, avg. samples / sec: 515.84
Iteration:  27020, Loss function: 3.978, Average Loss: 3.726, avg. samples / sec: 516.48
Iteration:  27040, Loss function: 3.673, Average Loss: 3.727, avg. samples / sec: 517.06
Iteration:  27060, Loss function: 3.521, Average Loss: 3.726, avg. samples / sec: 516.16
Iteration:  27080, Loss function: 3.813, Average Loss: 3.726, avg. samples / sec: 516.33
Iteration:  27100, Loss function: 3.642, Average Loss: 3.725, avg. samples / sec: 515.01
Iteration:  27120, Loss function: 3.762, Average Loss: 3.724, avg. samples / sec: 515.33
Iteration:  27140, Loss function: 3.906, Average Loss: 3.724, avg. samples / sec: 515.66
Iteration:  27160, Loss function: 3.818, Average Loss: 3.723, avg. samples / sec: 515.74
Iteration:  27180, Loss function: 3.743, Average Loss: 3.723, avg. samples / sec: 516.02
Iteration:  27200, Loss function: 3.445, Average Loss: 3.721, avg. samples / sec: 516.25
Iteration:  27220, Loss function: 3.792, Average Loss: 3.720, avg. samples / sec: 516.39

:::MLPv0.5.0 ssd 1556675238.042222023 (train.py:553) train_epoch: 35
Iteration:  27240, Loss function: 3.743, Average Loss: 3.719, avg. samples / sec: 516.36
Iteration:  27260, Loss function: 3.704, Average Loss: 3.718, avg. samples / sec: 516.41
Iteration:  27280, Loss function: 3.686, Average Loss: 3.718, avg. samples / sec: 515.74
Iteration:  27300, Loss function: 3.732, Average Loss: 3.717, avg. samples / sec: 516.79
Iteration:  27320, Loss function: 3.677, Average Loss: 3.717, avg. samples / sec: 516.35
Iteration:  27340, Loss function: 3.393, Average Loss: 3.718, avg. samples / sec: 516.34
Iteration:  27360, Loss function: 3.581, Average Loss: 3.717, avg. samples / sec: 516.23
Iteration:  27380, Loss function: 3.906, Average Loss: 3.716, avg. samples / sec: 516.29
Iteration:  27400, Loss function: 3.808, Average Loss: 3.715, avg. samples / sec: 516.75
Iteration:  27420, Loss function: 3.635, Average Loss: 3.715, avg. samples / sec: 515.78
Iteration:  27440, Loss function: 3.747, Average Loss: 3.715, avg. samples / sec: 515.82
Iteration:  27460, Loss function: 3.677, Average Loss: 3.715, avg. samples / sec: 516.45
Iteration:  27480, Loss function: 3.700, Average Loss: 3.714, avg. samples / sec: 516.62
Iteration:  27500, Loss function: 3.762, Average Loss: 3.714, avg. samples / sec: 516.77
Iteration:  27520, Loss function: 3.508, Average Loss: 3.713, avg. samples / sec: 516.73
Iteration:  27540, Loss function: 3.871, Average Loss: 3.714, avg. samples / sec: 516.02
Iteration:  27560, Loss function: 3.702, Average Loss: 3.714, avg. samples / sec: 516.10
Iteration:  27580, Loss function: 3.723, Average Loss: 3.714, avg. samples / sec: 515.40
Iteration:  27600, Loss function: 3.923, Average Loss: 3.714, avg. samples / sec: 517.45
Iteration:  27620, Loss function: 3.628, Average Loss: 3.713, avg. samples / sec: 516.24
Iteration:  27640, Loss function: 3.766, Average Loss: 3.713, avg. samples / sec: 514.74
Iteration:  27660, Loss function: 3.929, Average Loss: 3.713, avg. samples / sec: 515.81
Iteration:  27680, Loss function: 3.653, Average Loss: 3.713, avg. samples / sec: 515.52
Iteration:  27700, Loss function: 3.576, Average Loss: 3.713, avg. samples / sec: 516.66
Iteration:  27720, Loss function: 3.487, Average Loss: 3.711, avg. samples / sec: 515.81
Iteration:  27740, Loss function: 3.804, Average Loss: 3.711, avg. samples / sec: 516.90
Iteration:  27760, Loss function: 3.905, Average Loss: 3.712, avg. samples / sec: 516.55
Iteration:  27780, Loss function: 3.456, Average Loss: 3.711, avg. samples / sec: 514.05
Iteration:  27800, Loss function: 3.622, Average Loss: 3.710, avg. samples / sec: 515.87
Iteration:  27820, Loss function: 3.855, Average Loss: 3.711, avg. samples / sec: 516.06
Iteration:  27840, Loss function: 3.535, Average Loss: 3.710, avg. samples / sec: 515.68
Iteration:  27860, Loss function: 3.585, Average Loss: 3.710, avg. samples / sec: 516.28
Iteration:  27880, Loss function: 3.455, Average Loss: 3.708, avg. samples / sec: 516.64
Iteration:  27900, Loss function: 3.608, Average Loss: 3.709, avg. samples / sec: 516.72
Iteration:  27920, Loss function: 3.229, Average Loss: 3.708, avg. samples / sec: 517.21
Iteration:  27940, Loss function: 3.829, Average Loss: 3.707, avg. samples / sec: 517.12
Iteration:  27960, Loss function: 3.818, Average Loss: 3.706, avg. samples / sec: 516.49
Iteration:  27980, Loss function: 3.445, Average Loss: 3.705, avg. samples / sec: 514.72
Iteration:  28000, Loss function: 3.540, Average Loss: 3.704, avg. samples / sec: 515.91

:::MLPv0.5.0 ssd 1556675467.146383047 (train.py:553) train_epoch: 36
Iteration:  28020, Loss function: 3.759, Average Loss: 3.704, avg. samples / sec: 515.82
Iteration:  28040, Loss function: 3.807, Average Loss: 3.704, avg. samples / sec: 516.55
Iteration:  28060, Loss function: 3.935, Average Loss: 3.703, avg. samples / sec: 516.67
Iteration:  28080, Loss function: 3.601, Average Loss: 3.703, avg. samples / sec: 516.86
Iteration:  28100, Loss function: 3.864, Average Loss: 3.703, avg. samples / sec: 515.14
Iteration:  28120, Loss function: 3.749, Average Loss: 3.704, avg. samples / sec: 516.18
Iteration:  28140, Loss function: 3.567, Average Loss: 3.703, avg. samples / sec: 516.09
Iteration:  28160, Loss function: 3.512, Average Loss: 3.702, avg. samples / sec: 515.32
Iteration:  28180, Loss function: 3.595, Average Loss: 3.703, avg. samples / sec: 516.15
Iteration:  28200, Loss function: 3.602, Average Loss: 3.704, avg. samples / sec: 515.40
Iteration:  28220, Loss function: 3.722, Average Loss: 3.704, avg. samples / sec: 515.68
Iteration:  28240, Loss function: 3.773, Average Loss: 3.704, avg. samples / sec: 515.35
Iteration:  28260, Loss function: 3.702, Average Loss: 3.703, avg. samples / sec: 515.89
Iteration:  28280, Loss function: 3.492, Average Loss: 3.703, avg. samples / sec: 515.94
Iteration:  28300, Loss function: 3.534, Average Loss: 3.703, avg. samples / sec: 516.50
Iteration:  28320, Loss function: 3.650, Average Loss: 3.703, avg. samples / sec: 516.50
Iteration:  28340, Loss function: 3.792, Average Loss: 3.704, avg. samples / sec: 514.79
Iteration:  28360, Loss function: 3.680, Average Loss: 3.703, avg. samples / sec: 514.78
Iteration:  28380, Loss function: 3.685, Average Loss: 3.703, avg. samples / sec: 513.45
Iteration:  28400, Loss function: 3.852, Average Loss: 3.703, avg. samples / sec: 516.64
Iteration:  28420, Loss function: 4.039, Average Loss: 3.703, avg. samples / sec: 515.25
Iteration:  28440, Loss function: 3.586, Average Loss: 3.704, avg. samples / sec: 516.14
Iteration:  28460, Loss function: 3.748, Average Loss: 3.704, avg. samples / sec: 515.04
Iteration:  28480, Loss function: 3.826, Average Loss: 3.703, avg. samples / sec: 514.02
Iteration:  28500, Loss function: 3.423, Average Loss: 3.703, avg. samples / sec: 516.38
Iteration:  28520, Loss function: 3.753, Average Loss: 3.703, avg. samples / sec: 516.30
Iteration:  28540, Loss function: 3.696, Average Loss: 3.704, avg. samples / sec: 516.37
Iteration:  28560, Loss function: 3.796, Average Loss: 3.704, avg. samples / sec: 516.56
Iteration:  28580, Loss function: 3.749, Average Loss: 3.703, avg. samples / sec: 516.58
Iteration:  28600, Loss function: 3.790, Average Loss: 3.704, avg. samples / sec: 516.20
Iteration:  28620, Loss function: 3.726, Average Loss: 3.703, avg. samples / sec: 514.27
Iteration:  28640, Loss function: 3.810, Average Loss: 3.703, avg. samples / sec: 515.63
Iteration:  28660, Loss function: 3.588, Average Loss: 3.703, avg. samples / sec: 515.47
Iteration:  28680, Loss function: 3.859, Average Loss: 3.703, avg. samples / sec: 515.69
Iteration:  28700, Loss function: 3.588, Average Loss: 3.701, avg. samples / sec: 515.32
Iteration:  28720, Loss function: 3.647, Average Loss: 3.702, avg. samples / sec: 516.14
Iteration:  28740, Loss function: 3.828, Average Loss: 3.702, avg. samples / sec: 516.95
Iteration:  28760, Loss function: 3.681, Average Loss: 3.700, avg. samples / sec: 517.37
Iteration:  28780, Loss function: 3.889, Average Loss: 3.699, avg. samples / sec: 517.82

:::MLPv0.5.0 ssd 1556675696.380906820 (train.py:553) train_epoch: 37
Iteration:  28800, Loss function: 3.753, Average Loss: 3.698, avg. samples / sec: 516.04
Iteration:  28820, Loss function: 3.870, Average Loss: 3.699, avg. samples / sec: 516.49
Iteration:  28840, Loss function: 3.575, Average Loss: 3.698, avg. samples / sec: 515.92
Iteration:  28860, Loss function: 3.784, Average Loss: 3.697, avg. samples / sec: 516.49
Iteration:  28880, Loss function: 3.884, Average Loss: 3.698, avg. samples / sec: 517.07
Iteration:  28900, Loss function: 3.750, Average Loss: 3.699, avg. samples / sec: 517.25
Iteration:  28920, Loss function: 3.468, Average Loss: 3.697, avg. samples / sec: 514.39
Iteration:  28940, Loss function: 3.795, Average Loss: 3.696, avg. samples / sec: 516.04
Iteration:  28960, Loss function: 3.736, Average Loss: 3.696, avg. samples / sec: 517.65
Iteration:  28980, Loss function: 3.837, Average Loss: 3.696, avg. samples / sec: 517.69
Iteration:  29000, Loss function: 3.765, Average Loss: 3.697, avg. samples / sec: 515.89
Iteration:  29020, Loss function: 3.600, Average Loss: 3.696, avg. samples / sec: 515.88
Iteration:  29040, Loss function: 3.784, Average Loss: 3.695, avg. samples / sec: 515.31
Iteration:  29060, Loss function: 3.658, Average Loss: 3.695, avg. samples / sec: 515.72
Iteration:  29080, Loss function: 3.564, Average Loss: 3.694, avg. samples / sec: 513.80
Iteration:  29100, Loss function: 3.720, Average Loss: 3.694, avg. samples / sec: 513.67
Iteration:  29120, Loss function: 3.546, Average Loss: 3.695, avg. samples / sec: 516.49
Iteration:  29140, Loss function: 3.914, Average Loss: 3.695, avg. samples / sec: 515.75
Iteration:  29160, Loss function: 3.675, Average Loss: 3.695, avg. samples / sec: 516.40
Iteration:  29180, Loss function: 3.655, Average Loss: 3.694, avg. samples / sec: 517.10
Iteration:  29200, Loss function: 3.638, Average Loss: 3.694, avg. samples / sec: 517.17
Iteration:  29220, Loss function: 3.667, Average Loss: 3.695, avg. samples / sec: 516.56
Iteration:  29240, Loss function: 3.748, Average Loss: 3.694, avg. samples / sec: 515.36
Iteration:  29260, Loss function: 3.913, Average Loss: 3.694, avg. samples / sec: 516.37
Iteration:  29280, Loss function: 3.508, Average Loss: 3.694, avg. samples / sec: 516.41
Iteration:  29300, Loss function: 3.936, Average Loss: 3.695, avg. samples / sec: 516.30
Iteration:  29320, Loss function: 3.741, Average Loss: 3.695, avg. samples / sec: 515.40
Iteration:  29340, Loss function: 3.786, Average Loss: 3.694, avg. samples / sec: 517.34
Iteration:  29360, Loss function: 3.914, Average Loss: 3.694, avg. samples / sec: 516.00
Iteration:  29380, Loss function: 3.772, Average Loss: 3.694, avg. samples / sec: 515.57
Iteration:  29400, Loss function: 3.622, Average Loss: 3.694, avg. samples / sec: 514.35
Iteration:  29420, Loss function: 3.732, Average Loss: 3.694, avg. samples / sec: 516.61
Iteration:  29440, Loss function: 3.804, Average Loss: 3.694, avg. samples / sec: 517.33
Iteration:  29460, Loss function: 3.474, Average Loss: 3.694, avg. samples / sec: 517.00
Iteration:  29480, Loss function: 3.532, Average Loss: 3.693, avg. samples / sec: 516.62
Iteration:  29500, Loss function: 3.872, Average Loss: 3.693, avg. samples / sec: 517.08
Iteration:  29520, Loss function: 3.812, Average Loss: 3.692, avg. samples / sec: 516.83
Iteration:  29540, Loss function: 3.674, Average Loss: 3.690, avg. samples / sec: 517.11
Iteration:  29560, Loss function: 3.673, Average Loss: 3.689, avg. samples / sec: 517.84

:::MLPv0.5.0 ssd 1556675925.429391623 (train.py:553) train_epoch: 38
Iteration:  29580, Loss function: 3.568, Average Loss: 3.689, avg. samples / sec: 517.73
Iteration:  29600, Loss function: 3.674, Average Loss: 3.689, avg. samples / sec: 516.18
Iteration:  29620, Loss function: 3.809, Average Loss: 3.689, avg. samples / sec: 516.68
Iteration:  29640, Loss function: 3.914, Average Loss: 3.689, avg. samples / sec: 517.80
Iteration:  29660, Loss function: 3.842, Average Loss: 3.689, avg. samples / sec: 516.98
Iteration:  29680, Loss function: 3.619, Average Loss: 3.691, avg. samples / sec: 517.57
Iteration:  29700, Loss function: 3.563, Average Loss: 3.689, avg. samples / sec: 518.01
Iteration:  29720, Loss function: 3.310, Average Loss: 3.688, avg. samples / sec: 518.15
Iteration:  29740, Loss function: 3.733, Average Loss: 3.687, avg. samples / sec: 517.63
Iteration:  29760, Loss function: 4.138, Average Loss: 3.689, avg. samples / sec: 517.19
Iteration:  29780, Loss function: 3.695, Average Loss: 3.689, avg. samples / sec: 517.68
Iteration:  29800, Loss function: 3.486, Average Loss: 3.688, avg. samples / sec: 517.46
Iteration:  29820, Loss function: 3.688, Average Loss: 3.688, avg. samples / sec: 515.07
Iteration:  29840, Loss function: 3.802, Average Loss: 3.688, avg. samples / sec: 512.90
Iteration:  29860, Loss function: 4.040, Average Loss: 3.688, avg. samples / sec: 514.79
Iteration:  29880, Loss function: 3.560, Average Loss: 3.687, avg. samples / sec: 514.91
Iteration:  29900, Loss function: 3.578, Average Loss: 3.688, avg. samples / sec: 516.43
Iteration:  29920, Loss function: 3.948, Average Loss: 3.687, avg. samples / sec: 517.21
Iteration:  29940, Loss function: 3.529, Average Loss: 3.686, avg. samples / sec: 515.86
Iteration:  29960, Loss function: 3.753, Average Loss: 3.686, avg. samples / sec: 516.76
Iteration:  29980, Loss function: 3.865, Average Loss: 3.686, avg. samples / sec: 517.89
Iteration:  30000, Loss function: 3.789, Average Loss: 3.685, avg. samples / sec: 517.62
Iteration:  30020, Loss function: 3.476, Average Loss: 3.684, avg. samples / sec: 517.57
Iteration:  30040, Loss function: 3.797, Average Loss: 3.683, avg. samples / sec: 517.75
Iteration:  30060, Loss function: 3.551, Average Loss: 3.681, avg. samples / sec: 516.40
Iteration:  30080, Loss function: 3.633, Average Loss: 3.681, avg. samples / sec: 516.65
Iteration:  30100, Loss function: 3.821, Average Loss: 3.681, avg. samples / sec: 516.96
Iteration:  30120, Loss function: 3.716, Average Loss: 3.681, avg. samples / sec: 517.65
Iteration:  30140, Loss function: 3.718, Average Loss: 3.680, avg. samples / sec: 516.70
Iteration:  30160, Loss function: 3.753, Average Loss: 3.680, avg. samples / sec: 517.52
Iteration:  30180, Loss function: 3.652, Average Loss: 3.680, avg. samples / sec: 517.56
Iteration:  30200, Loss function: 3.655, Average Loss: 3.679, avg. samples / sec: 517.05
Iteration:  30220, Loss function: 3.493, Average Loss: 3.679, avg. samples / sec: 516.96
Iteration:  30240, Loss function: 3.511, Average Loss: 3.679, avg. samples / sec: 517.30
Iteration:  30260, Loss function: 3.604, Average Loss: 3.679, avg. samples / sec: 517.56
Iteration:  30280, Loss function: 3.524, Average Loss: 3.678, avg. samples / sec: 516.69
Iteration:  30300, Loss function: 3.637, Average Loss: 3.679, avg. samples / sec: 517.17
Iteration:  30320, Loss function: 3.429, Average Loss: 3.678, avg. samples / sec: 517.39
Iteration:  30340, Loss function: 3.832, Average Loss: 3.677, avg. samples / sec: 517.54

:::MLPv0.5.0 ssd 1556676154.195442915 (train.py:553) train_epoch: 39
Iteration:  30360, Loss function: 3.706, Average Loss: 3.677, avg. samples / sec: 517.30
Iteration:  30380, Loss function: 3.529, Average Loss: 3.676, avg. samples / sec: 517.84
Iteration:  30400, Loss function: 3.530, Average Loss: 3.675, avg. samples / sec: 517.46
Iteration:  30420, Loss function: 3.680, Average Loss: 3.674, avg. samples / sec: 518.06
Iteration:  30440, Loss function: 3.919, Average Loss: 3.675, avg. samples / sec: 518.56
Iteration:  30460, Loss function: 3.734, Average Loss: 3.676, avg. samples / sec: 517.41
Iteration:  30480, Loss function: 3.431, Average Loss: 3.674, avg. samples / sec: 517.77
Iteration:  30500, Loss function: 3.548, Average Loss: 3.673, avg. samples / sec: 517.77
Iteration:  30520, Loss function: 4.113, Average Loss: 3.673, avg. samples / sec: 516.64
Iteration:  30540, Loss function: 3.549, Average Loss: 3.674, avg. samples / sec: 517.45
Iteration:  30560, Loss function: 3.683, Average Loss: 3.674, avg. samples / sec: 517.16
Iteration:  30580, Loss function: 3.553, Average Loss: 3.674, avg. samples / sec: 516.85
Iteration:  30600, Loss function: 3.514, Average Loss: 3.673, avg. samples / sec: 517.80
Iteration:  30620, Loss function: 3.636, Average Loss: 3.675, avg. samples / sec: 517.67
Iteration:  30640, Loss function: 3.614, Average Loss: 3.674, avg. samples / sec: 517.65
Iteration:  30660, Loss function: 3.698, Average Loss: 3.673, avg. samples / sec: 518.01
Iteration:  30680, Loss function: 3.743, Average Loss: 3.674, avg. samples / sec: 517.83
Iteration:  30700, Loss function: 3.607, Average Loss: 3.674, avg. samples / sec: 517.11
Iteration:  30720, Loss function: 3.609, Average Loss: 3.673, avg. samples / sec: 516.83
Iteration:  30740, Loss function: 3.536, Average Loss: 3.674, avg. samples / sec: 517.02
Iteration:  30760, Loss function: 3.827, Average Loss: 3.675, avg. samples / sec: 516.78
Iteration:  30780, Loss function: 3.655, Average Loss: 3.675, avg. samples / sec: 517.33
Iteration:  30800, Loss function: 3.569, Average Loss: 3.674, avg. samples / sec: 517.64
Iteration:  30820, Loss function: 3.689, Average Loss: 3.673, avg. samples / sec: 516.91
Iteration:  30840, Loss function: 3.680, Average Loss: 3.672, avg. samples / sec: 517.78
Iteration:  30860, Loss function: 3.623, Average Loss: 3.671, avg. samples / sec: 517.76
Iteration:  30880, Loss function: 3.655, Average Loss: 3.672, avg. samples / sec: 516.30
Iteration:  30900, Loss function: 4.022, Average Loss: 3.672, avg. samples / sec: 517.51
Iteration:  30920, Loss function: 3.756, Average Loss: 3.672, avg. samples / sec: 517.26
Iteration:  30940, Loss function: 3.480, Average Loss: 3.671, avg. samples / sec: 516.99
Iteration:  30960, Loss function: 3.539, Average Loss: 3.671, avg. samples / sec: 517.05
Iteration:  30980, Loss function: 3.706, Average Loss: 3.672, avg. samples / sec: 516.30
Iteration:  31000, Loss function: 3.695, Average Loss: 3.671, avg. samples / sec: 517.74
Iteration:  31020, Loss function: 3.333, Average Loss: 3.670, avg. samples / sec: 517.72
Iteration:  31040, Loss function: 3.657, Average Loss: 3.670, avg. samples / sec: 517.95
Iteration:  31060, Loss function: 3.771, Average Loss: 3.670, avg. samples / sec: 517.80
Iteration:  31080, Loss function: 3.573, Average Loss: 3.669, avg. samples / sec: 517.66
Iteration:  31100, Loss function: 3.500, Average Loss: 3.667, avg. samples / sec: 517.09
Iteration:  31120, Loss function: 3.895, Average Loss: 3.666, avg. samples / sec: 517.19

:::MLPv0.5.0 ssd 1556676383.044294834 (train.py:553) train_epoch: 40
Iteration:  31140, Loss function: 3.557, Average Loss: 3.666, avg. samples / sec: 517.60
Iteration:  31160, Loss function: 3.641, Average Loss: 3.666, avg. samples / sec: 517.60
Iteration:  31180, Loss function: 3.327, Average Loss: 3.666, avg. samples / sec: 516.98
Iteration:  31200, Loss function: 3.673, Average Loss: 3.665, avg. samples / sec: 516.67
Iteration:  31220, Loss function: 3.937, Average Loss: 3.666, avg. samples / sec: 517.13
Iteration:  31240, Loss function: 3.566, Average Loss: 3.667, avg. samples / sec: 517.62
Iteration:  31260, Loss function: 3.560, Average Loss: 3.664, avg. samples / sec: 517.62
Iteration:  31280, Loss function: 3.700, Average Loss: 3.664, avg. samples / sec: 517.34
Iteration:  31300, Loss function: 3.866, Average Loss: 3.663, avg. samples / sec: 515.28
Iteration:  31320, Loss function: 3.591, Average Loss: 3.664, avg. samples / sec: 516.54
Iteration:  31340, Loss function: 3.603, Average Loss: 3.664, avg. samples / sec: 515.93
Iteration:  31360, Loss function: 3.597, Average Loss: 3.663, avg. samples / sec: 516.80
Iteration:  31380, Loss function: 3.831, Average Loss: 3.663, avg. samples / sec: 516.73
Iteration:  31400, Loss function: 3.786, Average Loss: 3.664, avg. samples / sec: 517.03
Iteration:  31420, Loss function: 3.556, Average Loss: 3.663, avg. samples / sec: 516.00
Iteration:  31440, Loss function: 3.476, Average Loss: 3.663, avg. samples / sec: 516.35
Iteration:  31460, Loss function: 3.664, Average Loss: 3.663, avg. samples / sec: 516.40
Iteration:  31480, Loss function: 3.912, Average Loss: 3.664, avg. samples / sec: 517.15
Iteration:  31500, Loss function: 3.513, Average Loss: 3.663, avg. samples / sec: 516.94
Iteration:  31520, Loss function: 3.683, Average Loss: 3.663, avg. samples / sec: 516.61
Iteration:  31540, Loss function: 3.715, Average Loss: 3.663, avg. samples / sec: 517.20
Iteration:  31560, Loss function: 3.687, Average Loss: 3.662, avg. samples / sec: 516.33
Iteration:  31580, Loss function: 3.521, Average Loss: 3.662, avg. samples / sec: 517.01
Iteration:  31600, Loss function: 3.777, Average Loss: 3.662, avg. samples / sec: 516.80
Iteration:  31620, Loss function: 3.585, Average Loss: 3.660, avg. samples / sec: 517.77
Iteration:  31640, Loss function: 3.696, Average Loss: 3.660, avg. samples / sec: 516.91
Iteration:  31660, Loss function: 3.951, Average Loss: 3.661, avg. samples / sec: 516.31
Iteration:  31680, Loss function: 3.669, Average Loss: 3.660, avg. samples / sec: 517.65
Iteration:  31700, Loss function: 3.555, Average Loss: 3.660, avg. samples / sec: 516.91
Iteration:  31720, Loss function: 3.738, Average Loss: 3.660, avg. samples / sec: 517.49
Iteration:  31740, Loss function: 3.753, Average Loss: 3.660, avg. samples / sec: 517.01
Iteration:  31760, Loss function: 3.807, Average Loss: 3.660, avg. samples / sec: 517.56
Iteration:  31780, Loss function: 3.659, Average Loss: 3.660, avg. samples / sec: 517.60
Iteration:  31800, Loss function: 3.632, Average Loss: 3.660, avg. samples / sec: 517.50
Iteration:  31820, Loss function: 3.416, Average Loss: 3.660, avg. samples / sec: 517.12
Iteration:  31840, Loss function: 3.401, Average Loss: 3.660, avg. samples / sec: 516.61
Iteration:  31860, Loss function: 3.877, Average Loss: 3.660, avg. samples / sec: 518.00
Iteration:  31880, Loss function: 3.384, Average Loss: 3.658, avg. samples / sec: 515.55
Iteration:  31900, Loss function: 3.661, Average Loss: 3.657, avg. samples / sec: 516.20

:::MLPv0.5.0 ssd 1556676611.823546886 (train.py:553) train_epoch: 41
Iteration:  31920, Loss function: 3.684, Average Loss: 3.657, avg. samples / sec: 517.52
Iteration:  31940, Loss function: 3.551, Average Loss: 3.657, avg. samples / sec: 516.96
Iteration:  31960, Loss function: 3.531, Average Loss: 3.656, avg. samples / sec: 516.90
Iteration:  31980, Loss function: 3.493, Average Loss: 3.656, avg. samples / sec: 517.59
Iteration:  32000, Loss function: 3.778, Average Loss: 3.657, avg. samples / sec: 517.21
Iteration:  32020, Loss function: 3.566, Average Loss: 3.657, avg. samples / sec: 517.03
Iteration:  32040, Loss function: 3.514, Average Loss: 3.656, avg. samples / sec: 517.71
Iteration:  32060, Loss function: 3.740, Average Loss: 3.655, avg. samples / sec: 517.87
Iteration:  32080, Loss function: 3.534, Average Loss: 3.655, avg. samples / sec: 517.58
Iteration:  32100, Loss function: 3.627, Average Loss: 3.656, avg. samples / sec: 517.01
Iteration:  32120, Loss function: 3.573, Average Loss: 3.656, avg. samples / sec: 516.83
Iteration:  32140, Loss function: 3.495, Average Loss: 3.656, avg. samples / sec: 518.01
Iteration:  32160, Loss function: 3.850, Average Loss: 3.656, avg. samples / sec: 517.56
Iteration:  32180, Loss function: 3.681, Average Loss: 3.657, avg. samples / sec: 517.00
Iteration:  32200, Loss function: 3.736, Average Loss: 3.656, avg. samples / sec: 517.25
Iteration:  32220, Loss function: 3.544, Average Loss: 3.656, avg. samples / sec: 517.58
Iteration:  32240, Loss function: 3.719, Average Loss: 3.657, avg. samples / sec: 516.70
Iteration:  32260, Loss function: 3.722, Average Loss: 3.658, avg. samples / sec: 517.36
Iteration:  32280, Loss function: 3.556, Average Loss: 3.656, avg. samples / sec: 517.62
Iteration:  32300, Loss function: 3.491, Average Loss: 3.656, avg. samples / sec: 516.75
Iteration:  32320, Loss function: 3.509, Average Loss: 3.657, avg. samples / sec: 517.21
Iteration:  32340, Loss function: 3.794, Average Loss: 3.657, avg. samples / sec: 516.75
Iteration:  32360, Loss function: 3.455, Average Loss: 3.656, avg. samples / sec: 517.13
Iteration:  32380, Loss function: 3.668, Average Loss: 3.655, avg. samples / sec: 517.39
Iteration:  32400, Loss function: 3.742, Average Loss: 3.655, avg. samples / sec: 517.95
Iteration:  32420, Loss function: 3.517, Average Loss: 3.654, avg. samples / sec: 517.63
Iteration:  32440, Loss function: 3.435, Average Loss: 3.655, avg. samples / sec: 517.19
Iteration:  32460, Loss function: 3.623, Average Loss: 3.654, avg. samples / sec: 517.69
Iteration:  32480, Loss function: 3.929, Average Loss: 3.655, avg. samples / sec: 517.21
Iteration:  32500, Loss function: 3.510, Average Loss: 3.655, avg. samples / sec: 516.98
Iteration:  32520, Loss function: 3.712, Average Loss: 3.656, avg. samples / sec: 517.70
Iteration:  32540, Loss function: 3.793, Average Loss: 3.654, avg. samples / sec: 517.57
Iteration:  32560, Loss function: 3.740, Average Loss: 3.655, avg. samples / sec: 517.22
Iteration:  32580, Loss function: 3.745, Average Loss: 3.655, avg. samples / sec: 516.62
Iteration:  32600, Loss function: 3.897, Average Loss: 3.655, avg. samples / sec: 514.72
Iteration:  32620, Loss function: 3.709, Average Loss: 3.656, avg. samples / sec: 514.92
Iteration:  32640, Loss function: 3.361, Average Loss: 3.654, avg. samples / sec: 516.52
Iteration:  32660, Loss function: 3.738, Average Loss: 3.653, avg. samples / sec: 515.23
Iteration:  32680, Loss function: 4.036, Average Loss: 3.654, avg. samples / sec: 516.28

:::MLPv0.5.0 ssd 1556676840.525272131 (train.py:553) train_epoch: 42
Iteration:  32700, Loss function: 3.667, Average Loss: 3.654, avg. samples / sec: 515.84
Iteration:  32720, Loss function: 3.376, Average Loss: 3.653, avg. samples / sec: 515.99
Iteration:  32740, Loss function: 3.622, Average Loss: 3.652, avg. samples / sec: 516.39
Iteration:  32760, Loss function: 3.792, Average Loss: 3.652, avg. samples / sec: 516.36
Iteration:  32780, Loss function: 3.718, Average Loss: 3.653, avg. samples / sec: 515.18
Iteration:  32800, Loss function: 3.506, Average Loss: 3.653, avg. samples / sec: 515.37
Iteration:  32820, Loss function: 3.374, Average Loss: 3.651, avg. samples / sec: 516.15
Iteration:  32840, Loss function: 3.739, Average Loss: 3.650, avg. samples / sec: 517.14
Iteration:  32860, Loss function: 3.516, Average Loss: 3.650, avg. samples / sec: 517.74
Iteration:  32880, Loss function: 3.678, Average Loss: 3.650, avg. samples / sec: 517.75
Iteration:  32900, Loss function: 3.606, Average Loss: 3.651, avg. samples / sec: 517.70
Iteration:  32920, Loss function: 3.660, Average Loss: 3.651, avg. samples / sec: 517.34
Iteration:  32940, Loss function: 3.642, Average Loss: 3.650, avg. samples / sec: 516.76
Iteration:  32960, Loss function: 3.731, Average Loss: 3.650, avg. samples / sec: 517.59
Iteration:  32980, Loss function: 3.608, Average Loss: 3.650, avg. samples / sec: 516.83
Iteration:  33000, Loss function: 3.527, Average Loss: 3.650, avg. samples / sec: 516.94
Iteration:  33020, Loss function: 3.637, Average Loss: 3.650, avg. samples / sec: 515.79
Iteration:  33040, Loss function: 3.585, Average Loss: 3.651, avg. samples / sec: 515.76
Iteration:  33060, Loss function: 3.677, Average Loss: 3.650, avg. samples / sec: 516.75
Iteration:  33080, Loss function: 3.641, Average Loss: 3.650, avg. samples / sec: 516.93
Iteration:  33100, Loss function: 3.862, Average Loss: 3.650, avg. samples / sec: 516.77
Iteration:  33120, Loss function: 3.592, Average Loss: 3.650, avg. samples / sec: 517.65
Iteration:  33140, Loss function: 3.609, Average Loss: 3.649, avg. samples / sec: 517.61
Iteration:  33160, Loss function: 3.668, Average Loss: 3.648, avg. samples / sec: 517.30
Iteration:  33180, Loss function: 3.702, Average Loss: 3.649, avg. samples / sec: 517.03
Iteration:  33200, Loss function: 3.839, Average Loss: 3.648, avg. samples / sec: 517.31
Iteration:  33220, Loss function: 3.742, Average Loss: 3.648, avg. samples / sec: 516.36
Iteration:  33240, Loss function: 3.628, Average Loss: 3.647, avg. samples / sec: 516.94
Iteration:  33260, Loss function: 3.714, Average Loss: 3.648, avg. samples / sec: 516.54
Iteration:  33280, Loss function: 3.724, Average Loss: 3.647, avg. samples / sec: 517.67
Iteration:  33300, Loss function: 3.598, Average Loss: 3.647, avg. samples / sec: 517.83
Iteration:  33320, Loss function: 3.676, Average Loss: 3.647, avg. samples / sec: 517.37
Iteration:  33340, Loss function: 3.533, Average Loss: 3.647, avg. samples / sec: 517.65
Iteration:  33360, Loss function: 3.512, Average Loss: 3.647, avg. samples / sec: 516.66
Iteration:  33380, Loss function: 3.664, Average Loss: 3.648, avg. samples / sec: 516.97
Iteration:  33400, Loss function: 3.540, Average Loss: 3.648, avg. samples / sec: 517.29
Iteration:  33420, Loss function: 3.478, Average Loss: 3.648, avg. samples / sec: 517.29
Iteration:  33440, Loss function: 3.487, Average Loss: 3.647, avg. samples / sec: 517.34
Iteration:  33460, Loss function: 3.801, Average Loss: 3.647, avg. samples / sec: 516.50

:::MLPv0.5.0 ssd 1556677069.314591408 (train.py:553) train_epoch: 43
Iteration:  33480, Loss function: 3.395, Average Loss: 3.646, avg. samples / sec: 516.52
Iteration:  33500, Loss function: 3.619, Average Loss: 3.647, avg. samples / sec: 514.87
Iteration:  33520, Loss function: 3.552, Average Loss: 3.646, avg. samples / sec: 515.39
Iteration:  33540, Loss function: 3.754, Average Loss: 3.645, avg. samples / sec: 517.56
Iteration:  33560, Loss function: 3.309, Average Loss: 3.646, avg. samples / sec: 518.10
Iteration:  33580, Loss function: 3.744, Average Loss: 3.646, avg. samples / sec: 518.00
Iteration:  33600, Loss function: 3.769, Average Loss: 3.644, avg. samples / sec: 517.49
Iteration:  33620, Loss function: 3.809, Average Loss: 3.643, avg. samples / sec: 516.85
Iteration:  33640, Loss function: 3.786, Average Loss: 3.644, avg. samples / sec: 517.52
Iteration:  33660, Loss function: 3.666, Average Loss: 3.645, avg. samples / sec: 517.73
Iteration:  33680, Loss function: 3.616, Average Loss: 3.645, avg. samples / sec: 517.99
lr decay step #1

:::MLPv0.5.0 ssd 1556677134.443870783 (train.py:578) opt_learning_rate: 0.0012000000000000001


:::MLPv0.5.0 ssd 1556677134.577650547 (train.py:217) nms_threshold: 0.5

:::MLPv0.5.0 ssd 1556677134.578082800 (train.py:219) nms_max_detections: 200

:::MLPv0.5.0 ssd 1556677134.578459501 (train.py:220) eval_start: 43
Parsing batch: 0/46Parsing batch: 1/46Parsing batch: 2/46Parsing batch: 3/46Parsing batch: 4/46Parsing batch: 5/46Parsing batch: 6/46Parsing batch: 7/46Parsing batch: 8/46Parsing batch: 9/46Parsing batch: 10/46Parsing batch: 11/46No object detected in idx: 10
Parsing batch: 12/46Parsing batch: 13/46Parsing batch: 14/46Parsing batch: 15/46Parsing batch: 16/46Parsing batch: 17/46Parsing batch: 18/46Parsing batch: 19/46Parsing batch: 20/46Parsing batch: 21/46Parsing batch: 22/46Parsing batch: 23/46Parsing batch: 24/46Parsing batch: 25/46Parsing batch: 26/46Parsing batch: 27/46Parsing batch: 28/46Parsing batch: 29/46Parsing batch: 30/46Parsing batch: 31/46Parsing batch: 32/46Parsing batch: 33/46Parsing batch: 34/46Parsing batch: 35/46Parsing batch: 36/46Parsing batch: 37/46Parsing batch: 38/46Parsing batch: 39/46Parsing batch: 40/46Parsing batch: 41/46Parsing batch: 42/46Parsing batch: 43/46Parsing batch: 44/46Parsing batch: 45/46Loading and preparing results...
Converting ndarray to lists...
(391236, 7)
0/391236
DONE (t=2.39s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.58s).
Accumulating evaluation results...
DONE (t=1.13s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.169
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.315
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.165
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.043
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.176
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.182
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.268
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.081
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.301
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.429
Current AP: 0.16928 AP goal: 0.21200

:::MLPv0.5.0 ssd 1556677408.648478270 (train.py:330) eval_size: 4952

:::MLPv0.5.0 ssd 1556677408.648981094 (train.py:333) eval_accuracy: {"epoch": 43, "value": 0.1692818800532686}

:::MLPv0.5.0 ssd 1556677408.649346590 (train.py:336) eval_iteration_accuracy: {"epoch": 43, "value": 0.1692818800532686}

:::MLPv0.5.0 ssd 1556677408.649700880 (train.py:337) eval_target: 0.212

:::MLPv0.5.0 ssd 1556677408.650051117 (train.py:338) eval_stop: 43
Iteration:  33700, Loss function: 3.736, Average Loss: 3.643, avg. samples / sec: 10.85
Iteration:  33720, Loss function: 3.306, Average Loss: 3.639, avg. samples / sec: 522.41
Iteration:  33740, Loss function: 3.418, Average Loss: 3.635, avg. samples / sec: 521.17
Iteration:  33760, Loss function: 3.409, Average Loss: 3.630, avg. samples / sec: 520.12
Iteration:  33780, Loss function: 3.268, Average Loss: 3.625, avg. samples / sec: 520.20
Iteration:  33800, Loss function: 3.099, Average Loss: 3.620, avg. samples / sec: 519.25
Iteration:  33820, Loss function: 3.183, Average Loss: 3.614, avg. samples / sec: 518.79
Iteration:  33840, Loss function: 3.374, Average Loss: 3.608, avg. samples / sec: 517.24
Iteration:  33860, Loss function: 3.060, Average Loss: 3.601, avg. samples / sec: 519.32
Iteration:  33880, Loss function: 3.495, Average Loss: 3.596, avg. samples / sec: 519.38
Iteration:  33900, Loss function: 3.371, Average Loss: 3.591, avg. samples / sec: 518.20
Iteration:  33920, Loss function: 3.146, Average Loss: 3.583, avg. samples / sec: 517.33
Iteration:  33940, Loss function: 2.984, Average Loss: 3.577, avg. samples / sec: 518.52
Iteration:  33960, Loss function: 3.191, Average Loss: 3.570, avg. samples / sec: 518.26
Iteration:  33980, Loss function: 3.085, Average Loss: 3.564, avg. samples / sec: 518.10
Iteration:  34000, Loss function: 3.244, Average Loss: 3.558, avg. samples / sec: 518.59
Iteration:  34020, Loss function: 3.321, Average Loss: 3.551, avg. samples / sec: 517.88
Iteration:  34040, Loss function: 3.315, Average Loss: 3.545, avg. samples / sec: 518.06
Iteration:  34060, Loss function: 3.322, Average Loss: 3.538, avg. samples / sec: 517.21
Iteration:  34080, Loss function: 3.078, Average Loss: 3.532, avg. samples / sec: 517.32
Iteration:  34100, Loss function: 3.154, Average Loss: 3.524, avg. samples / sec: 516.77
Iteration:  34120, Loss function: 3.222, Average Loss: 3.517, avg. samples / sec: 516.69
Iteration:  34140, Loss function: 2.960, Average Loss: 3.511, avg. samples / sec: 516.20
Iteration:  34160, Loss function: 3.220, Average Loss: 3.505, avg. samples / sec: 516.92
Iteration:  34180, Loss function: 3.268, Average Loss: 3.498, avg. samples / sec: 517.38
Iteration:  34200, Loss function: 3.042, Average Loss: 3.490, avg. samples / sec: 516.42
Iteration:  34220, Loss function: 3.096, Average Loss: 3.481, avg. samples / sec: 517.15
Iteration:  34240, Loss function: 3.105, Average Loss: 3.475, avg. samples / sec: 517.18

:::MLPv0.5.0 ssd 1556677571.903417349 (train.py:553) train_epoch: 44
Iteration:  34260, Loss function: 2.911, Average Loss: 3.468, avg. samples / sec: 517.33
Iteration:  34280, Loss function: 3.169, Average Loss: 3.461, avg. samples / sec: 516.95
Iteration:  34300, Loss function: 3.210, Average Loss: 3.453, avg. samples / sec: 517.49
Iteration:  34320, Loss function: 3.143, Average Loss: 3.447, avg. samples / sec: 517.66
Iteration:  34340, Loss function: 3.158, Average Loss: 3.441, avg. samples / sec: 517.10
Iteration:  34360, Loss function: 3.307, Average Loss: 3.435, avg. samples / sec: 517.12
Iteration:  34380, Loss function: 2.898, Average Loss: 3.425, avg. samples / sec: 516.01
Iteration:  34400, Loss function: 3.013, Average Loss: 3.419, avg. samples / sec: 517.05
Iteration:  34420, Loss function: 3.157, Average Loss: 3.411, avg. samples / sec: 517.58
Iteration:  34440, Loss function: 2.976, Average Loss: 3.404, avg. samples / sec: 516.89
Iteration:  34460, Loss function: 3.008, Average Loss: 3.397, avg. samples / sec: 517.10
Iteration:  34480, Loss function: 3.148, Average Loss: 3.393, avg. samples / sec: 516.80
Iteration:  34500, Loss function: 3.193, Average Loss: 3.389, avg. samples / sec: 517.40
Iteration:  34520, Loss function: 3.239, Average Loss: 3.386, avg. samples / sec: 517.27
Iteration:  34540, Loss function: 3.315, Average Loss: 3.380, avg. samples / sec: 517.60
Iteration:  34560, Loss function: 3.123, Average Loss: 3.377, avg. samples / sec: 517.16
Iteration:  34580, Loss function: 3.271, Average Loss: 3.373, avg. samples / sec: 517.11
Iteration:  34600, Loss function: 3.053, Average Loss: 3.369, avg. samples / sec: 516.02
Iteration:  34620, Loss function: 3.110, Average Loss: 3.364, avg. samples / sec: 516.82
Iteration:  34640, Loss function: 3.110, Average Loss: 3.360, avg. samples / sec: 516.93
Iteration:  34660, Loss function: 3.164, Average Loss: 3.357, avg. samples / sec: 517.41
Iteration:  34680, Loss function: 2.974, Average Loss: 3.353, avg. samples / sec: 515.74
Iteration:  34700, Loss function: 3.245, Average Loss: 3.349, avg. samples / sec: 516.52
Iteration:  34720, Loss function: 3.313, Average Loss: 3.345, avg. samples / sec: 517.65
Iteration:  34740, Loss function: 3.092, Average Loss: 3.340, avg. samples / sec: 517.59
Iteration:  34760, Loss function: 2.868, Average Loss: 3.336, avg. samples / sec: 516.92
Iteration:  34780, Loss function: 3.080, Average Loss: 3.332, avg. samples / sec: 516.88
Iteration:  34800, Loss function: 2.932, Average Loss: 3.327, avg. samples / sec: 517.36
Iteration:  34820, Loss function: 3.197, Average Loss: 3.323, avg. samples / sec: 515.65
Iteration:  34840, Loss function: 3.046, Average Loss: 3.319, avg. samples / sec: 516.51
Iteration:  34860, Loss function: 3.154, Average Loss: 3.314, avg. samples / sec: 517.86
Iteration:  34880, Loss function: 3.060, Average Loss: 3.310, avg. samples / sec: 517.11
Iteration:  34900, Loss function: 3.184, Average Loss: 3.306, avg. samples / sec: 517.58
Iteration:  34920, Loss function: 3.084, Average Loss: 3.302, avg. samples / sec: 517.49
Iteration:  34940, Loss function: 3.133, Average Loss: 3.297, avg. samples / sec: 517.35
Iteration:  34960, Loss function: 3.022, Average Loss: 3.292, avg. samples / sec: 517.18
Iteration:  34980, Loss function: 3.134, Average Loss: 3.287, avg. samples / sec: 517.19
Iteration:  35000, Loss function: 3.362, Average Loss: 3.282, avg. samples / sec: 517.06

:::MLPv0.5.0 ssd 1556677800.908155680 (train.py:553) train_epoch: 45
Iteration:  35020, Loss function: 3.099, Average Loss: 3.278, avg. samples / sec: 516.86
Iteration:  35040, Loss function: 3.129, Average Loss: 3.274, avg. samples / sec: 516.37
Iteration:  35060, Loss function: 2.951, Average Loss: 3.270, avg. samples / sec: 516.01
Iteration:  35080, Loss function: 3.166, Average Loss: 3.264, avg. samples / sec: 517.16
Iteration:  35100, Loss function: 3.038, Average Loss: 3.260, avg. samples / sec: 517.08
Iteration:  35120, Loss function: 2.994, Average Loss: 3.257, avg. samples / sec: 517.70
Iteration:  35140, Loss function: 2.837, Average Loss: 3.251, avg. samples / sec: 517.30
Iteration:  35160, Loss function: 2.819, Average Loss: 3.245, avg. samples / sec: 516.72
Iteration:  35180, Loss function: 3.148, Average Loss: 3.241, avg. samples / sec: 517.72
Iteration:  35200, Loss function: 2.898, Average Loss: 3.236, avg. samples / sec: 517.10
Iteration:  35220, Loss function: 2.997, Average Loss: 3.233, avg. samples / sec: 517.11
Iteration:  35240, Loss function: 3.151, Average Loss: 3.229, avg. samples / sec: 517.50
Iteration:  35260, Loss function: 3.166, Average Loss: 3.226, avg. samples / sec: 516.41
Iteration:  35280, Loss function: 3.424, Average Loss: 3.224, avg. samples / sec: 517.29
Iteration:  35300, Loss function: 3.060, Average Loss: 3.222, avg. samples / sec: 516.67
Iteration:  35320, Loss function: 2.939, Average Loss: 3.219, avg. samples / sec: 517.75
Iteration:  35340, Loss function: 3.240, Average Loss: 3.218, avg. samples / sec: 517.88
Iteration:  35360, Loss function: 3.242, Average Loss: 3.216, avg. samples / sec: 517.25
Iteration:  35380, Loss function: 3.120, Average Loss: 3.213, avg. samples / sec: 517.29
Iteration:  35400, Loss function: 3.134, Average Loss: 3.211, avg. samples / sec: 516.14
Iteration:  35420, Loss function: 3.028, Average Loss: 3.208, avg. samples / sec: 516.06
Iteration:  35440, Loss function: 2.984, Average Loss: 3.207, avg. samples / sec: 517.16
Iteration:  35460, Loss function: 3.107, Average Loss: 3.204, avg. samples / sec: 517.11
Iteration:  35480, Loss function: 3.049, Average Loss: 3.202, avg. samples / sec: 517.00
Iteration:  35500, Loss function: 2.949, Average Loss: 3.199, avg. samples / sec: 517.18
Iteration:  35520, Loss function: 2.873, Average Loss: 3.196, avg. samples / sec: 516.79
Iteration:  35540, Loss function: 2.983, Average Loss: 3.194, avg. samples / sec: 517.70
Iteration:  35560, Loss function: 3.072, Average Loss: 3.191, avg. samples / sec: 517.20
Iteration:  35580, Loss function: 3.213, Average Loss: 3.188, avg. samples / sec: 516.47
Iteration:  35600, Loss function: 2.891, Average Loss: 3.186, avg. samples / sec: 516.77
Iteration:  35620, Loss function: 3.196, Average Loss: 3.183, avg. samples / sec: 517.36
Iteration:  35640, Loss function: 3.070, Average Loss: 3.181, avg. samples / sec: 517.82
Iteration:  35660, Loss function: 3.201, Average Loss: 3.178, avg. samples / sec: 516.59
Iteration:  35680, Loss function: 2.892, Average Loss: 3.175, avg. samples / sec: 517.30
Iteration:  35700, Loss function: 2.951, Average Loss: 3.173, avg. samples / sec: 517.60
Iteration:  35720, Loss function: 3.027, Average Loss: 3.170, avg. samples / sec: 517.58
Iteration:  35740, Loss function: 3.088, Average Loss: 3.167, avg. samples / sec: 515.74
Iteration:  35760, Loss function: 2.877, Average Loss: 3.163, avg. samples / sec: 517.51
Iteration:  35780, Loss function: 2.960, Average Loss: 3.160, avg. samples / sec: 513.44

:::MLPv0.5.0 ssd 1556678029.681983948 (train.py:553) train_epoch: 46
Iteration:  35800, Loss function: 3.106, Average Loss: 3.157, avg. samples / sec: 514.63
Iteration:  35820, Loss function: 2.877, Average Loss: 3.153, avg. samples / sec: 515.70
Iteration:  35840, Loss function: 2.885, Average Loss: 3.151, avg. samples / sec: 516.61
Iteration:  35860, Loss function: 3.157, Average Loss: 3.147, avg. samples / sec: 517.31
Iteration:  35880, Loss function: 3.194, Average Loss: 3.144, avg. samples / sec: 517.44
Iteration:  35900, Loss function: 2.976, Average Loss: 3.143, avg. samples / sec: 517.23
Iteration:  35920, Loss function: 2.881, Average Loss: 3.140, avg. samples / sec: 517.10
Iteration:  35940, Loss function: 3.151, Average Loss: 3.136, avg. samples / sec: 517.79
Iteration:  35960, Loss function: 2.766, Average Loss: 3.132, avg. samples / sec: 516.39
Iteration:  35980, Loss function: 3.030, Average Loss: 3.130, avg. samples / sec: 516.69
Iteration:  36000, Loss function: 3.079, Average Loss: 3.127, avg. samples / sec: 517.61
Iteration:  36020, Loss function: 2.977, Average Loss: 3.125, avg. samples / sec: 517.47
Iteration:  36040, Loss function: 3.134, Average Loss: 3.124, avg. samples / sec: 517.20
Iteration:  36060, Loss function: 3.001, Average Loss: 3.124, avg. samples / sec: 517.02
Iteration:  36080, Loss function: 2.850, Average Loss: 3.123, avg. samples / sec: 516.82
Iteration:  36100, Loss function: 2.967, Average Loss: 3.121, avg. samples / sec: 517.44
Iteration:  36120, Loss function: 3.034, Average Loss: 3.119, avg. samples / sec: 517.59
Iteration:  36140, Loss function: 3.382, Average Loss: 3.120, avg. samples / sec: 517.45
Iteration:  36160, Loss function: 3.103, Average Loss: 3.119, avg. samples / sec: 516.03
Iteration:  36180, Loss function: 2.807, Average Loss: 3.117, avg. samples / sec: 516.85
Iteration:  36200, Loss function: 2.961, Average Loss: 3.115, avg. samples / sec: 516.29
Iteration:  36220, Loss function: 3.139, Average Loss: 3.115, avg. samples / sec: 514.50
Iteration:  36240, Loss function: 3.197, Average Loss: 3.114, avg. samples / sec: 516.52
Iteration:  36260, Loss function: 2.793, Average Loss: 3.112, avg. samples / sec: 515.72
Iteration:  36280, Loss function: 3.134, Average Loss: 3.111, avg. samples / sec: 517.51
Iteration:  36300, Loss function: 2.949, Average Loss: 3.108, avg. samples / sec: 517.24
Iteration:  36320, Loss function: 3.013, Average Loss: 3.107, avg. samples / sec: 517.17
Iteration:  36340, Loss function: 2.982, Average Loss: 3.105, avg. samples / sec: 517.21
Iteration:  36360, Loss function: 2.943, Average Loss: 3.103, avg. samples / sec: 517.03
Iteration:  36380, Loss function: 3.139, Average Loss: 3.102, avg. samples / sec: 516.86
Iteration:  36400, Loss function: 2.840, Average Loss: 3.101, avg. samples / sec: 516.47
Iteration:  36420, Loss function: 3.145, Average Loss: 3.099, avg. samples / sec: 516.36
Iteration:  36440, Loss function: 3.063, Average Loss: 3.098, avg. samples / sec: 516.63
Iteration:  36460, Loss function: 2.893, Average Loss: 3.096, avg. samples / sec: 516.74
Iteration:  36480, Loss function: 3.090, Average Loss: 3.094, avg. samples / sec: 516.92
Iteration:  36500, Loss function: 2.888, Average Loss: 3.092, avg. samples / sec: 516.95
Iteration:  36520, Loss function: 3.010, Average Loss: 3.089, avg. samples / sec: 517.09
Iteration:  36540, Loss function: 3.090, Average Loss: 3.086, avg. samples / sec: 517.18
Iteration:  36560, Loss function: 2.970, Average Loss: 3.084, avg. samples / sec: 517.73

:::MLPv0.5.0 ssd 1556678258.464890957 (train.py:553) train_epoch: 47
Iteration:  36580, Loss function: 3.025, Average Loss: 3.081, avg. samples / sec: 517.67
Iteration:  36600, Loss function: 3.200, Average Loss: 3.079, avg. samples / sec: 517.59
Iteration:  36620, Loss function: 3.018, Average Loss: 3.077, avg. samples / sec: 516.33
Iteration:  36640, Loss function: 3.071, Average Loss: 3.075, avg. samples / sec: 516.61
Iteration:  36660, Loss function: 3.216, Average Loss: 3.073, avg. samples / sec: 516.82
Iteration:  36680, Loss function: 3.053, Average Loss: 3.072, avg. samples / sec: 516.71
Iteration:  36700, Loss function: 2.798, Average Loss: 3.070, avg. samples / sec: 517.88
Iteration:  36720, Loss function: 2.987, Average Loss: 3.067, avg. samples / sec: 517.56
Iteration:  36740, Loss function: 3.047, Average Loss: 3.064, avg. samples / sec: 517.55
Iteration:  36760, Loss function: 3.223, Average Loss: 3.063, avg. samples / sec: 515.43
Iteration:  36780, Loss function: 3.065, Average Loss: 3.061, avg. samples / sec: 517.67
Iteration:  36800, Loss function: 2.879, Average Loss: 3.060, avg. samples / sec: 517.41
Iteration:  36820, Loss function: 3.120, Average Loss: 3.059, avg. samples / sec: 517.38
Iteration:  36840, Loss function: 3.209, Average Loss: 3.059, avg. samples / sec: 517.42
Iteration:  36860, Loss function: 3.005, Average Loss: 3.059, avg. samples / sec: 515.64
Iteration:  36880, Loss function: 3.037, Average Loss: 3.058, avg. samples / sec: 516.69
Iteration:  36900, Loss function: 3.140, Average Loss: 3.058, avg. samples / sec: 517.28
Iteration:  36920, Loss function: 3.046, Average Loss: 3.058, avg. samples / sec: 517.13
Iteration:  36940, Loss function: 2.961, Average Loss: 3.057, avg. samples / sec: 517.17
Iteration:  36960, Loss function: 3.032, Average Loss: 3.056, avg. samples / sec: 517.25
Iteration:  36980, Loss function: 3.009, Average Loss: 3.056, avg. samples / sec: 516.98
Iteration:  37000, Loss function: 3.246, Average Loss: 3.056, avg. samples / sec: 516.56
Iteration:  37020, Loss function: 2.799, Average Loss: 3.055, avg. samples / sec: 515.83
Iteration:  37040, Loss function: 2.810, Average Loss: 3.053, avg. samples / sec: 515.59
Iteration:  37060, Loss function: 2.826, Average Loss: 3.052, avg. samples / sec: 516.82
Iteration:  37080, Loss function: 3.026, Average Loss: 3.051, avg. samples / sec: 517.81
Iteration:  37100, Loss function: 3.055, Average Loss: 3.050, avg. samples / sec: 516.68
Iteration:  37120, Loss function: 2.714, Average Loss: 3.048, avg. samples / sec: 515.85
Iteration:  37140, Loss function: 2.862, Average Loss: 3.047, avg. samples / sec: 517.00
Iteration:  37160, Loss function: 3.070, Average Loss: 3.047, avg. samples / sec: 516.87
Iteration:  37180, Loss function: 2.993, Average Loss: 3.045, avg. samples / sec: 517.28
Iteration:  37200, Loss function: 3.015, Average Loss: 3.044, avg. samples / sec: 517.26
Iteration:  37220, Loss function: 2.974, Average Loss: 3.042, avg. samples / sec: 517.58
Iteration:  37240, Loss function: 2.956, Average Loss: 3.041, avg. samples / sec: 517.17
Iteration:  37260, Loss function: 3.095, Average Loss: 3.040, avg. samples / sec: 517.94
Iteration:  37280, Loss function: 2.822, Average Loss: 3.038, avg. samples / sec: 517.38
Iteration:  37300, Loss function: 2.737, Average Loss: 3.037, avg. samples / sec: 517.83
Iteration:  37320, Loss function: 3.090, Average Loss: 3.034, avg. samples / sec: 516.73
Iteration:  37340, Loss function: 2.976, Average Loss: 3.031, avg. samples / sec: 516.27

:::MLPv0.5.0 ssd 1556678487.219198704 (train.py:553) train_epoch: 48
Iteration:  37360, Loss function: 3.079, Average Loss: 3.030, avg. samples / sec: 516.65
Iteration:  37380, Loss function: 2.984, Average Loss: 3.029, avg. samples / sec: 517.09
Iteration:  37400, Loss function: 2.950, Average Loss: 3.027, avg. samples / sec: 517.27
Iteration:  37420, Loss function: 2.839, Average Loss: 3.025, avg. samples / sec: 518.10
Iteration:  37440, Loss function: 3.051, Average Loss: 3.024, avg. samples / sec: 518.15
Iteration:  37460, Loss function: 3.060, Average Loss: 3.024, avg. samples / sec: 517.17
Iteration:  37480, Loss function: 2.969, Average Loss: 3.021, avg. samples / sec: 516.34
Iteration:  37500, Loss function: 2.848, Average Loss: 3.017, avg. samples / sec: 517.72
Iteration:  37520, Loss function: 3.157, Average Loss: 3.015, avg. samples / sec: 516.96
Iteration:  37540, Loss function: 3.170, Average Loss: 3.014, avg. samples / sec: 516.32
Iteration:  37560, Loss function: 2.865, Average Loss: 3.013, avg. samples / sec: 515.45
Iteration:  37580, Loss function: 2.972, Average Loss: 3.012, avg. samples / sec: 515.93
Iteration:  37600, Loss function: 2.952, Average Loss: 3.011, avg. samples / sec: 516.99
Iteration:  37620, Loss function: 3.140, Average Loss: 3.012, avg. samples / sec: 516.84
Iteration:  37640, Loss function: 2.735, Average Loss: 3.011, avg. samples / sec: 515.34
Iteration:  37660, Loss function: 2.976, Average Loss: 3.011, avg. samples / sec: 515.02
Iteration:  37680, Loss function: 3.055, Average Loss: 3.011, avg. samples / sec: 516.67
Iteration:  37700, Loss function: 3.156, Average Loss: 3.012, avg. samples / sec: 515.99
Iteration:  37720, Loss function: 3.135, Average Loss: 3.011, avg. samples / sec: 516.27
Iteration:  37740, Loss function: 2.875, Average Loss: 3.010, avg. samples / sec: 515.72
Iteration:  37760, Loss function: 3.045, Average Loss: 3.010, avg. samples / sec: 516.12
Iteration:  37780, Loss function: 2.858, Average Loss: 3.011, avg. samples / sec: 515.43
Iteration:  37800, Loss function: 2.941, Average Loss: 3.010, avg. samples / sec: 513.51
Iteration:  37820, Loss function: 3.052, Average Loss: 3.010, avg. samples / sec: 515.75
Iteration:  37840, Loss function: 3.052, Average Loss: 3.009, avg. samples / sec: 516.23
Iteration:  37860, Loss function: 2.905, Average Loss: 3.007, avg. samples / sec: 513.97
Iteration:  37880, Loss function: 2.945, Average Loss: 3.007, avg. samples / sec: 516.18


:::MLPv0.5.0 ssd 1556678646.514145136 (train.py:217) nms_threshold: 0.5

:::MLPv0.5.0 ssd 1556678646.514718533 (train.py:219) nms_max_detections: 200

:::MLPv0.5.0 ssd 1556678646.515157700 (train.py:220) eval_start: 48
Parsing batch: 0/46Parsing batch: 1/46Parsing batch: 2/46Parsing batch: 3/46Parsing batch: 4/46Parsing batch: 5/46Parsing batch: 6/46Parsing batch: 7/46Parsing batch: 8/46Parsing batch: 9/46Parsing batch: 10/46Parsing batch: 11/46Parsing batch: 12/46Parsing batch: 13/46Parsing batch: 14/46Parsing batch: 15/46Parsing batch: 16/46Parsing batch: 17/46Parsing batch: 18/46Parsing batch: 19/46Parsing batch: 20/46Parsing batch: 21/46Parsing batch: 22/46Parsing batch: 23/46Parsing batch: 24/46Parsing batch: 25/46Parsing batch: 26/46Parsing batch: 27/46Parsing batch: 28/46Parsing batch: 29/46Parsing batch: 30/46Parsing batch: 31/46Parsing batch: 32/46Parsing batch: 33/46Parsing batch: 34/46Parsing batch: 35/46Parsing batch: 36/46Parsing batch: 37/46Parsing batch: 38/46Parsing batch: 39/46Parsing batch: 40/46Parsing batch: 41/46Parsing batch: 42/46Parsing batch: 43/46Parsing batch: 44/46Parsing batch: 45/46Loading and preparing results...
Converting ndarray to lists...
(307816, 7)
0/307816
DONE (t=1.54s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.44s).
Accumulating evaluation results...
DONE (t=0.91s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.218
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.377
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.058
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.229
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.352
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.215
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.311
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.097
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.351
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.512
Current AP: 0.21822 AP goal: 0.21200

:::MLPv0.5.0 ssd 1556678891.008109808 (train.py:330) eval_size: 4952

:::MLPv0.5.0 ssd 1556678891.008610487 (train.py:333) eval_accuracy: {"epoch": 48, "value": 0.21822029455945413}

:::MLPv0.5.0 ssd 1556678891.008983850 (train.py:336) eval_iteration_accuracy: {"epoch": 48, "value": 0.21822029455945413}

:::MLPv0.5.0 ssd 1556678891.009347916 (train.py:337) eval_target: 0.212

:::MLPv0.5.0 ssd 1556678891.009702682 (train.py:338) eval_stop: 48

:::MLPv0.5.0 ssd 1556678891.917556763 (train.py:706) run_stop: {"success": true}

:::MLPv0.5.0 ssd 1556678891.917927265 (train.py:707) run_final
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2019-05-01 02:48:15 AM
RESULT,OBJECT_DETECTION,,11997,nvidia,2019-04-30 11:28:18 PM
